{
	"wait": 30000,
	"factoids": {
		"2048": {
			"value": "2048 <http://gabrielecirulli.github.io/2048/>",
			"creator": "ljharb",
			"date": "2014-03-19T23:56:47.738Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"json_encode": {
			"value": "When you need to pass PHP variables to JavaScript, use the PHP method json_encode. For example: var info = (<?php echo json_encode($info); ?>); However, JavaScript goes in .js files ONLY. Don't mix JS with your HTML output. See `!csp`.",
			"popularity": 19,
			"editors": [
				"eboy"
			]
		},
		"w3schools": {
			"value": "w3schools has spent over a decade subverting search engines to appear at the top of search results, and while it *appears* useful for newcomers, it is in fact of very low quality. Try !eloquent, https://github.com/freeCodeCamp/freeCodeCamp, and http://w3fools.com/",
			"popularity": 372,
			"editors": [
				"ljharb",
				"graingert"
			],
			"changes": [
				{
					"date": "2017-01-31T03:41:36.567Z",
					"editor": "ljharb",
					"old-value": "W3Schools is not related to the W3C and has many problems: http://w3fools.com/",
					"new-value": "w3schools has spent over a decade subverting search engines to appear at the top of search results, and while it *appears* useful for newcomers, it is not. Try !eloquent and https://github.com/freeCodeCamp/freeCodeCamp"
				},
				{
					"date": "2017-01-31T03:53:42.559Z",
					"editor": "ljharb",
					"old-value": "w3schools has spent over a decade subverting search engines to appear at the top of search results, and while it *appears* useful for newcomers, it is not. Try !eloquent and https://github.com/freeCodeCamp/freeCodeCamp",
					"new-value": "w3schools has spent over a decade subverting search engines to appear at the top of search results, and while it *appears* useful for newcomers, it is in fact of very low quality. Try !eloquent and https://github.com/freeCodeCamp/freeCodeCamp"
				},
				{
					"date": "2017-01-31T15:04:04.985Z",
					"editor": "graingert",
					"old-value": "w3schools has spent over a decade subverting search engines to appear at the top of search results, and while it *appears* useful for newcomers, it is in fact of very low quality. Try !eloquent and https://github.com/freeCodeCamp/freeCodeCamp",
					"new-value": "w3schools has spent over a decade subverting search engines to appear at the top of search results, and while it *appears* useful for newcomers, it is in fact of very low quality. Try !eloquent, https://github.com/freeCodeCamp/freeCodeCamp, and http://w3fools.com/"
				}
			]
		},
		"iframe": {
			"value": "To get the document element of the iframe, use: iframe.contentWindow.document; However, cross-domain access to an iframe is disallowed.",
			"popularity": 22
		},
		"this": {
			"value": "A function call of the form `a.b()` calls the function with `this` being the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. Note that arrow functions and functions produced by `Function.prototype.bind` ignore the passed `this` value. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this",
			"popularity": 1018,
			"editors": [
				"ImBcmDth",
				"dwcook",
				"Maxdamantus",
				"ljharb",
				"sacho",
				"deltab",
				"cjohnson"
			],
			"changes": [
				{
					"date": "2014-07-09T07:12:07.458Z",
					"editor": "Maxdamantus",
					"old-value": "If a function is called on an object, object.y(), then `this` within `y` refers to `object`. If called directly: y(), `this` refers to the global object - for browsers it's `window`. `this` can be set explicitly by using y.call(thisArg, argument1, argument2, ...), or with .apply() and .bind(). For further explanation, see: http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"new-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the \"b\" property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this"
				},
				{
					"date": "2014-07-09T07:14:22.099Z",
					"editor": "Maxdamantus",
					"old-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the \"b\" property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this",
					"new-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the \"b\" property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this"
				},
				{
					"date": "2014-08-31T00:48:32.579Z",
					"editor": "ljharb",
					"old-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the \"b\" property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this",
					"new-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the \\\"b\\\" property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/"
				},
				{
					"date": "2014-09-02T18:13:15.039Z",
					"editor": "sacho",
					"old-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the \\\"b\\\" property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"new-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the b property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"regex": "s/\\\\\"b\\\\\"/b/"
				},
				{
					"date": "2014-09-02T18:13:54.167Z",
					"editor": "sacho",
					"old-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the b property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"new-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the `b` property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"regex": "s/the b property from/the `b` property from/"
				},
				{
					"date": "2014-10-06T09:48:15.700Z",
					"editor": "Maxdamantus",
					"old-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the `b` property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"new-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the \"b\" property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"regex": "s/`b`/\"b\"/"
				},
				{
					"date": "2015-08-15T08:50:38.821Z",
					"editor": "Maxdamantus",
					"old-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the \"b\" property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function isn't in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"new-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the \"b\" property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"regex": "s/isn't in/wasn't defined in/"
				},
				{
					"date": "2016-10-26T01:42:18.823Z",
					"editor": "deltab",
					"old-value": "If a function call is of the form `a.b()`, `this` will be the object you accessed the \"b\" property from. Otherwise, if it's of the form `a()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"new-value": "A function call of the form `a.b()` calls the function with `this` set to the value of `a`; a call of the form `f()` sets `this` to null when in strict mode, or the global object (e.g. `window`) otherwise.  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this  http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/"
				},
				{
					"date": "2017-04-26T02:04:59.600Z",
					"editor": "cjohnson",
					"old-value": "A function call of the form `a.b()` calls the function with `this` set to the value of `a`; a call of the form `f()` sets `this` to null when in strict mode, or the global object (e.g. `window`) otherwise.  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this  http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"new-value": "A function call of the form `a.b()` calls the function with `this` set to the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode.  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this  http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/"
				},
				{
					"date": "2018-04-14T11:47:46.183Z",
					"editor": "Maxdamantus",
					"old-value": "A function call of the form `a.b()` calls the function with `this` set to the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode.  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this  http://javascriptweblog.wordpress.com/2010/08/30/understanding-javascripts-this/",
					"new-value": "A function call of the form `a.b()` calls the function with `this` set to the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. Note that arrow functions and functions produced by `Function.prototype.bind` ignore the passed `this` value. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this"
				},
				{
					"date": "2018-04-14T11:50:04.804Z",
					"editor": "Maxdamantus",
					"old-value": "A function call of the form `a.b()` calls the function with `this` set to the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. Note that arrow functions and functions produced by `Function.prototype.bind` ignore the passed `this` value. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this",
					"new-value": "A function call of the form `a.b()` calls the function with `this` being the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. Note that arrow functions and functions produced by `Function.prototype.bind` ignore the passed `this` value. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this",
					"regex": "s/set to/being/"
				}
			]
		},
		"closures": {
			"value": "Introductory: http://blog.angular-university.io/really-understanding-javascript-closures . Intermediate/Advanced: http://dmitrysoshnikov.com/ecmascript/chapter-6-closures/",
			"popularity": 229,
			"editors": [
				"falafel",
				"ljharb",
				"jaawerth"
			],
			"changes": [
				{
					"date": "2015-03-01T23:54:57.643Z",
					"editor": "falafel",
					"old-value": "For experienced JavaScripters: http://jibbering.com/faq/faq_notes/closures.html For newbies: http://www.javascriptkit.com/javatutors/closures.shtml",
					"new-value": "For experienced users: http://dmitrysoshnikov.com/ecmascript/chapter-6-closures/ . For newbies: http://blog.jhades.org/really-understanding-javascript-closures/"
				},
				{
					"date": "2017-08-17T07:47:16.593Z",
					"editor": "ljharb",
					"old-value": "For experienced users: http://dmitrysoshnikov.com/ecmascript/chapter-6-closures/ . For newbies: http://blog.jhades.org/really-understanding-javascript-closures/",
					"new-value": "For experienced users: http://dmitrysoshnikov.com/ecmascript/chapter-6-closures/ . For newbies: http://blog.angular-university.io/really-understanding-javascript-closures"
				},
				{
					"date": "2018-12-07T19:18:47.401Z",
					"editor": "jaawerth",
					"old-value": "For experienced users: http://dmitrysoshnikov.com/ecmascript/chapter-6-closures/ . For newbies: http://blog.angular-university.io/really-understanding-javascript-closures",
					"new-value": "Introductory: http://blog.angular-university.io/really-understanding-javascript-closures . Intermediate/Advanced: http://dmitrysoshnikov.com/ecmascript/chapter-6-closures/"
				}
			]
		},
		"cross-domain": {
			"alias": "same",
			"popularity": 9
		},
		"closure": {
			"alias": "closures",
			"popularity": 97
		},
		"paste": {
			"value": "Please paste your code (gist and other paste sites, NOT pastebin.com or Hastebin) or create a running example: see !fiddle. See also !badpastebin !hastebin !nopaste and !mcve",
			"popularity": 2482,
			"editors": [
				"niggler",
				"gkatsev",
				"CoverSlide",
				"PigDude",
				"MJCD",
				"Sorella",
				"totemizer",
				"ashnur",
				"Agamemnus",
				"cjohnson",
				"joepie91",
				"systemfault",
				"qswz",
				"graingert",
				"Xatenev"
			],
			"changes": [
				{
					"date": "2014-10-23T07:51:09.863Z",
					"editor": "Agamemnus",
					"old-value": "Show some code, but don't paste it on the channel. Sites like http://gist.github.com/ and http://bpaste.net/ are cool. You can also use http://jsbin.com , http://requirebin.com or http://jsfiddle.net/ to provide a test case we can run and help you with your problem.",
					"new-value": "Show some code, but don't paste it on the channel. Sites like http://gist.github.com/ and http://bpaste.net/ are cool. You can also use http://jsbin.com, http://requirebin.com, http://cssdeck.com, or http://jsfiddle.net to provide a test case we can run and help you with your problem."
				},
				{
					"date": "2014-12-19T21:28:33.878Z",
					"editor": "cjohnson",
					"old-value": "Show some code, but don't paste it on the channel. Sites like http://gist.github.com/ and http://bpaste.net/ are cool. You can also use http://jsbin.com, http://requirebin.com, http://cssdeck.com, or http://jsfiddle.net to provide a test case we can run and help you with your problem.",
					"new-value": "Show some code, but don't paste it on the channel. You can provide a test case we can run and help you with your problem with http://jsfiddle.net , http://jsbin.com , or http://requirebin.com . Sites like http://gist.github.com/ and http://bpaste.net are cool too."
				},
				{
					"date": "2015-08-06T09:00:35.294Z",
					"editor": "joepie91",
					"old-value": "Show some code, but don't paste it on the channel. You can provide a test case we can run and help you with your problem with http://jsfiddle.net , http://jsbin.com , or http://requirebin.com . Sites like http://gist.github.com/ and http://bpaste.net are cool too.",
					"new-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use http://jsfiddle.net , http://requirebin.com , or http://jsbin.com . For Node.js code, use sites like http://gist.github.com/ and http://bpaste.net ."
				},
				{
					"date": "2015-08-06T09:02:12.504Z",
					"editor": "joepie91",
					"old-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use http://jsfiddle.net , http://requirebin.com , or http://jsbin.com . For Node.js code, use sites like http://gist.github.com/ and http://bpaste.net .",
					"new-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net , https://jsbin.com , or http://requirebin.com . For Node.js code, use sites like https://gist.github.com/ and https://bpaste.net ."
				},
				{
					"date": "2016-06-21T02:57:03.242Z",
					"editor": "systemfault",
					"old-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net , https://jsbin.com , or http://requirebin.com . For Node.js code, use sites like https://gist.github.com/ and https://bpaste.net .",
					"new-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net , https://jsbin.com , https://repl.it/, or http://requirebin.com . For Node.js code, use sites like https://gist.github.com/ and https://bpaste.net ."
				},
				{
					"date": "2016-12-28T17:34:16.513Z",
					"editor": "qswz",
					"old-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net , https://jsbin.com , https://repl.it/, or http://requirebin.com . For Node.js code, use sites like https://gist.github.com/ and https://bpaste.net .",
					"new-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net , https://jsbin.com , https://repl.it/, or http://requirebin.com . For Node.js code, use sites like https://gist.github.com/, http://vpaste.net and https://bpaste.net ."
				},
				{
					"date": "2017-06-01T01:06:17.688Z",
					"editor": "qswz",
					"old-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net , https://jsbin.com , https://repl.it/, or http://requirebin.com . For Node.js code, use sites like https://gist.github.com/, http://vpaste.net and https://bpaste.net .",
					"new-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net, https://jsbin.com, https://repl.it, or http://requirebin.com. For Node.js code, use sites like https://gist.github.com, http://dpaste.com http://vpaste.net and https://bpaste.net"
				},
				{
					"date": "2017-06-01T01:06:35.722Z",
					"editor": "qswz",
					"old-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net, https://jsbin.com, https://repl.it, or http://requirebin.com. For Node.js code, use sites like https://gist.github.com, http://dpaste.com http://vpaste.net and https://bpaste.net",
					"new-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net, https://jsbin.com, https://repl.it, or http://requirebin.com. For Node.js code, use sites like https://gist.github.com, http://dpaste.com, http://vpaste.net and https://bpaste.net"
				},
				{
					"date": "2017-11-08T05:36:36.478Z",
					"editor": "qswz",
					"old-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net, https://jsbin.com, https://repl.it, or http://requirebin.com. For Node.js code, use sites like https://gist.github.com, http://dpaste.com, http://vpaste.net and https://bpaste.net",
					"new-value": "Don't paste it code. Use gist.github.com, bpaste.net, dpaste.com or jsbin.com, jsfiddle.net for js+html or repl.it, requirebin.com, runkit.com for js/node only"
				},
				{
					"date": "2017-11-08T05:36:46.392Z",
					"editor": "qswz",
					"old-value": "Don't paste it code. Use gist.github.com, bpaste.net, dpaste.com or jsbin.com, jsfiddle.net for js+html or repl.it, requirebin.com, runkit.com for js/node only",
					"new-value": "Don't paste code. Use gist.github.com, bpaste.net, dpaste.com or jsbin.com, jsfiddle.net for js+html or repl.it, requirebin.com, runkit.com for js/node only"
				},
				{
					"date": "2017-11-08T05:37:13.324Z",
					"editor": "qswz",
					"old-value": "Don't paste code. Use gist.github.com, bpaste.net, dpaste.com or jsbin.com, jsfiddle.net for js+html or repl.it, requirebin.com, runkit.com for js/node only",
					"new-value": "Don't paste code. Use gist.github.com, bpaste.net, dpaste.com for pastes or jsbin.com, jsfiddle.net for js+html or repl.it, requirebin.com, runkit.com for js/node only"
				},
				{
					"date": "2017-11-17T15:14:18.925Z",
					"editor": "graingert",
					"old-value": "Don't paste code. Use gist.github.com, bpaste.net, dpaste.com for pastes or jsbin.com, jsfiddle.net for js+html or repl.it, requirebin.com, runkit.com for js/node only",
					"new-value": "Don't paste code. Use gist.github.com, bpaste.net, dpaste.com for pastes or codepen.io, jsbin.com, jsfiddle.net for js+html or repl.it, requirebin.com, runkit.com for js/node only"
				},
				{
					"date": "2017-12-18T22:22:21.233Z",
					"editor": "joepie91",
					"old-value": "Don't paste code. Use gist.github.com, bpaste.net, dpaste.com for pastes or codepen.io, jsbin.com, jsfiddle.net for js+html or repl.it, requirebin.com, runkit.com for js/node only",
					"new-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net, https://jsbin.com, or http://requirebin.com. For Node.js code, use sites like https://gist.github.com or https://runkit.com/"
				},
				{
					"date": "2018-01-11T01:21:04.475Z",
					"editor": "graingert",
					"old-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net, https://jsbin.com, or http://requirebin.com. For Node.js code, use sites like https://gist.github.com or https://runkit.com/",
					"new-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net, https://jsbin.com, or http://requirebin.com. For Node.js code, use sites like https://gist.github.com or https://runkit.com/. A screenshot is not acceptable."
				},
				{
					"date": "2018-01-13T20:52:01.959Z",
					"editor": "qswz",
					"old-value": "Show some code, but don't paste it on the channel. For frontend code (HTML/CSS/JS), you can provide a test case that we can run, so that we can help you: use https://jsfiddle.net, https://jsbin.com, or http://requirebin.com. For Node.js code, use sites like https://gist.github.com or https://runkit.com/. A screenshot is not acceptable.",
					"new-value": "Show some code, but don't paste it on the channel. Use sites like gist.github.com, dpaste.com, ... Or better some runnable code, see !fiddle"
				},
				{
					"date": "2018-01-13T20:54:39.205Z",
					"editor": "cjohnson",
					"old-value": "Show some code, but don't paste it on the channel. Use sites like gist.github.com, dpaste.com, ... Or better some runnable code, see !fiddle",
					"new-value": "Show some code, but don't paste it to the channel. Use sites like gist.github.com or dpaste.com. Ideally it should be executable, see !fiddle"
				},
				{
					"date": "2018-04-28T01:18:12.708Z",
					"editor": "systemfault",
					"old-value": "Show some code, but don't paste it to the channel. Use sites like gist.github.com or dpaste.com. Ideally it should be executable, see !fiddle",
					"new-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: codesandbox.io, jsfiddle.net, codepen.io, jsbin.com  For node: repl.it, runkit.com. See also !nopaste and !mcve"
				},
				{
					"date": "2018-05-07T14:48:24.843Z",
					"editor": "qswz",
					"old-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: codesandbox.io, jsfiddle.net, codepen.io, jsbin.com  For node: repl.it, runkit.com. See also !nopaste and !mcve",
					"new-value": "Please paste your code (gist and other paste sites) or create a running example on codesandbox.io, jsfiddle.net, codepen.io, jsbin.com, repl.it (if there's no HTML output). See also !nopaste and !mcve"
				},
				{
					"date": "2018-05-31T18:16:51.603Z",
					"editor": "graingert",
					"old-value": "Please paste your code (gist and other paste sites) or create a running example on codesandbox.io, jsfiddle.net, codepen.io, jsbin.com, repl.it (if there's no HTML output). See also !nopaste and !mcve",
					"new-value": "Please paste your code (gist and other paste sites DO NOT USE pastebin.com!) or create a running example on codesandbox.io, jsfiddle.net, codepen.io, jsbin.com, repl.it (if there's no HTML output). See also !badpastebin !nopaste and !mcve"
				},
				{
					"date": "2018-05-31T18:18:52.466Z",
					"editor": "Xatenev",
					"old-value": "Please paste your code (gist and other paste sites DO NOT USE pastebin.com!) or create a running example on codesandbox.io, jsfiddle.net, codepen.io, jsbin.com, repl.it (if there's no HTML output). See also !badpastebin !nopaste and !mcve",
					"new-value": "Please paste your code (gist and other paste sites - DO NOT USE pastebin.com!) or create a running example on codesandbox.io, jsfiddle.net, codepen.io, jsbin.com, repl.it (if there's no HTML output). See also !badpastebin !nopaste and !mcve !mcve"
				},
				{
					"date": "2018-06-02T13:18:14.177Z",
					"editor": "qswz",
					"old-value": "Please paste your code (gist and other paste sites - DO NOT USE pastebin.com!) or create a running example on codesandbox.io, jsfiddle.net, codepen.io, jsbin.com, repl.it (if there's no HTML output). See also !badpastebin !nopaste and !mcve !mcve",
					"new-value": "Please paste your code (gist and other paste sites, NOT pastebin.com) or create a running example: see !fiddle. See also !badpastebin !nopaste and !mcve"
				},
				{
					"date": "2018-08-24T17:25:58.577Z",
					"editor": "joepie91",
					"old-value": "Please paste your code (gist and other paste sites, NOT pastebin.com) or create a running example: see !fiddle. See also !badpastebin !nopaste and !mcve",
					"new-value": "Please paste your code (gist and other paste sites, NOT pastebin.com or Hastebin) or create a running example: see !fiddle. See also !badpastebin !hastebin !nopaste and !mcve"
				}
			]
		},
		"json": {
			"value": "JavaScript Object Notation, see http://www.json.org/. Looks like literals in JS, but object keys and strings are always double-quoted. Remember: if it's not a string (if you don't need JSON.parse) it's not JSON. To convert an object to JSON, use JSON.stringify.",
			"popularity": 82,
			"editors": [
				"therealklanni"
			],
			"changes": [
				{
					"date": "2014-04-15T17:40:42.302Z",
					"editor": "therealklanni",
					"old-value": "JavaScript Object Notation, see http://www.json.org/. Looks like literals in JS, but object keys and strings are always double-quoted. Remember: if it's not a string (if you don't need JSON.parse) it's not JSON.",
					"new-value": "JavaScript Object Notation, see http://www.json.org/. Looks like literals in JS, but object keys and strings are always double-quoted. Remember: if it's not a string (if you don't need JSON.parse) it's not JSON. To convert an object to JSON, use JSON.stringify."
				}
			]
		},
		"code": {
			"value": "Show some code, but don't paste it on the channel. You can provide a test case we can run and help you with your problem with http://jsfiddle.net , http://jsbin.com , or http://requirebin.com . Sites like http://gist.github.com/ and http://bpaste.net are cool too.",
			"popularity": 857,
			"editors": [
				"CoverSlide",
				"ph88",
				"gkatsev",
				"blackkbot",
				"cjohnson"
			],
			"changes": [
				{
					"date": "2014-01-13T12:05:04.853Z",
					"editor": "blackkbot",
					"old-value": "Show some code. Code examples should be complete (sufficient to show the problem) and minimal (as short as possible while remaining complete). Go to http://jsbin.com/ or see !paste.",
					"new-value": "Show some code, but don't paste it on the channel. Sites like http://gist.github.com/ and http://bpaste.net/ are cool. You can also use http://jsbin.com , http://requirebin.com or http://jsfiddle.net/ to provide a test case we can run and help you with your problem."
				},
				{
					"date": "2014-12-16T04:03:05.736Z",
					"editor": "cjohnson",
					"old-value": "Show some code, but don't paste it on the channel. Sites like http://gist.github.com/ and http://bpaste.net/ are cool. You can also use http://jsbin.com , http://requirebin.com or http://jsfiddle.net/ to provide a test case we can run and help you with your problem.",
					"new-value": "Show some code, but don't paste it on the channel. You can provide a test case we can run and help you with your problem with http://jsfiddle.net , http://jsbin.com , or http://requirebin.com . Sites like http://gist.github.com/ and http://bpaste.net are cool too."
				}
			]
		},
		"callee": {
			"alias": "recursion",
			"popularity": 4
		},
		"harmony": {
			"alias": "es6",
			"popularity": 21
		},
		"cornify": {
			"value": "`^nn~ <http://www.cornify.com/>",
			"popularity": 16
		},
		"ecmascript": {
			"value": "ECMAScript (pronounced Ek-ma-script) is the written, non-proprietary standard of JavaScript. JavaScript is a Mozilla-specific dialect which adds some features. JScript is Microsoft's dialect. ActionScript is a dialect used in Adobe Flash.",
			"popularity": 10
		},
		"scoping": {
			"value": "http://johnkpaul.com/blog/2013/02/11/what-is-hoisting-really/ https://web.archive.org/web/20170907201821/https://developer.mozilla.org/en-US/docs/Archive/Web/Scope_Cheatsheet https://snek.dev/blag/2019-07_js_hoisting",
			"popularity": 213,
			"editors": [
				"eboy",
				"sillyslux",
				"devsnek",
				"ljharb"
			],
			"changes": [
				{
					"date": "2019-07-26T19:49:38.262Z",
					"editor": "sillyslux",
					"old-value": "http://johnkpaul.com/blog/2013/02/11/what-is-hoisting-really/ https://developer.mozilla.org/en/JavaScript/Reference/Scope_Cheatsheet",
					"new-value": "http://johnkpaul.com/blog/2013/02/11/what-is-hoisting-really/ https://web.archive.org/web/20170907201821/https://developer.mozilla.org/en-US/docs/Archive/Web/Scope_Cheatsheet"
				},
				{
					"date": "2019-07-26T20:35:02.984Z",
					"editor": "devsnek",
					"old-value": "http://johnkpaul.com/blog/2013/02/11/what-is-hoisting-really/ https://web.archive.org/web/20170907201821/https://developer.mozilla.org/en-US/docs/Archive/Web/Scope_Cheatsheet",
					"new-value": "https://snek.dev/blag/2019-07_js_hoisting https://web.archive.org/web/20170907201821/https://developer.mozilla.org/en-US/docs/Archive/Web/Scope_Cheatsheet"
				},
				{
					"date": "2019-07-30T02:25:36.959Z",
					"editor": "ljharb",
					"old-value": "https://snek.dev/blag/2019-07_js_hoisting https://web.archive.org/web/20170907201821/https://developer.mozilla.org/en-US/docs/Archive/Web/Scope_Cheatsheet",
					"new-value": "http://johnkpaul.com/blog/2013/02/11/what-is-hoisting-really/ https://web.archive.org/web/20170907201821/https://developer.mozilla.org/en-US/docs/Archive/Web/Scope_Cheatsheet https://snek.dev/blag/2019-07_js_hoisting"
				}
			]
		},
		"forms": {
			"value": "Accessing form elements: Don't use document.formName.elementName. Use document.forms.formName.elements.elementName or getElementById, getElementsByName, or querySelector",
			"popularity": 27
		},
		"scope": {
			"alias": "scoping",
			"popularity": 83
		},
		"form": {
			"alias": "forms",
			"popularity": 1
		},
		"hoisting": {
			"alias": "scoping",
			"popularity": 119
		},
		"same origin": {
			"alias": "cross-domain",
			"popularity": 9
		},
		"jsonlint": {
			"value": "JSONLint - The JSON Validator. - http://www.jsonlint.com/",
			"popularity": 2
		},
		"textContent": {
			"value": "There is no single cross-browser way to get the inner text from an element (without HTML), so you need the following: var text = element.textContent || element.innerText;",
			"popularity": 1
		},
		"innerHTML": {
			"alias": "textContent"
		},
		"xy": {
			"value": "The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/",
			"popularity": 1210,
			"editors": [
				"j201",
				"sukima",
				"joepie91"
			],
			"changes": [
				{
					"date": "2016-07-07T19:51:09.900Z",
					"editor": "joepie91",
					"old-value": "The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X.",
					"new-value": "The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/"
				}
			]
		},
		"flxhr": {
			"value": "\"flXHR [flĕkʹsər], (flex-er), is a cross-browser, XHR-compatible tool for cross-domain Ajax (Flash) communication. It utilizes an invisible flXHR.swf instance that acts as sort of a client-side proxy for requests. https://github.com/flensed/flXHR\"",
			"popularity": 7
		},
		"float2int": {
			"value": "|0 is bitwise OR with 0 - a quick way to convert any value to a 32-bit integer, as well as any of these: x|0, x>>0, ~~x.",
			"popularity": 2
		},
		"|0": {
			"alias": "float2int"
		},
		"typeof": {
			"value": "The typeof operator returns a string indicating the type of the unevaluated operand. Returns 'object', 'boolean', 'number', 'string', 'function', 'xml', or 'undefined'. Arrays return 'object'. Use: if (typeof variable !== \"undefined\") to check if a variable is defined.",
			"popularity": 23
		},
		"comet": {
			"value": "http://en.wikipedia.org/wiki/Comet_(programming)",
			"popularity": 1
		},
		"rte": {
			"value": "http://ckeditor.com/ http://tinymce.moxiecode.com/ http://www.themaninblue.com/experiment/widgEditor/ http://www.mozilla.org/editor/midasdemo/",
			"popularity": 0
		},
		"prettyprint": {
			"value": "Online JavaScript beautifier - http://jsbeautifier.org/",
			"popularity": 1
		},
		"eloquent": {
			"value": "Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/",
			"popularity": 1765,
			"editors": [
				"ericelliott",
				"ashnur"
			]
		},
		"tias": {
			"value": "Try it and see, why dontcha?",
			"popularity": 181
		},
		"css": {
			"value": "Use Javascript to manipulate CSS stylesheets in a page. http://www.quirksmode.org/dom/w3c_css.html | Quick A-Z reference https://emw3.com/css/ - the js css property names use  camelCase. example: \"text-align\" is \"textAlign\" in the js css api |  For other CSS problems, please try the #css channel.",
			"popularity": 23,
			"editors": [
				"kiki`"
			],
			"changes": [
				{
					"date": "2017-03-22T09:54:54.418Z",
					"editor": "kiki`",
					"old-value": "Use Javascript to manipulate CSS stylesheets in a page. http://www.quirksmode.org/dom/w3c_css.html For other CSS problems, please try the #css channel.",
					"new-value": "Use Javascript to manipulate CSS stylesheets in a page. http://www.quirksmode.org/dom/w3c_css.html | Quick A-Z reference https://emw3.com/css/ - the js css property names use  camelCase. example: \"text-align\" is \"textAlign\" in the js css api |  For other CSS problems, please try the #css channel."
				}
			]
		},
		"recursion": {
			"value": "See !recursion",
			"popularity": 45
		},
		"ask": {
			"value": "Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html",
			"popularity": 2008,
			"editors": [
				"hemanth",
				"eboy",
				"CoverSlide",
				"Mortchek",
				"therealklanni",
				"Havvy",
				"asdasda",
				"MJCD",
				"GreenJello"
			],
			"changes": [
				{
					"date": "2014-03-05T19:17:12.296Z",
					"editor": "therealklanni",
					"old-value": "Don't ask to ask, or if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html http://guipn.com/how-to-get-helpful-help.htm",
					"new-value": "Don't ask to ask, or if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html"
				},
				{
					"date": "2015-01-16T17:01:19.863Z",
					"editor": "Havvy",
					"old-value": "Don't ask to ask, or if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html",
					"new-value": "Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html",
					"regex": "s/or/nor/"
				},
				{
					"date": "2017-06-24T18:57:25.204Z",
					"editor": "asdasda",
					"old-value": "Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html",
					"new-value": "Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/"
				},
				{
					"date": "2018-10-20T01:49:54.600Z",
					"editor": "MJCD",
					"old-value": "Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/",
					"new-value": "Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. Also don't PM people without asking them first, try to keep most non-commercial conversations on the channel so others may benefit too :) More @ http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/"
				},
				{
					"date": "2018-10-20T01:50:44.455Z",
					"editor": "MJCD",
					"old-value": "Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. Also don't PM people without asking them first, try to keep most non-commercial conversations on the channel so others may benefit too :) More @ http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/",
					"new-value": "Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/"
				},
				{
					"date": "2019-09-19T19:35:17.480Z",
					"editor": "MJCD",
					"old-value": "Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/",
					"new-value": "Don't ask to ask, nor if anyone is here or alive or uses something ~ or ESPECIALLY if one user you've talked to before will help you. Just ask your question to the channel and whoever can help at the time, will. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/"
				},
				{
					"date": "2019-09-19T19:35:55.715Z",
					"editor": "MJCD",
					"old-value": "Don't ask to ask, nor if anyone is here or alive or uses something ~ or ESPECIALLY if one user you've talked to before will help you. Just ask your question to the channel and whoever can help at the time, will. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/",
					"new-value": "Don't ask to ask, nor if anyone is here or alive or uses something ~ or ESPECIALLY if one user you've talked to before will help you. Just ask your question to the channel and whoever can help at the time, will. Further reading list: http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/"
				},
				{
					"date": "2019-10-03T21:30:42.684Z",
					"editor": "GreenJello",
					"old-value": "Don't ask to ask, nor if anyone is here or alive or uses something ~ or ESPECIALLY if one user you've talked to before will help you. Just ask your question to the channel and whoever can help at the time, will. Further reading list: http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/",
					"new-value": "Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html"
				}
			]
		},
		"let": {
			"value": "The let statement provides a way to associate values with variables within the scope of a block, without affecting the values of like-named variables outside the block. Always prefer it to `var`, but prefer `const` when you don't change the variable binding (which should be most of the time).",
			"popularity": 49,
			"editors": [
				"j201",
				"Sorella",
				"Havvy",
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-07-27T02:01:41.758Z",
					"editor": "Sorella",
					"old-value": "The let statement provides a way to associate values with variables within the scope of a block, without affecting the values of like-named variables outside the block. It is currently non-standard, but it will be standardized in ES6.",
					"new-value": "The let statement provides a way to associate values with variables within the scope of a block, without affecting the values of like-named variables outside the block."
				},
				{
					"date": "2015-10-20T04:09:28.678Z",
					"editor": "Havvy",
					"old-value": "The let statement provides a way to associate values with variables within the scope of a block, without affecting the values of like-named variables outside the block.",
					"new-value": "The let statement provides a way to associate values with variables within the scope of a block, without affecting the values of like-named variables outside the block. Always prefer it to `var`. Use `const` when you don't change the variable binding."
				},
				{
					"date": "2016-12-26T12:14:31.570Z",
					"editor": "ljharb",
					"old-value": "The let statement provides a way to associate values with variables within the scope of a block, without affecting the values of like-named variables outside the block. Always prefer it to `var`. Use `const` when you don't change the variable binding.",
					"new-value": "The let statement provides a way to associate values with variables within the scope of a block, without affecting the values of like-named variables outside the block. Always prefer it to `var`, but prefer `const` when you don't change the variable binding (which should be most of the time)."
				}
			]
		},
		"pm": {
			"value": "Never ask for help in pm. People who help in the channel do so in part because of the rewards that brings; public recognition and helping *everyone* listening to learn. Why would anyone want to help in pm?",
			"popularity": 66,
			"editors": [
				"j201"
			]
		},
		"select": {
			"value": "To get the value of a <select> form field: var select = document.getElementById(\"select\"); var value = select.options[select.selectedIndex].value;",
			"popularity": 6
		},
		"doesn't work": {
			"value": "What do you mean it doesn't work? Is it unemployed? What happens when you try to run it? What did you try to run? What's the output? What's the error message? What did you want or expect to happen? Can you post a screenshot or a fiddle?",
			"popularity": 947,
			"editors": [
				"dwcook",
				"graingert"
			],
			"changes": [
				{
					"date": "2018-01-01T23:43:23.657Z",
					"editor": "graingert",
					"old-value": "What do you mean it doesn't work? Is it unemployed? What happens when you try to run it? What's the output? What's the error message? What did you want or expect to happen?",
					"new-value": "What do you mean it doesn't work? Is it unemployed? What happens when you try to run it? What did you try to run? What's the output? What's the error message? What did you want or expect to happen? Can you post a screenshot or a fiddle?"
				}
			]
		},
		"$": {
			"value": "The `$` character has no special meaning in JavaScript, other than being allowed as a character in an variable name. It is used by some JavaScript libraries like jQuery, but traditionally used in machine generated JavaScript to avoid interference with other identifiers.",
			"popularity": 27
		},
		"mdc": {
			"value": "Mozilla Developer Network @ http://developer.mozilla.org/",
			"popularity": 166,
			"editors": [
				"qswz",
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-10-29T14:39:50.191Z",
					"editor": "qswz",
					"old-value": "Mozilla Developer Network @ http://developer.mozilla.org/",
					"new-value": "I'm broken"
				},
				{
					"date": "2017-09-08T19:53:45.864Z",
					"editor": "ljharb",
					"old-value": "I'm broken",
					"new-value": "Mozilla Developer Network @ http://developer.mozilla.org/"
				}
			]
		},
		"mdn": {
			"alias": "mdc",
			"popularity": 145
		},
		"debugging": {
			"alias": "console",
			"popularity": 6
		},
		"property access": {
			"value": "Property access: myobject.foo is just another way of saying myobject['foo']. This means that if property = 'foo', it's also the same as myobject[property].",
			"popularity": 2
		},
		"hammertime": {
			"value": "━━▊ ━━▊ ━━▊",
			"popularity": 31
		},
		"wait": {
			"value": "Don't feel ignored and repeat your question quickly; if nobody knows your answer, nobody will answer you. While you wait, try searching https://developer.mozilla.org/en/JavaScript or https://developer.mozilla.org/en/DOM || You might also consider reading: http://www.catb.org/~esr/faqs/smart-questions.html",
			"popularity": 24
		},
		"encodeURIComponent": {
			"value": "Always use `encodeURIComponent` to put query strings together. For example: \"foo=\"+encodeURIComponent(foo)+\"&bar=\"+encodeURIComponent(bar). Strings are encoded in UTF-8 format.",
			"popularity": 1
		},
		"encodeURI": {
			"alias": "encodeURIComponent"
		},
		"escape": {
			"alias": "encodeURIComponent",
			"popularity": 1
		},
		"document.write": {
			"value": "document.wrong. Please use something more modern and less prone to doing confusing things. This function tries to write to the current document. If the document has already been processed, the document will be replaced with a blank one with your argument. You don't want that; use the proper DOM methods instead.",
			"popularity": 290,
			"editors": [
				"Sorella",
				"Jarwain"
			],
			"changes": [
				{
					"date": "2015-09-20T20:08:05.614Z",
					"editor": "Sorella",
					"old-value": "document.wrong. Please use something more modern and less prone to doing confusing things. This function tries to write to the current document. If the document has already been processed, the document will be replaced with a blank one with your argument. If you don't want that, use the proper DOM methods instead.",
					"new-value": "document.wrong. Please use something more modern and less prone to doing confusing things. This function tries to write to the current document. If the document has already been processed, the document will be replaced with a blank one with your argument. You don't want that, use the proper DOM methods instead.",
					"regex": "s/If you don't want that/You don't want that/"
				},
				{
					"date": "2015-09-20T20:08:37.838Z",
					"editor": "Jarwain",
					"old-value": "document.wrong. Please use something more modern and less prone to doing confusing things. This function tries to write to the current document. If the document has already been processed, the document will be replaced with a blank one with your argument. You don't want that, use the proper DOM methods instead.",
					"new-value": "document.wrong. Please use something more modern and less prone to doing confusing things. This function tries to write to the current document. If the document has already been processed, the document will be replaced with a blank one with your argument. You don't want that; use the proper DOM methods instead.",
					"regex": "s/You don't want that,/You don't want that;/"
				}
			]
		},
		"cross-browser": {
			"value": "\"Cross-browser\" is a buzz word used to describe a resource that works in multiple browsers. However, its meaning is diluted in popular culture. Its true meaning is a described resource that works in a maximal amount of browsers, therefore working \"across\" environmental divides. See !multi-browser for the popular, misused definition.",
			"popularity": 3
		},
		"quirksmode": {
			"alias": "cross-browser",
			"popularity": 1
		},
		"rimshot": {
			"value": "Ba dun tshh... http://instantrimshot.com/classic/?sound=rimshot",
			"popularity": 7
		},
		"sadtrombone": {
			"value": "Wah wah wah waahhh... http://www.sadtrombone.com/",
			"popularity": 3
		},
		"ugt": {
			"value": "Universal Greeting Time (or UGT) is a convention that states when a user enters an IRC channel it is always morning and upon leaving it is always night, regardless of the actual physical locations of the users in the channel. http://www.total-knowledge.com/~ilya/mips/ugt.html",
			"popularity": 97
		},
		"crickets": {
			"value": "crickets *chirp* *chirp* *chirp*... http://instantrimshot.com/index.php?sound",
			"popularity": 5
		},
		"member access": {
			"alias": "property access"
		},
		"ES5": {
			"value": "ES5 is edition 5 of ECMA-262, the ECMAScript specification: http://es5.github.com/ http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf",
			"popularity": 0
		},
		"innerText": {
			"alias": "textContent"
		},
		"console": {
			"value": "The console object will provide you with an easy way to check the values of some variables, instead of the blocking alert() function. See !debug",
			"popularity": 135,
			"editors": [
				"ashnur"
			]
		},
		"debug": {
			"value": "Firefox <https://developer.mozilla.org/en-US/docs/Tools/Debugger>, Safari <https://developer.apple.com/technologies/safari/developer-tools.html>, Chrome <https://developers.google.com/web/tools/chrome-devtools/javascript/>, Opera <http://www.opera.com/dragonfly/>, IE <http://msdn.microsoft.com/en-us/library/dd565625%28v=vs.85%29>",
			"popularity": 443,
			"editors": [
				"j201",
				"FireFly",
				"cjohnson"
			],
			"changes": [
				{
					"date": "2016-03-08T03:29:54.452Z",
					"editor": "cjohnson",
					"old-value": "Browser-based debuggers -- Firefox <https://developer.mozilla.org/en-US/docs/Tools/Web_Console>, Safari <https://developer.apple.com/technologies/safari/developer-tools.html>, Chrome <https://developers.google.com/chrome-developer-tools/docs/overview>, Opera <http://www.opera.com/dragonfly/>, IE <http://msdn.microsoft.com/en-us/library/dd565625%28v=vs.85%29>",
					"new-value": "Firefox <https://developer.mozilla.org/en-US/docs/Tools/Debugger>, Safari <https://developer.apple.com/technologies/safari/developer-tools.html>, Chrome <https://developer.chrome.com/devtools/docs/javascript-debugging>, Opera <http://www.opera.com/dragonfly/>, IE <http://msdn.microsoft.com/en-us/library/dd565625%28v=vs.85%29>"
				},
				{
					"date": "2017-02-17T19:27:27.624Z",
					"editor": "cjohnson",
					"old-value": "Firefox <https://developer.mozilla.org/en-US/docs/Tools/Debugger>, Safari <https://developer.apple.com/technologies/safari/developer-tools.html>, Chrome <https://developer.chrome.com/devtools/docs/javascript-debugging>, Opera <http://www.opera.com/dragonfly/>, IE <http://msdn.microsoft.com/en-us/library/dd565625%28v=vs.85%29>",
					"new-value": "Firefox <https://developer.mozilla.org/en-US/docs/Tools/Debugger>, Safari <https://developer.apple.com/technologies/safari/developer-tools.html>, Chrome <https://developers.google.com/web/tools/chrome-devtools/javascript/>, Opera <http://www.opera.com/dragonfly/>, IE <http://msdn.microsoft.com/en-us/library/dd565625%28v=vs.85%29>"
				}
			]
		},
		"events": {
			"value": "https://developer.mozilla.org/en-US/docs/Web/Events | QuirksMode Events guide: http://www.quirksmode.org/js/introevents.html",
			"popularity": 153,
			"editors": [
				"MJCD",
				"ljharb"
			],
			"changes": [
				{
					"date": "2017-08-31T18:25:57.979Z",
					"editor": "MJCD",
					"old-value": "QuirksMode Events guide <http://www.quirksmode.org/js/introevents.html>",
					"new-value": "https://developer.mozilla.org/en-US/docs/Web/Events"
				},
				{
					"date": "2017-09-01T20:21:55.228Z",
					"editor": "ljharb",
					"old-value": "https://developer.mozilla.org/en-US/docs/Web/Events",
					"new-value": "https://developer.mozilla.org/en-US/docs/Web/Events | QuirksMode Events guide: http://www.quirksmode.org/js/introevents.html"
				}
			]
		},
		"botabuse": {
			"value": "Please investigate me in a private message, so we can keep the channel clutter to a minimum. /msg ecmabot usage",
			"popularity": 83
		},
		"about": {
			"value": "I'm written entirely in JavaScript using Node.js. Look under the hood on Github: <https://github.com/oftn/oftn-bot>",
			"popularity": 327,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-06-01T04:26:04.338Z",
					"editor": "ljharb",
					"old-value": "I'm written entirely in JavaScript using Node.js. See under my covers at Github: <https://github.com/oftn/oftn-bot>",
					"new-value": "I'm written entirely in JavaScript using Node.js. Look under the hood on Github: <https://github.com/oftn/oftn-bot>"
				}
			]
		},
		"help": {
			"value": "For help, ask your question. Be patient. Code samples should be pasted in a paste service (see !paste). Tell us 1) what you want to happen, 2) what is actually happening, and 3) any error messages you find (see !describe and !debug).",
			"popularity": 4186,
			"editors": [
				"ashnur",
				"earendel",
				"ljharb"
			],
			"changes": [
				{
					"date": "2018-06-14T19:05:42.438Z",
					"editor": "earendel",
					"old-value": "For help, ask your question. Be patient. Code samples should be pasted in a paste service (see !paste). Tell us 1) what you want to happen, 2) what is actually happening, and 3) any error messages you find (see !describe and !debug).",
					"new-value": "type !find <keyword> to search factoids. | node repl: n> <script> | node with babel: b> <script>"
				},
				{
					"date": "2018-06-14T19:07:13.944Z",
					"editor": "ljharb",
					"old-value": "type !find <keyword> to search factoids. | node repl: n> <script> | node with babel: b> <script>",
					"new-value": "For help, ask your question. Be patient. Code samples should be pasted in a paste service (see !paste). Tell us 1) what you want to happen, 2) what is actually happening, and 3) any error messages you find (see !describe and !debug)."
				}
			]
		},
		"bracket access": {
			"value": "yourObject.foobar is just another way of saying yourObject['foobar']. So of course if varName = 'foobar', then it's also the same as yourObject[varName]. Dot notation is preferred to bracket notation except where the property name would be an invalid identifier. The same applies to quoting keys inside object literals - don't do it unless you have to.",
			"popularity": 121,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-04-15T00:49:09.974Z",
					"editor": "ljharb",
					"old-value": "yourObject.foobar is just another way of saying yourObject['foobar']. So of course if varName = 'foobar', then it's also the same as yourObject[varName]. Dot notation is preferred to bracket notation except where the property name would be an invalid identifier. The same applies to keys inside object literals.",
					"new-value": "yourObject.foobar is just another way of saying yourObject['foobar']. So of course if varName = 'foobar', then it's also the same as yourObject[varName]. Dot notation is preferred to bracket notation except where the property name would be an invalid identifier. The same applies to quoting keys inside object literals - don't do it unless you have to."
				}
			]
		},
		"bracketaccess": {
			"alias": "bracket access",
			"popularity": 1
		},
		"bracket": {
			"alias": "bracket access",
			"popularity": 92
		},
		"ops": {
			"value": "The ##javascript ops are: buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella GreenJello jaawerth niggler. In case of an emergency requiring op attention, activate !emergency",
			"popularity": 381,
			"editors": [
				"Mortchek",
				"dwcook",
				"ljharb",
				"GreenJello",
				"jaawerth"
			],
			"changes": [
				{
					"date": "2015-05-11T07:38:43.399Z",
					"editor": "ljharb",
					"old-value": "The ##javascript ops are: G﻿arethAdams b﻿uu G﻿ozzy B﻿oki P﻿hrogz W﻿oosta d﻿orward T﻿wey i﻿nimino gk﻿atsev d﻿wcook. In case of an emergency requiring op attention, activate !emergency",
					"new-value": "The ##javascript ops are: buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella. In case of an emergency requiring op attention, activate !emergency"
				},
				{
					"date": "2017-05-31T09:22:31.613Z",
					"editor": "GreenJello",
					"old-value": "The ##javascript ops are: buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella. In case of an emergency requiring op attention, activate !emergency",
					"new-value": "The ##javascript ops are: buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella GreenJello. In case of an emergency requiring op attention, activate !emergency"
				},
				{
					"date": "2018-02-13T22:28:32.734Z",
					"editor": "jaawerth",
					"old-value": "The ##javascript ops are: buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella GreenJello. In case of an emergency requiring op attention, activate !emergency",
					"new-value": "The ##javascript ops are: buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella GreenJello jaawerth. In case of an emergency requiring op attention, activate !emergency"
				},
				{
					"date": "2018-04-28T01:20:56.476Z",
					"editor": "ljharb",
					"old-value": "The ##javascript ops are: buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella GreenJello jaawerth. In case of an emergency requiring op attention, activate !emergency",
					"new-value": "The ##javascript ops are: buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella GreenJello jaawerth niggler. In case of an emergency requiring op attention, activate !emergency"
				}
			]
		},
		"str->num": {
			"value": "parseFloat(str, 10), parseInt(str, 10), +str",
			"popularity": 4
		},
		"string->num": {
			"alias": "str->num"
		},
		"not working": {
			"alias": "doesn't work",
			"popularity": 46
		},
		"resources": {
			"value": "!books, !es5, !gcu, !mdn, !owsc, !quirksmode, !caniuse, !crockford, !cheatsheet",
			"popularity": 24,
			"editors": [
				"Agamemnus",
				"Havvy",
				"qswz"
			],
			"changes": [
				{
					"date": "2013-12-21T07:57:26.552Z",
					"editor": "Agamemnus",
					"old-value": "!eloquent, !es5, !gcu, !mdn, !owsc, !quirksmode",
					"new-value": "!eloquent, !es5, !gcu, !mdn, !owsc, !quirksmode, !caniuse"
				},
				{
					"date": "2013-12-26T07:18:25.937Z",
					"editor": "Havvy",
					"old-value": "!eloquent, !es5, !gcu, !mdn, !owsc, !quirksmode, !caniuse",
					"new-value": "!books, !es5, !gcu, !mdn, !owsc, !quirksmode, !caniuse, !crockford"
				},
				{
					"date": "2017-10-01T17:10:33.551Z",
					"editor": "qswz",
					"old-value": "!books, !es5, !gcu, !mdn, !owsc, !quirksmode, !caniuse, !crockford",
					"new-value": "!books, !es5, !gcu, !mdn, !owsc, !quirksmode, !caniuse, !crockford, !cheatsheet"
				}
			]
		},
		"atwood's law": {
			"value": "Any application that can be written in JavaScript, will eventually be written in JavaScript.",
			"popularity": 3
		},
		"associative": {
			"value": "Arrays in JS are not associative arrays (like in PHP), but are intended to be accessed by numeric index. \"var a=[]; a.foo = 1;\" is not standard usage. http://andrewdupont.net/2006/05/18/javascript-associative-arrays-considered-harmful/",
			"popularity": 12
		},
		"es5": {
			"value": "An annotated, hyperlinked, HTML view of Edition 5.1 of the ECMAScript Specification. <http://es5.github.com/>",
			"popularity": 57
		},
		"node.js": {
			"value": "Node.js is an event-driven I/O framework for the V8 JavaScript engine on Unix-like and Windows platforms. It is intended for writing scalable network programs such as web servers. For Node.js help, see #node.js and https://gist.github.com/joepie91/95ed77b71790442b7e61",
			"popularity": 59,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2019-03-12T15:04:33.624Z",
					"editor": "graingert",
					"old-value": "Node.js is an event-driven I/O framework for the V8 JavaScript engine on Unix-like and Windows platforms. It is intended for writing scalable network programs such as web servers. For Node.js help, see #node.js",
					"new-value": "Node.js is an event-driven I/O framework for the V8 JavaScript engine on Unix-like and Windows platforms. It is intended for writing scalable network programs such as web servers. For Node.js help, see #node.js and https://gist.github.com/joepie91/95ed77b71790442b7e61"
				}
			]
		},
		"str->int": {
			"value": " [parseInt('1', 10), Number('1'), +'1', 1*'1', ~~'1', '1'>>0, '1'|0] // each item in the list is a way of doing string->int conversions. Items from ~~ onwards only work for 32bit integers. You likely don't want parseInt, unless you want to convert something like `1001 nights` to the number `1001`. See !parseint.",
			"popularity": 26,
			"editors": [
				"Sorella"
			]
		},
		"garden": {
			"value": "JavaScript Garden is a growing collection of documentation about the most quirky parts of the JavaScript programming language. It gives advice to avoid common mistakes, subtle bugs, as well as performance issues and bad practices that non-expert JavaScript programmers may encounter on their endeavours into the depths of the language. <http://bonsaiden.github.com/JavaScript-Garden/>",
			"popularity": 4
		},
		"numbers": {
			"value": "The Number type has exactly 2^64 − 2^53 + 3 values, representing the double-precision 64-bit format IEEE 754 values as specified in the IEEE Standard for Binary Floating-Point Arithmetic, except that the 2^53 − 2 distinct “Not-a-Number” values of the IEEE Standard are represented as a single special NaN value. : http://www.2ality.com/2012/04/number-encoding.html",
			"popularity": 151,
			"editors": [
				"ashnur"
			]
		},
		"objects": {
			"value": "A JavaScript object is a set of properties. A property name is a string, a property value is any JS value. See: Working with Objects https://developer.mozilla.org/en/JavaScript/Guide/Working_with_Objects",
			"popularity": 20
		},
		"enumeration": {
			"value": "The mechanics and order of enumerating the properties is not specified. Properties of the object being enumerated may be deleted during enumeration.",
			"popularity": 1
		},
		"undefined": {
			"value": "The undefined type has exactly one value, called `undefined`. Any variable that has not been assigned a value has the value `undefined`.",
			"popularity": 14
		},
		"booleans": {
			"value": "The boolean type represents a logical entity having two values, called `true` and `false`.",
			"popularity": 1
		},
		"minimal": {
			"value": "A minimal test case should contain precisely the HTML and JavaScript necessary to demonstrate the problem, no more and no less. If the JavaScript is more than 42 lines, it is probably not a minimal test case.",
			"popularity": 166
		},
		"psychic": {
			"value": "You're asking a JavaScript question, but you're not letting us know what you are doing. Please, show us the HTML/JS that the browser sees WHEN THE PROBLEM OCCURS. If you have content inserted by ajax, paste the code *with* that content. We're not psychic, dude. See also !minimal",
			"popularity": 6
		},
		"dom": {
			"value": "The DOM API allows you to interact with your document with JavaScript. <https://developer.mozilla.org/en/DOM>",
			"popularity": 37
		},
		"node": {
			"alias": "node.js",
			"popularity": 31
		},
		"mootools": {
			"value": "For help with MooTools-related problems, visit the #mootools channel.",
			"popularity": 2
		},
		"equivalent": {
			"value": "Instead of asking what's JavaScript's equivalent of `x' in `y' language, tell us what `x' does, and what you expect to achieve using it. Chances are we don't know `y', or you're trying something silly in JS.",
			"popularity": 0
		},
		"enter": {
			"value": "Please try to keep your questions/responses on one line. Don't use the \"Enter\" key as punctuation!",
			"popularity": 33
		},
		"usage": {
			"value": "You may use me to run tiny JavaScript snippets and retrieve factoids. See <https://github.com/oftn/oftn-bot/wiki/Guide-to-Ecmabot>.",
			"popularity": 153
		},
		"jshint": {
			"value": "see !eslint",
			"popularity": 27,
			"editors": [
				"yorick",
				"Sorella",
				"graingert"
			],
			"changes": [
				{
					"date": "2017-06-06T20:05:08.403Z",
					"editor": "graingert",
					"old-value": "A fork of jslint, made to be more configurable on how strict you want it to be, which is overall a great way to make your programs less error-prone. <http://jshint.com/>",
					"new-value": "see !eslint"
				}
			]
		},
		"jslint": {
			"value": "see !eslint",
			"popularity": 31,
			"editors": [
				"yorick",
				"graingert"
			],
			"changes": [
				{
					"date": "2017-06-06T20:05:00.988Z",
					"editor": "graingert",
					"old-value": "Douglas Crockford's tool for testing his 'Code Conventions' for JavaScript. It includes both syntax checking and very particular style conventions, but is an excellent way to make your programs less error-prone. <http://www.jslint.com/> See also !jshint for a similar tool that's less particular about style.",
					"new-value": "see !eslint"
				}
			]
		},
		"uuid": {
			"value": "Are you sure you want a UUID? If want a random token you probably want something more secure than Math.random(). If you want a database ID your database provides utilities for generating such IDs. See also !token",
			"popularity": 7,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2018-02-13T15:59:08.208Z",
					"editor": "graingert",
					"old-value": "'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {var r = Math.random()*16|0,v=c=='x'?r:r&0x3|0x8;return v.toString(16);});",
					"new-value": "Are you sure you want a UUID? If want a random token you probably want something more secure than Math.random(). If you want a database ID your database provides utilities for generating such IDs"
				},
				{
					"date": "2018-02-13T16:04:09.696Z",
					"editor": "graingert",
					"old-value": "Are you sure you want a UUID? If want a random token you probably want something more secure than Math.random(). If you want a database ID your database provides utilities for generating such IDs",
					"new-value": "Are you sure you want a UUID? If want a random token you probably want something more secure than Math.random(). If you want a database ID your database provides utilities for generating such IDs. See also !token"
				}
			]
		},
		"eventintro": {
			"value": "JavaScript - Introduction to Events <http://www.quirksmode.org/js/introevents.html>",
			"popularity": 2
		},
		"homework": {
			"value": "That problem looks a little contrived, and we suspect it may be homework. While we won't do your homework for you, We can help, but we'll want to see some effort, and we'll expect you to read docs rather than get spoon-fed. If it's not homework, see also !xy",
			"popularity": 87,
			"editors": [
				"graingert",
				"MJCD"
			],
			"changes": [
				{
					"date": "2018-02-13T15:38:47.557Z",
					"editor": "graingert",
					"old-value": "We won't do your homework for you. Period. We can help, but we'll want to see some effort, and we'll expect you to read docs rather than get spoon-fed.",
					"new-value": "That problem looks a little contrived, and we suspect it may be homework. While we won't do your homework for you. We can help, but we'll want to see some effort, and we'll expect you to read docs rather than get spoon-fed. If it's not homework, see also !xy"
				},
				{
					"date": "2019-02-02T09:42:43.465Z",
					"editor": "MJCD",
					"old-value": "That problem looks a little contrived, and we suspect it may be homework. While we won't do your homework for you. We can help, but we'll want to see some effort, and we'll expect you to read docs rather than get spoon-fed. If it's not homework, see also !xy",
					"new-value": "That problem looks a little contrived, and we suspect it may be homework. While we won't do your homework for you - We can help, but we'll want to see some effort, and we'll expect you to read docs rather than get spoon-fed. If it's not homework, see also !xy"
				},
				{
					"date": "2019-02-02T09:46:45.559Z",
					"editor": "MJCD",
					"old-value": "That problem looks a little contrived, and we suspect it may be homework. While we won't do your homework for you - We can help, but we'll want to see some effort, and we'll expect you to read docs rather than get spoon-fed. If it's not homework, see also !xy",
					"new-value": "That problem looks a little contrived, and we suspect it may be homework. While we won't do your homework for you, We can help, but we'll want to see some effort, and we'll expect you to read docs rather than get spoon-fed. If it's not homework, see also !xy"
				}
			]
		},
		"submit": {
			"value": "Do you have a form element with name=\"submit\"? That confuses some browsers. When you call form.submit(), it thinks you're talking about the name=\"submit\" element."
		},
		"ternary": {
			"value": "var result = expr ? a : b; is equivalent to: var result; if (expr) { result = a; } else { result = b; }",
			"popularity": 10
		},
		"performance": {
			"value": "Trying to measure the performance of X thing? It's usually not advisable to try and do so from WITHIN javascript - instead it's usually better to use an external profiler that will not change the behaviour of your code in any way. However, if you do still require an internal measure for whatever reason - use the performance API [ https://developer.mozilla.org/en-US/docs/Web/API/Performance ]",
			"popularity": 31,
			"editors": [
				"XinDayZ"
			],
			"changes": [
				{
					"date": "2016-10-28T08:47:55.552Z",
					"editor": "XinDayZ",
					"old-value": "Speed Up Your JavaScript [including dom manipulation]: <http://www.youtube.com/watch?v=mHtdZgou0qU#t=131s> (56 minutes)",
					"new-value": "Trying to measure the performance of X thing? It's usually not advisable to try and do so from WITHIN javascript - instead it's usually better to use an external profiler that will not change the behaviour of your code in any way. However, if you do still require an internal measure for whatever reason - use the performance API [ https://developer.mozilla.org/en-US/docs/Web/API/Performance ]"
				}
			]
		},
		"alert": {
			"value": "The alert() function opens a simple window that blocks your script to show a message box. For debugging purposes, you should use the console functions. See !console",
			"popularity": 136
		},
		"prompt": {
			"value": "The prompt() function opens a simple window that blocks your script to show a message box with an area for the user to enter text. This text is then returned (or null if no text was entered).",
			"popularity": 5
		},
		"pad": {
			"value": "function pad2(n){return (\"0\"+n).slice(-2)}",
			"popularity": 3
		},
		"console.log": {
			"alias": "console",
			"popularity": 5
		},
		"default": {
			"value": "ES6 supports default parameters (function add(a, b = 0){ return a + b }). In ES5, you can handle it in different ways, depending on what you consider a valid argument to be. `function add(a, b){ b = b || 0; return a + b }` is a common idiom. Testing null, undefined or arguments.length might make more sense in some cases.",
			"popularity": 42,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2015-08-09T05:07:10.414Z",
					"editor": "Sorella",
					"old-value": "JavaScript has no default parameters. You can handle this in different ways depending on what data you consider a valid value. If anything but undefined is valid, use `if (typeof x === 'undefined') { x = 'default'; }` if anything but null and undefined are valid, use `if (x == null) { x = default'; }` if anything but falsy values are valid, use `if (!x) { x = 'default'; } or `x = x || 'default';`.",
					"new-value": "JavaScript has no default parameters. You can handle this in different ways depending on what data you consider a valid value. If anything but undefined is valid, use `if (x === undefined) { x = 'default'; }` if anything but null and undefined are valid, use `if (x == null) { x = default'; }` if anything but falsy values are valid, use `if (!x) { x = 'default'; } or `x = x || 'default';`.",
					"regex": "s/typeof x === 'undefined'/x === undefined/"
				},
				{
					"date": "2015-08-09T05:19:45.170Z",
					"editor": "Sorella",
					"old-value": "JavaScript has no default parameters. You can handle this in different ways depending on what data you consider a valid value. If anything but undefined is valid, use `if (x === undefined) { x = 'default'; }` if anything but null and undefined are valid, use `if (x == null) { x = default'; }` if anything but falsy values are valid, use `if (!x) { x = 'default'; } or `x = x || 'default';`.",
					"new-value": "ES6 supports default parameters (function add(a, b = 0){ return a + b }). In ES5, you can handle it in different ways, depending on what you consider a valid argument to be. `function add(a, b){ b = b || 0; return a + b }` is a common idiom. Testing null, undefined or arguments.length might make more sense in some cases."
				}
			]
		},
		"speed": {
			"value": "Yahoo! Best Practices for Speeding Up Your Web Site <http://developer.yahoo.com/performance/rules.html>",
			"popularity": 4
		},
		"php": {
			"alias": "backend",
			"popularity": 52
		},
		"debugger": {
			"alias": "debug",
			"popularity": 85
		},
		"chromedevtools": {
			"value": "http://www.youtube.com/watch?v=N8SS-rUEZPg",
			"popularity": 6
		},
		"tag": {
			"value": "Know the difference between “element” and “tag”. In `<p id=x>...</p>`, `<p id=x>` is a start tag, and `</p>` is an end tag. Taken together, the entire paragraph is a `p` *element*, not a tag. `document.getElementById('x')` returns an element, not a tag. Tags do not exist in the DOM, only in the markup.",
			"popularity": 11,
			"editors": [
				"MJCD",
				"ljharb"
			],
			"changes": [
				{
					"date": "2018-10-18T16:54:25.745Z",
					"editor": "MJCD",
					"old-value": "Know the difference between \"element\" and \"tag\". In \"<p id=x>...</p>\", \"<p id=x>\" is a start tag, and \"</p>\" is an end tag. Taken together, the entire paragraph is a p *element*, not a tag. document.getElementById('x') returns an element, not a tag. Tags do not exist in the DOM, only in the markup.",
					"new-value": "TAG, you're it!"
				},
				{
					"date": "2018-10-18T23:04:49.505Z",
					"editor": "ljharb",
					"old-value": "TAG, you're it!",
					"new-value": "Know the difference between “element” and “tag”. In `<p id=x>...</p>`, `<p id=x>` is a start tag, and `</p>` is an end tag. Taken together, the entire paragraph is a `p` *element*, not a tag. `document.getElementById('x')` returns an element, not a tag. Tags do not exist in the DOM, only in the markup."
				}
			]
		},
		"`": {
			"value": "A relic of a lost age",
			"popularity": 2
		},
		"html-regex": {
			"value": "http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454",
			"popularity": 1
		},
		"spec": {
			"value": "ES3: http://www.mozilla.org/js/language/E262-3.pdf ; ES5: http://www.ecma-international.org/ecma-262/5.1/ ; ES6 / ES2015: http://www.ecma-international.org/ecma-262/6.0/ — You can use !ecma topic or !ecma 1.2.3 to get a link to specific parts of ECMA-262 5th edition",
			"popularity": 24,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-10-15T01:24:27.625Z",
					"editor": "ljharb",
					"old-value": "Language Specification (3 [widely supported]) http://www.mozilla.org/js/language/E262-3.pdf (5 [current]) http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf You can use !ecma topic or !ecma 1.2.3 to get a link to specific parts of ECMA-262 5th edition",
					"new-value": "ES3: http://www.mozilla.org/js/language/E262-3.pdf ; ES5: http://www.ecma-international.org/ecma-262/5.1/ ; ES6 / ES2015: http://www.ecma-international.org/ecma-262/6.0/ — You can use !ecma topic or !ecma 1.2.3 to get a link to specific parts of ECMA-262 5th edition"
				}
			]
		},
		"compat": {
			"value": "ES2016+ (Current): http://kangax.github.io/compat-table/es2016plus/  ES6: http://kangax.github.io/compat-table/es6/  ESNext: http://kangax.github.io/compat-table/esnext/",
			"popularity": 20,
			"editors": [
				"jaawerth"
			],
			"changes": [
				{
					"date": "2019-01-27T00:50:30.538Z",
					"editor": "jaawerth",
					"old-value": "ECMAScript 5 compatibility table by kangax: <http://kangax.github.com/es5-compat-table/>. Also see !quirksmode",
					"new-value": "ES2016+ (Current): http://kangax.github.io/compat-table/es2016plus/  ES6: http://kangax.github.io/compat-table/es6/  ESNext: http://kangax.github.io/compat-table/esnext/"
				}
			]
		},
		"atwood": {
			"alias": "atwood's law",
			"popularity": 2
		},
		"comparisons": {
			"value": "Using == and != should be avoided, since they perform coercion giving unexpected results. Use === and !== instead. See also: http://zero.milosz.ca/ http://es5.github.io/#x11.9.3 https://eqeq.js.org/",
			"popularity": 240,
			"editors": [
				"jrajav",
				"j201",
				"dsamarin",
				"Sorella",
				"`slikts"
			],
			"changes": [
				{
					"date": "2014-07-06T05:51:16.880Z",
					"editor": "j201",
					"old-value": "Using == and != should be avoided, since they perform coercion giving unexpected results. Use === and !== instead. <http://zero.milosz.ca/> See also: http://es5.github.io/#x11.9.3",
					"new-value": "Using == and != should be avoided, since they perform coercion giving unexpected results. Use === and !== instead. http://zero.milosz.ca/ See also: http://es5.github.io/#x11.9.3",
					"regex": "s/[<>]//g"
				},
				{
					"date": "2014-07-06T05:52:09.582Z",
					"editor": "j201",
					"old-value": "Using == and != should be avoided, since they perform coercion giving unexpected results. Use === and !== instead. http://zero.milosz.ca/ See also: http://es5.github.io/#x11.9.3",
					"new-value": "Changed `comparisons` to: Using == and != should be avoided, since they perform coercion giving unexpected results. Use === and !== instead. See also: http://zero.milosz.ca/ http://es5.github.io/#x11.9.3"
				},
				{
					"date": "2014-07-06T05:53:12.499Z",
					"editor": "j201",
					"old-value": "Changed `comparisons` to: Using == and != should be avoided, since they perform coercion giving unexpected results. Use === and !== instead. See also: http://zero.milosz.ca/ http://es5.github.io/#x11.9.3",
					"new-value": "Using == and != should be avoided, since they perform coercion giving unexpected results. Use === and !== instead. See also: http://zero.milosz.ca/ http://es5.github.io/#x11.9.3"
				},
				{
					"date": "2018-12-10T15:59:32.180Z",
					"editor": "`slikts",
					"old-value": "Using == and != should be avoided, since they perform coercion giving unexpected results. Use === and !== instead. See also: http://zero.milosz.ca/ http://es5.github.io/#x11.9.3",
					"new-value": "Using == and != should be avoided, since they perform coercion giving unexpected results. Use === and !== instead. See also: http://zero.milosz.ca/ http://es5.github.io/#x11.9.3 https://eqeq.js.org/"
				}
			]
		},
		"libraries": {
			"alias": "gtfo",
			"popularity": 1
		},
		"sosf": {
			"value": "Son of Suckerfish Dropdowns, a simple technique for making dropdown menus with minimal JavaScript merely for support in IE6: http://www.htmldog.com/articles/suckerfish/dropdowns/",
			"popularity": 4
		},
		"alot": {
			"value": "Do you like to hug alot? http://bit.ly/aVDMTo",
			"popularity": 1
		},
		"drde": {
			"value": "It's U+22F1 DOWN RIGHT DIAGONAL ELLIPSIS \"⋱\"",
			"popularity": 4
		},
		"capitalization": {
			"alias": "spelling"
		},
		"private": {
			"value": "Public and private style scoping does not exist in the traditional sense in javascript. For a good knowledge base on the topic, please see http://javascript.crockford.com/private.html",
			"popularity": 29,
			"editors": [
				"MJCDead"
			]
		},
		"source": {
			"value": "My source code is available at: https://github.com/oftn-oswg/oftn-bot/",
			"popularity": 174,
			"editors": [
				"eligrey"
			],
			"changes": [
				{
					"date": "2016-05-12T08:00:04.970Z",
					"editor": "eligrey",
					"old-value": "My source code is available at: https://github.com/oftn/oftn-bot/",
					"new-value": "My source code is available at: https://github.com/oftn-oswg/oftn-bot/"
				}
			]
		},
		"not-our-library": {
			"alias": "gtfo"
		},
		"firebug": {
			"value": "see !debug",
			"popularity": 11,
			"editors": [
				"ashnur"
			]
		},
		"won't work": {
			"alias": "doesn't work",
			"popularity": 2
		},
		"same": {
			"value": "The same-origin policy prevents access to most methods and properties across pages on different sites (even those inside iframes). Short version: for XHR and cross-frame-interaction to work, this://this.this.and:this/ have to be the same. Alternatives: A server-side proxy, the Dojo iframe trick, CORS, and JSONP. See also: !jsonp, !cors.",
			"popularity": 206,
			"editors": [
				"GreenJello",
				"sillyslux"
			],
			"changes": [
				{
					"date": "2015-11-01T03:07:07.133Z",
					"editor": "GreenJello",
					"old-value": "The same-origin policy prevents access to most methods and properties across pages on different sites (even those inside iframes). Short version: for XHR and cross-frame-interaction to work, this://this.this.and:this/ have to be the same. Alternatives: A server-side proxy, the Dojo iframe trick, CORS, and JSONP. See also: !jsonp, !cors.",
					"new-value": "The same-origin policy prevents access to most methods and properties across pages on different sites (even those inside iframes). Short version: for XHR and cross-frame-interaction to work, this://this.this.this:this/ have to be the same. Alternatives: A server-side proxy, the Dojo iframe trick, CORS, and JSONP. See also: !jsonp, !cors."
				},
				{
					"date": "2017-10-18T23:16:40.422Z",
					"editor": "sillyslux",
					"old-value": "The same-origin policy prevents access to most methods and properties across pages on different sites (even those inside iframes). Short version: for XHR and cross-frame-interaction to work, this://this.this.this:this/ have to be the same. Alternatives: A server-side proxy, the Dojo iframe trick, CORS, and JSONP. See also: !jsonp, !cors.",
					"new-value": "The same-origin policy prevents access to most methods and properties across pages on different sites (even those inside iframes). Short version: for XHR and cross-frame-interaction to work, this://this.this.and:this/ have to be the same. Alternatives: A server-side proxy, the Dojo iframe trick, CORS, and JSONP. See also: !jsonp, !cors."
				}
			]
		},
		"jsonp": {
			"value": "JSONP is an insecure, but workable way to allow cross-domain requests. It consists of inserting a <script> element pointing to a generated script which runs the callback you specify in URL with the response data: <script src=\"http://some.api/api.js?callback=blah\"/> and server has in api.js ’<?= GET['callback'] ?>(<? '{generate:\"response\", data: \"here\"}' ?>)’. See also: !same",
			"popularity": 41
		},
		"cors": {
			"value": "Cross-origin resource sharing (http://www.w3.org/TR/cors/) allows browser to negotiate access for cross-domain requests - for example with XMLHttpRequest - as a way to work around the same-origin policy. See also: !same, http://caniuse.com/cors , https://developer.mozilla.org/en/HTTP_access_control",
			"popularity": 265
		},
		"point": {
			"value": "Don't ask to ask, don't ask if someone is available. Just get to the point, and then wait a while.",
			"popularity": 5
		},
		"http": {
			"value": "Any Web developer worthy of the name must have a strong understanding of HTTP. http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol, http://www.w3.org/Protocols/rfc2616/rfc2616.html, http://www.jmarshall.com/easy/http/",
			"popularity": 22,
			"editors": [
				"gkatsev"
			],
			"changes": [
				{
					"date": "2014-10-03T00:52:25.478Z",
					"editor": "gkatsev",
					"old-value": "Any Web developer worthy of the name must have a strong understanding of HTTP. http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol, http://www.w3.org/Protocols/rfc2616/rfc2616.html, http://www.jmarshall.com/easy/http/, and http://tomayko.com/writings/rest-to-my-wife should be useful.",
					"new-value": "Any Web developer worthy of the name must have a strong understanding of HTTP. http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol, http://www.w3.org/Protocols/rfc2616/rfc2616.html, http://www.jmarshall.com/easy/http/"
				}
			]
		},
		"reduction": {
			"value": "How and why to reduce your page: http://css-tricks.com/reduced-test-cases/ http://webkit.org/quality/reduction.html https://developer.mozilla.org/en/Reducing_testcases",
			"popularity": 1
		},
		"ajax-upload": {
			"value": "Ajax Upload; A file upload script with progress-bar, drag-and-drop: http://valums.com/ajax-upload/",
			"popularity": 1
		},
		"guide": {
			"value": "MDN JavaScript Guide: https://developer.mozilla.org/en/javascript/guide",
			"popularity": 7
		},
		"clj": {
			"value": "comp.lang.javascript, the JS Usenet group: http://groups.google.com/group/comp.lang.javascript/topics",
			"popularity": 4
		},
		"history": {
			"value": "Old style, change window.location.hash: https://developer.mozilla.org/en/DOM/window.location | Newer style, listen for window's hashchange event: https://developer.mozilla.org/en/DOM/window.onhashchange | Newest style, use the HTML5 History API: https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history",
			"popularity": 9
		},
		"last one only": {
			"value": "If something is only being applied to the 'last' one of many, you might have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i); });} `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://web.archive.org/web/20161209211206/www.mennovanslooten.nl/blog/post/62/",
			"popularity": 268,
			"editors": [
				"yansanmo",
				"Maxdamantus",
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-04-20T20:23:09.650Z",
					"editor": "yansanmo",
					"old-value": "If something is only being applied to the 'last' one of many, you have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i) })}; `doY' might only receive 4 as a value. You can solve this using closures, so see !closures. For more info see http://www.mennovanslooten.nl/blog/post/62/",
					"new-value": "If something is only being applied to the 'last' one of many, you have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i) })}; `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://www.mennovanslooten.nl/blog/post/62/"
				},
				{
					"date": "2015-04-17T04:01:30.877Z",
					"editor": "Maxdamantus",
					"old-value": "If something is only being applied to the 'last' one of many, you have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i) })}; `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://www.mennovanslooten.nl/blog/post/62/",
					"new-value": "If something is only being applied to the 'last' one of many, you might have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i) })}; `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://www.mennovanslooten.nl/blog/post/62/",
					"regex": "s/you have/you might have/"
				},
				{
					"date": "2015-04-17T04:04:33.331Z",
					"editor": "Maxdamantus",
					"old-value": "If something is only being applied to the 'last' one of many, you might have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i) })}; `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://www.mennovanslooten.nl/blog/post/62/",
					"new-value": "If something is only being applied to the 'last' one of many, you might have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i); });} `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://www.mennovanslooten.nl/blog/post/62/",
					"regex": "s/\\) \\}\\)\\};/); });}/"
				},
				{
					"date": "2017-08-03T08:08:36.360Z",
					"editor": "ljharb",
					"old-value": "If something is only being applied to the 'last' one of many, you might have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i); });} `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://www.mennovanslooten.nl/blog/post/62/",
					"new-value": "If something is only being applied to the 'last' one of many, you might have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i); });} `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://web.archive.org/web/20161209211206/www.mennovanslooten.nl/blog/post/62/"
				}
			]
		},
		"jscript": {
			"value": "JScript is the Microsoft dialect of the ECMAScript scripting language specification. JavaScript (the Netscape/Mozilla implementation of the ECMA specification), JScript, and ECMAScript are very similar languages.",
			"popularity": 30,
			"editors": [
				"Xinn"
			],
			"changes": [
				{
					"date": "2017-07-17T10:40:34.782Z",
					"editor": "Xinn",
					"old-value": "\"JScript\" is not an abbreviation for JavaScript, but the name of a specific implementation.",
					"new-value": "JScript is the Microsoft dialect of the ECMAScript scripting language specification. JavaScript (the Netscape/Mozilla implementation of the ECMA specification), JScript, and ECMAScript are very similar languages."
				}
			]
		},
		"prototype": {
			"value": "JavaScript uses prototypal inheritance, where Objects inherit directly from other Objects (there's no !classes). This post covers the foundations of that: http://yehudakatz.com/2011/08/12/understanding-prototypes-in-javascript/",
			"popularity": 189,
			"editors": [
				"MJCD",
				"ljharb"
			],
			"changes": [
				{
					"date": "2019-01-28T12:38:30.436Z",
					"editor": "MJCD",
					"old-value": "JavaScript uses prototypal inheritance, where Objects inherit directly from other Objects (there's no !classes). This post covers the foundations of that: http://yehudakatz.com/2011/08/12/understanding-prototypes-in-javascript/",
					"new-value": "JavaScript uses prototypal inheritance, where Objects inherit directly from other Objects. This post covers the foundations of that: http://yehudakatz.com/2011/08/12/understanding-prototypes-in-javascript/"
				},
				{
					"date": "2019-01-29T00:22:48.620Z",
					"editor": "ljharb",
					"old-value": "JavaScript uses prototypal inheritance, where Objects inherit directly from other Objects. This post covers the foundations of that: http://yehudakatz.com/2011/08/12/understanding-prototypes-in-javascript/",
					"new-value": "JavaScript uses prototypal inheritance, where Objects inherit directly from other Objects (there's no !classes). This post covers the foundations of that: http://yehudakatz.com/2011/08/12/understanding-prototypes-in-javascript/"
				}
			]
		},
		"innerhtml": {
			"value": "InnerHTML has its quirks. DOM methods are a good alternative (http://xrl.us/bmaiz). To read a list of innerHTML quirks and possible workarounds, see http://js.isite.net.au/faq/innerHTML). You probably want to use a DOM builder (like Hyperscript) instead of raw DOM methods.",
			"popularity": 64,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2016-02-19T07:06:39.002Z",
					"editor": "Sorella",
					"old-value": "InnerHTML is fast, but has its quirks. DOM methods are a good alternative - without the speed and readability (http://xrl.us/bmaiz). To read a list of innerHTML quirks and possible workarounds, see http://js.isite.net.au/faq/innerHTML)",
					"new-value": "InnerHTML has its quirks. DOM methods are a good alternative (http://xrl.us/bmaiz). To read a list of innerHTML quirks and possible workarounds, see http://js.isite.net.au/faq/innerHTML). You probably want to use a DOM builder (like Hyperscript) instead of raw DOM methods."
				}
			]
		},
		"io": {
			"value": "JavaScript has no notion of input/output. IO, including network access, must be mediated by host objects, which your environment must provide (that is, the environment in which you are running the script, like a browser)",
			"popularity": 3
		},
		"properties": {
			"value": "foo.bar and foo[\"bar\"] are both ways to access a property on a JavaScript object; use the latter when the property name is not a legal identifier (e.g. foo[\"my-cats\"] or foo[\"%emails%\"]) or when you need to construct the property name from a variable (e.g. prop => foo[prop]).",
			"popularity": 95,
			"editors": [
				"graingert",
				"GreenJello"
			],
			"changes": [
				{
					"date": "2017-06-12T23:23:25.248Z",
					"editor": "graingert",
					"old-value": "foo.bar and foo[\"bar\"] are both ways to access a property on a JavaScript object; use the latter when the property name is not a legal identifier (e.g. foo[\"my-cats\"] or foo[\"emails[]\"]) or when you need to construct the property name from a variable (e.g. var prop = \"bar\"; var x = foo[prop]).",
					"new-value": "foo.bar and foo[\"bar\"] are both ways to access a property on a JavaScript object; use the latter when the property name is not a legal identifier (e.g. foo[\"my-cats\"] or foo[\"emails[]\"]) or when you need to construct the property name from a variable (e.g. prop => foo[prop])."
				},
				{
					"date": "2018-08-13T07:09:35.784Z",
					"editor": "GreenJello",
					"old-value": "foo.bar and foo[\"bar\"] are both ways to access a property on a JavaScript object; use the latter when the property name is not a legal identifier (e.g. foo[\"my-cats\"] or foo[\"emails[]\"]) or when you need to construct the property name from a variable (e.g. prop => foo[prop]).",
					"new-value": "foo.bar and foo[\"bar\"] are both ways to access a property on a JavaScript object; use the latter when the property name is not a legal identifier (e.g. foo[\"my-cats\"] or foo[\"%emails%\"]) or when you need to construct the property name from a variable (e.g. prop => foo[prop])."
				}
			]
		},
		"document.wrong": {
			"alias": "document.write",
			"popularity": 24
		},
		"parseint": {
			"value": "If you want to convert something to a Number, don't use `parseInt`, just convert it to a Number using `Number(x)`. parseInt will convert it to a String, then extract the first numeric characters in that String that are allowed in the specified radix, THEN convert those to a Number. You only use it for things like parseInt('500 days of Summer', 10) => 500",
			"popularity": 48,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2016-02-26T21:42:36.851Z",
					"editor": "Sorella",
					"old-value": "If you want to convert something to a Number, don't use `parseInt`, just convert it to a Number using `Number(x)`. parseInt will convert it to a String, then extract the first numeric characters in that String that are allowed in the specified radix, THEN convert those to a Number. You only use it for things like parseInt('500 days of Summer') => 500",
					"new-value": "If you want to convert something to a Number, don't use `parseInt`, just convert it to a Number using `Number(x)`. parseInt will convert it to a String, then extract the first numeric characters in that String that are allowed in the specified radix, THEN convert those to a Number. You only use it for things like parseInt('500 days of Summer', 10) => 500",
					"regex": "s/\\'\\)\\ \\=>/', 10) =>/"
				}
			]
		},
		"trust": {
			"value": "Stop worrying and TRUST THE GARBAGE COLLECTOR.",
			"popularity": 4
		},
		"gcu": {
			"value": "Google Code University: HTML, CSS, and Javascript from the Ground Up <http://code.google.com/edu/submissions/html-css-javascript/>",
			"popularity": 4
		},
		"owsc": {
			"value": "Opera Web Standards Curriculum: Start-to-finish curriculum for learning modern web standards: <http://dev.opera.com/articles/wsc/>",
			"popularity": 6
		},
		"truthy": {
			"value": "The 'falsy' values in JavaScript are undefined, null, 0, -0, 0n, NaN, '', and false. The 'truthy' values are all other values. All objects are truthy. There is nothing both truthy and falsy, or neither truthy nor falsy.",
			"popularity": 298,
			"editors": [
				"Mortchek",
				"ljharb",
				"dwcook",
				"ckknight",
				"GreenJello"
			],
			"changes": [
				{
					"date": "2019-04-20T08:49:31.504Z",
					"editor": "GreenJello",
					"old-value": "The 'falsy' values in JavaScript are undefined, null, 0, -0, NaN, '', and false. The 'truthy' values are all other values. All objects are truthy. There is nothing both truthy and falsy, or neither truthy nor falsy.",
					"new-value": "The 'falsy' values in JavaScript are undefined, null, 0, -0, 0n, NaN, '', and false. The 'truthy' values are all other values. All objects are truthy. There is nothing both truthy and falsy, or neither truthy nor falsy."
				}
			]
		},
		"operators": {
			"value": "https://developer.mozilla.org/en/JavaScript/Reference/Operators",
			"popularity": 8
		},
		"for..in": {
			"value": "for..in is not to loop through indices/values of an array. Use for(init;cond;step) or Array#forEach. For..in iterates over *all* enumerable properties of an object, without any defined order. See also !iteration",
			"popularity": 64,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2018-08-20T12:35:05.005Z",
					"editor": "graingert",
					"old-value": "for..in is not to loop through indices/values of an array. Use for(init;cond;step) or Array#forEach. For..in iterates over *all* enumerable properties of an object, without any defined order.",
					"new-value": "for..in is not to loop through indices/values of an array. Use for(init;cond;step) or Array#forEach. For..in iterates over *all* enumerable properties of an object, without any defined order. See also !noloops"
				},
				{
					"date": "2018-08-20T12:35:40.798Z",
					"editor": "graingert",
					"old-value": "for..in is not to loop through indices/values of an array. Use for(init;cond;step) or Array#forEach. For..in iterates over *all* enumerable properties of an object, without any defined order. See also !noloops",
					"new-value": "for..in is not to loop through indices/values of an array. Use for(init;cond;step) or Array#forEach. For..in iterates over *all* enumerable properties of an object, without any defined order. See also !iteration"
				}
			]
		},
		"intro": {
			"value": "https://developer.mozilla.org/en-US/learn/javascript",
			"popularity": 9
		},
		"library": {
			"alias": "gtfo",
			"popularity": 3
		},
		"timeout": {
			"value": "Use setTimeout for guaranteed delay (callbacks will be delayed at least x ms from the last execution). use setInterval for guaranteed frequency (callbacks will be called at least every x ms, regardless of previous executions).",
			"popularity": 34,
			"editors": [
				"gkatsev"
			]
		},
		"holistic-performance": {
			"value": "\"Holistic performance encompasses two notions. A) Performance includes filesize, load time and parse time as well as execution time. B) Try to keep performance across browsers even where possible. From John Resig's speech: http://ontwik.com/javascript/velocity-2011-john-resig-holistic-performance/\"",
			"popularity": 4
		},
		"comma": {
			"value": "\"The humble comma has a more complex role in javascript than it may, at first, appear. Take a gander at this for details : http://javascriptweblog.wordpress.com/2011/04/04/the-javascript-comma-operator/\"",
			"popularity": 11
		},
		"fastest": {
			"value": "Please refrain from asking broad questions such \"What's the easiest way to do X?\" or \"Fastest way to do Y?\". Explain the context, what you want to do and ask one well defined question.",
			"popularity": 25
		},
		"single-threaded": {
			"value": "Browser JS is single-threaded and shares a thread with the rendering engine. That means that the browser can't render the page while it's executing JS, and it can't execute JS while it's rendering the page. There's NO parallelism (except for webworkers).",
			"popularity": 7
		},
		"str2num": {
			"value": "There are a variety of ways to convert a string to a number. See http://phrogz.net/JS/string_to_number.png for the functional \"problems\" with some of them. See http://jsperf.com/convert-string-to-number-techniques for the performance impacts.",
			"popularity": 2
		},
		"property": {
			"alias": "properties",
			"popularity": 2
		},
		"control-click on table cells": {
			"value": "Solution is to add \"-moz-user-select: none;\" for table elements that you want to disable this behavior."
		},
		"coffeescript": {
			"value": "CoffeeScript is not JavaScript; try #coffeescript for help.",
			"popularity": 29,
			"editors": [
				"FireFly"
			]
		},
		"fast": {
			"alias": "fastest",
			"popularity": 1
		},
		"best": {
			"alias": "fastest",
			"popularity": 20
		},
		"iife": {
			"value": "An \"immediately invoked function expression\" is an expression that both creates and calls a function. As with any function call, a scope is created. \"(function () { /* ... */ }())\" is the most common form. For more info: http://benalman.com/news/2010/11/immediately-invoked-function-expression/",
			"popularity": 492,
			"editors": [
				"dwcook",
				"Agamemnus",
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-03-14T05:16:13.778Z",
					"editor": "Agamemnus",
					"old-value": "An \"immediately invoked function expression\" is an expression that both creates and calls a function. As with any function call, a scope is created. \"(function () { /* ... */ }())\" is a common form. For more info: http://benalman.com/news/2010/11/immediately-invoked-function-expression/",
					"new-value": "An \"immediately invoked function expression\" is an expression that both creates and calls a function. As with any function call, a scope is created. \"(function () { /* ... */ }());\" is a common form. \"void function () {/* ... */} ()\" can also be used. For more info: http://benalman.com/news/2010/11/immediately-invoked-function-expression/"
				},
				{
					"date": "2014-03-15T05:50:25.623Z",
					"editor": "ljharb",
					"old-value": "An \"immediately invoked function expression\" is an expression that both creates and calls a function. As with any function call, a scope is created. \"(function () { /* ... */ }());\" is a common form. \"void function () {/* ... */} ()\" can also be used. For more info: http://benalman.com/news/2010/11/immediately-invoked-function-expression/",
					"new-value": "An \"immediately invoked function expression\" is an expression that both creates and calls a function. As with any function call, a scope is created. \"(function () { /* ... */ }())\" is the most common form. For more info: http://benalman.com/news/2010/11/immediately-invoked-function-expression/"
				}
			]
		},
		"away": {
			"value": "Please do not use noisy away messages and nicks. It is annoying and unnecessary. Use the command \"/away <reason>\" to set your client away silently.",
			"popularity": 10
		},
		"oop": {
			"value": "http://robotlolita.me/2011/10/09/understanding-javascript-oop.html summarizes Object Oriented Programming in Javascript, using concepts from ECMAScript 5, and relating them back to older paradigms from ECMAScript 3",
			"popularity": 659,
			"editors": [
				"gkatsev",
				"Sorella"
			],
			"changes": [
				{
					"date": "2014-06-17T22:16:40.056Z",
					"editor": "Sorella",
					"old-value": "http://robotlolita.github.io/2011/10/09/understanding-javascript-oop.html summarizes Object Oriented Programming in Javascript, using concepts from ECMAScript 5, and relating them back to older paradigms from ECMAScript 3",
					"new-value": "http://robotlolita.me/2011/10/09/understanding-javascript-oop.html summarizes Object Oriented Programming in Javascript, using concepts from ECMAScript 5, and relating them back to older paradigms from ECMAScript 3",
					"regex": "s/\\.github\\.io/.me/"
				}
			]
		},
		"[]": {
			"alias": "properties",
			"popularity": 81,
			"editors": [
				"cjohnson"
			],
			"changes": [
				{
					"date": "2017-06-12T23:24:38.502Z",
					"editor": "cjohnson",
					"old-alias": "properties",
					"new-alias": "properties"
				}
			]
		},
		"cast": {
			"value": "boolean: !!o, Boolean(o). number: +o, Number(o). string: String(o), '' + o",
			"popularity": 7
		},
		"pask": {
			"value": "Paste your code at http://jsfiddle.net. If you have a question, please just ask it. Don't look for topic experts. Don't ask to ask. Don't PM! Just ask the question straight out. http://catb.org/~esr/faqs/smart-questions.html",
			"popularity": 6
		},
		"lol": {
			"value": "Thou shalt not type LOL unless you are really laughing out loud.",
			"popularity": 34
		},
		"equivalent of x": {
			"value": "Instead of asking \"What's the equivalent of language Y's X\", describe the feature you want. Chances are we don't know what language Y is or what feature X does.",
			"popularity": 1
		},
		"learn-js": {
			"value": "Learn JavaScript https://developer.mozilla.org/en-US/learn/javascript",
			"popularity": 43
		},
		"plz": {
			"value": "http://dominik.honnef.co/posts/2011/07/don_t_abbreviate__thanks____sorry__or__please_/",
			"popularity": 2
		},
		"format": {
			"value": "\"inimino: It is ridiculous to use formatting conventions as a proxy for code quality. ...snip... If you are reduced to picking software on the basis of whether the author prefers your particular coding style or not, you may just as well admit that you do not know how to discern code quality and flip a coin instead.\"",
			"popularity": 8
		},
		"kitten": {
			"value": "Whenever you pass a String to setTimeout, God kills a kitten! Think of the poor kittens! Since passing JS in a string to these functions means an implicit eval, you likely don't want that. Also see: first-class functions;",
			"popularity": 6
		},
		"first-class functions": {
			"value": "Functions in JavaScript are first class. This means you can pass it around, store it in variables and do anything you'd do with other values. I.e.: The following are both valid: var foo = {}; console.log(foo); and var foo = function(){ }; console.log(foo);",
			"popularity": 6,
			"editors": [
				"eboy",
				"dwcook"
			]
		},
		"doubleyea": {
			"value": "yea YEAAAAH *screeching guitar*",
			"popularity": 9
		},
		"hey": {
			"value": "\"!ho\"",
			"popularity": 66
		},
		"regexp": {
			"value": "Reference: http://regular-expressions.info/ - Regular Expressions in Javascript:http://evolt.org/regexp_in_javascript/ - Useful tester: https://regex101.com - Game: https://regexcrossword.com",
			"popularity": 33,
			"editors": [
				"cjohnson",
				"qswz"
			],
			"changes": [
				{
					"date": "2015-04-09T18:54:05.998Z",
					"editor": "cjohnson",
					"old-value": "Regular Expressions in Javascript: http://www.evolt.org/article/Regular_Expressions_in_JavaScript/17/36435/ .. or more generally: http://www.regular-expressions.info/. Useful tester: http://regexpal.com/",
					"new-value": "Regular Expressions in Javascript: http://www.evolt.org/article/Regular_Expressions_in_JavaScript/17/36435/ .. or more generally: http://www.regular-expressions.info/. Useful tester: https://regex101.com/"
				},
				{
					"date": "2015-04-09T18:58:37.658Z",
					"editor": "cjohnson",
					"old-value": "Regular Expressions in Javascript: http://www.evolt.org/article/Regular_Expressions_in_JavaScript/17/36435/ .. or more generally: http://www.regular-expressions.info/. Useful tester: https://regex101.com/",
					"new-value": "Reference: http://regular-expressions.info/ - Regular Expressions in Javascript: http://evolt.org/regexp_in_javascript/ - Useful tester: https://regex101.com/"
				},
				{
					"date": "2019-09-04T14:52:06.491Z",
					"editor": "qswz",
					"old-value": "Reference: http://regular-expressions.info/ - Regular Expressions in Javascript: http://evolt.org/regexp_in_javascript/ - Useful tester: https://regex101.com/",
					"new-value": "Reference: http://regular-expressions.info/ - Regular Expressions in Javascript:http://evolt.org/regexp_in_javascript/ - Useful tester: https://regex101.com - Game: https://regexcrossword.com"
				}
			]
		},
		"prototype intro": {
			"value": "A short (and practical) explanation of how prototypal inheritance works in JavaScript: https://hughfdjackson.com/javascript/prototypes-the-short%28est-possible%29-story/ For a much more in-depth introduction, see !oop",
			"popularity": 231,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-04-04T09:32:31.694Z",
					"editor": "ljharb",
					"old-value": "A short (and practical) explanation of how prototypal inheritance works in JavaScript: http://hughfdjackson.com/javascript/2012/01/05/prototypes:-the-short%28est-possible%29-story/. For a much more in-depth introduction, see !oop",
					"new-value": "A short (and practical) explanation of how prototypal inheritance works in JavaScript: http://hughfdjackson.com/javascript/prototypes%3A-the-short%28est-possible%29-story/ For a much more in-depth introduction, see !oop"
				},
				{
					"date": "2016-12-13T05:25:41.940Z",
					"editor": "ljharb",
					"old-value": "A short (and practical) explanation of how prototypal inheritance works in JavaScript: http://hughfdjackson.com/javascript/prototypes%3A-the-short%28est-possible%29-story/ For a much more in-depth introduction, see !oop",
					"new-value": "A short (and practical) explanation of how prototypal inheritance works in JavaScript: https://hughfdjackson.com/javascript/prototypes-the-short%28est-possible%29-story/ For a much more in-depth introduction, see !oop"
				}
			]
		},
		"mix": {
			"value": "You should not mix HTML and JavaScript. Instead of <button onclick=\"foo()\"> use <button id=\"magicmaker\"> and in your JS document.getElementById('magicmaker').addEventListener('click',foo,false);",
			"popularity": 3
		},
		"kiss": {
			"value": "Keep It Simple, Stupid",
			"popularity": 6
		},
		"inline": {
			"value": "Inline event handlers are essentially `eval` inside HTML markup - they're bad practice and result in poorly factored, hard-to-manage code. Seriously consider attaching your events with JavaScript, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener",
			"popularity": 818,
			"editors": [
				"ljharb",
				"Akinator"
			],
			"changes": [
				{
					"date": "2016-09-12T10:37:07.475Z",
					"editor": "ljharb",
					"old-value": "Using inline event handlers is bad practice and results in poorly factored, hard-to-manage code. Consider attaching your events with Javascript, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener",
					"new-value": "Using inline event handlers is bad practice and results in poorly factored, hard-to-manage code. Seriously consider attaching your events with JavaScript, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener"
				},
				{
					"date": "2018-04-03T00:57:20.564Z",
					"editor": "Akinator",
					"old-value": "Using inline event handlers is bad practice and results in poorly factored, hard-to-manage code. Seriously consider attaching your events with JavaScript, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener",
					"new-value": "Inline event handlers are essentially `eval` inside HTML markup - they're bad practice and result in poorly factored, hard-to-manage code. Seriously consider attaching your events with JavaScript, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener"
				}
			]
		},
		"gist": {
			"value": "Paste code at https://gist.github.com (or a similar site see !paste) and name the file .js so that we can look over it. Thanks!",
			"popularity": 342,
			"editors": [
				"GreenJello",
				"graingert"
			],
			"changes": [
				{
					"date": "2017-03-12T16:44:20.607Z",
					"editor": "GreenJello",
					"old-value": "Paste code at https://gist.github.com or a similar site so that we can look over it. Thanks!",
					"new-value": "Paste code at https://gist.github.com (or a similar site) and name the file .js so that we can look over it. Thanks!"
				},
				{
					"date": "2019-05-02T13:18:56.073Z",
					"editor": "graingert",
					"old-value": "Paste code at https://gist.github.com (or a similar site) and name the file .js so that we can look over it. Thanks!",
					"new-value": "Paste code at https://gist.github.com (or a similar site see !paste) and name the file .js so that we can look over it. Thanks!"
				}
			]
		},
		"diy": {
			"value": "Before you ask your question, ask yourself if you could have discovered it yourself in a javascript console. If so, try it. Feel free to ask *why* something is the way it is, but don't be lazy.",
			"popularity": 3
		},
		"associative array": {
			"value": "In javascript, normal objects can be used as associative arrays: that is, they are unordered collections of key:value pairs. e.g. var data = { first_name: \"bob\", last_name: \"peterson\", age: 34, children: [\"beth\", \"rob\", \"chris\"]}",
			"popularity": 6
		},
		"repl": {
			"value": "REPL stands for 'read-eval-print loop', and is a great way to try your code out. Google for '<your browser> console'. The normal shortcuts are f12 or command/ctrl-shift-I",
			"popularity": 50,
			"editors": [
				"AUD5",
				"ljharb"
			],
			"changes": [
				{
					"date": "2019-09-18T16:16:45.103Z",
					"editor": "AUD5",
					"old-value": "REPL stands for 'read-eval-print loop', and is a great way to try your code out. Google for '<your browser> console'. The normal shortcuts are f12 or command/ctrl-shift-I",
					"new-value": "REPL stands for 'read-eval-print loop', and is a great way to try your code out. A getting started guide is available @ https://clojure.org/guides/repl/launching_a_basic_repl"
				},
				{
					"date": "2019-09-28T04:03:03.239Z",
					"editor": "ljharb",
					"old-value": "REPL stands for 'read-eval-print loop', and is a great way to try your code out. A getting started guide is available @ https://clojure.org/guides/repl/launching_a_basic_repl",
					"new-value": "REPL stands for 'read-eval-print loop', and is a great way to try your code out. Google for '<your browser> console'. The normal shortcuts are f12 or command/ctrl-shift-I"
				}
			]
		},
		"module pattern": {
			"value": "http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth. See https://github.com/substack/node-browserify and http://requirejs.org/ for alternative module definition and loading support.",
			"popularity": 74
		},
		"schools": {
			"value": "Some useful resources for learning js: https://developer.mozilla.org/en-US/learn/javascript. Also see !eloquent",
			"popularity": 18
		},
		"oink": {
			"value": "^(oo)^"
		},
		"live": {
			"value": "Give us some live code, so we don't have to do it for you. http://jsfiddle.net and http://jsbin.com are great!",
			"popularity": 24
		},
		"delete": {
			"value": "Delete only removes properties from objects, not variables from a scope. See http://perfectionkills.com/understanding-delete. Note: It's better to avoid changing objects shapes for performance",
			"popularity": 23,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2019-02-14T22:19:19.718Z",
					"editor": "qswz",
					"old-value": "Delete only removes properties from objects, not variables from a scope. See http://perfectionkills.com/understanding-delete/",
					"new-value": "Delete only removes properties from objects, not variables from a scope. See http://perfectionkills.com/understanding-delete. Note: It's better to avoid changing objects shapes for performance"
				}
			]
		},
		"last one": {
			"alias": "last one only",
			"popularity": 2
		},
		"oop intro": {
			"alias": "prototype intro",
			"popularity": 1
		},
		"bitwise": {
			"value": "Bitwise operators (<<, >>, >>>, ^, &, |, and ~) limit their arguments to 32-bit integers and should not be used with values of unknown size.",
			"popularity": 9
		},
		"equality": {
			"value": "When the types of a and b are the same, 'a == b' and 'a === b' have the same value. Otherwise, == coerces its operands to the same type, and is sometimes true on operands where === is false. On objects (which are mutable), a == b iff mutating a also mutates b. On immutable types (string, number, boolean, undefined, null) a == b iff the values are equal. Equality Table: https://janosch.woschitz.org/javascript-equality-comparison/",
			"popularity": 43,
			"editors": [
				"CoverSlide|TPFR"
			]
		},
		"'ecma5 compat'": {
			"value": "'For a robust list of ES5 compatibility charts, see Kangax's page at : <http://kangax.github.com/es5-compat-table/>'",
			"popularity": 0
		},
		"work": {
			"alias": "doesn't work",
			"popularity": 53,
			"editors": [
				"yorick"
			],
			"changes": [
				{
					"date": "2014-04-02T16:12:15.857Z",
					"editor": "yorick",
					"old-alias": "jobs",
					"new-alias": "doesn't work"
				}
			]
		},
		"example": {
			"value": "don't show us examples that include mistakes out of laziness and ask us why it's not working. We'll tell you about those mistakes. Seriously. What else did you expect?",
			"popularity": 7
		},
		"amiallowed": {
			"value": "Yes, you're allowed to add factoids!",
			"popularity": 13
		},
		"public": {
			"value": "don't direct your question towards one member of the chat who is active & seems knowledgable, but is otherwise unrelated. Ask the channel at large instead.",
			"popularity": 10
		},
		"premature optimization": {
			"value": "Worrying about efficiency without first identifying real bottlenecks that affect the end-user leads to hard to read, hard to maintain code; and is far slower to write. Unless you can prove that it causes significant and noticeable slow-down, you've probably got bigger things to worry about.",
			"popularity": 79,
			"editors": [
				"j201"
			],
			"changes": [
				{
					"date": "2014-06-17T19:40:41.649Z",
					"editor": "j201",
					"old-value": "Worrying about effeciency without first identifying real bottlenecks that affect the end-user leads to hard to read, hard to maintain code; and is far slower to write. Unless you can prove that it causes significant and noticeable slow-down, you've probably got bigger things to worry about.",
					"new-value": "Worrying about efficiency without first identifying real bottlenecks that affect the end-user leads to hard to read, hard to maintain code; and is far slower to write. Unless you can prove that it causes significant and noticeable slow-down, you've probably got bigger things to worry about.",
					"regex": "s/effeciency/efficiency/"
				}
			]
		},
		"falsy": {
			"alias": "truthy",
			"popularity": 187
		},
		"new array": {
			"value": "The array literal format - [] - is often preferred for array construction to the array constructor - new Array() or Array(), for two reasons. 1) [] is fewer characters without damaging readability, 2) new Array acts the same as [], *except* if you pass a single integer argument; in which case it makes an array whose length is equal to that argument. [] has no such functionality, and hence has no such inconsistencies.",
			"popularity": 17
		},
		"describe": {
			"value": "Please, provide the full scenario for your problem. e.g.: I am trying to do X, I do so by calling APIs Y (see !paste), but Z happens instead. I see the following error messages: [can't call method Y of undefined].",
			"popularity": 257,
			"editors": [
				"ashnur"
			]
		},
		"synchronous": {
			"value": "Please, show a little love to your users and *don't* use synchronous functions that can take more than a couple of mileseconds. JS is single threaded, and the browser can't do anything else while your code is running, including rendering the UI.",
			"popularity": 8
		},
		"env": {
			"value": "javascript is a scripting language; it has no inherent power to interact with anything external. Environments empower js with APIs to do this; which environment are you in?",
			"popularity": 5
		},
		"namespaces": {
			"value": "The horror, the horror…",
			"popularity": 6
		},
		"helpfulhelp": {
			"value": "http://guipn.com/blog/how-to-get-helpful-help/",
			"popularity": 7
		},
		"guest": {
			"value": "If you switched your nick to something a little more personalized, it would be easier for us to talk to you! Here are some possibilities to get you started: pikachu he_man milky_joe beastman",
			"popularity": 8,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-10-20T19:48:04.683Z",
					"editor": "ljharb",
					"old-value": "'If you switched your nick to something a little more personalized, it would be easier for us to talk to you! Here are some possibilities to get you started: 'pikachu' 'he_man' 'milky_joe' 'beastman'",
					"new-value": "If you switched your nick to something a little more personalized, it would be easier for us to talk to you! Here are some possibilities to get you started: pikachu he_man milky_joe beastman"
				}
			]
		},
		"pols": {
			"value": "JS is not like a lot of languages out there. It'll probably violate the principle of least surprise for people coming from many other languages. While this may be frustrating to start with, it's not inherently a reason that js is 'a bad language'(tm). Keep at it.",
			"popularity": 0
		},
		"study": {
			"value": "List of resources (of varying quality) for further study of JavaScript for web app developers. http://www.impressivewebs.com/javascript-resources-web-app-developers/",
			"popularity": 2
		},
		"api": {
			"value": "An API (or Application Programming Interface) is an interface through which you interact with a software component, such as a library or module.",
			"popularity": 16
		},
		"last-only": {
			"alias": "last one only",
			"popularity": 1
		},
		"last": {
			"alias": "last one only",
			"popularity": 233
		},
		"nouns": {
			"value": "In JavaScript, verbs are equally important as nouns. http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html",
			"popularity": 249,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-06-13T11:15:45.357Z",
					"editor": "ljharb",
					"old-value": "In Javascript, verbs are equally important as nouns. http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html",
					"new-value": "In JavaScript, verbs are equally important as nouns. http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html"
				}
			]
		},
		"fe vs fd": {
			"alias": "fe",
			"popularity": 81
		},
		"nfe": {
			"value": "Named Function Expressions: http://kangax.github.com/nfe/",
			"popularity": 13
		},
		"browserling": {
			"value": "test out your cross-browser issues yourself at browserling.com",
			"popularity": 5
		},
		"google maps": {
			"value": "You are asking a question about the Google Maps API. Though written in JS, it is out of scope for this channel. The folks in #googlemaps will probably be able to help you better.",
			"popularity": 1
		},
		"googlemaps": {
			"alias": "google maps"
		},
		"bootstrap": {
			"value": "The folks in ##bootstrap can probably answer your question better than we can.",
			"popularity": 46,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-11-04T12:03:02.214Z",
					"editor": "ljharb",
					"old-value": "The guys in ##twitter-bootstrap can probably answer your question better than we can.",
					"new-value": "The folks in ##twitter-bootstrap can probably answer your question better than we can."
				},
				{
					"date": "2014-11-04T12:04:02.016Z",
					"editor": "ljharb",
					"old-value": "The folks in ##twitter-bootstrap can probably answer your question better than we can.",
					"new-value": "The folks in ##bootstrap can probably answer your question better than we can."
				}
			]
		},
		"faq": {
			"value": "http://jibbering.com/faq/",
			"popularity": 7
		},
		"hello": {
			"value": "Welcome! We're a community of friendly, helpful people who are happy to help any time 24/7/365. Please make yourself at home and consider adding us to your autojoin :) Please make sure you read the channel status for channel commands and updates. FYI, just saying hello with no message is super rude in IRC! See also !nohello",
			"popularity": 337,
			"editors": [
				"PigDude",
				"qswz",
				"GreenJello",
				"graingert",
				"MJCD"
			],
			"changes": [
				{
					"date": "2017-05-15T15:22:28.621Z",
					"editor": "qswz",
					"old-value": "hello",
					"new-value": "just ask directly"
				},
				{
					"date": "2017-05-17T21:48:24.553Z",
					"editor": "GreenJello",
					"old-value": "just ask directly",
					"new-value": "Hi, there. Do you have a question?"
				},
				{
					"date": "2017-05-17T21:48:40.481Z",
					"editor": "GreenJello",
					"old-value": "Hi, there. Do you have a question?",
					"new-value": "Hi! Do you have a question?"
				},
				{
					"date": "2017-12-31T22:38:12.291Z",
					"editor": "qswz",
					"old-value": "Hi! Do you have a question?",
					"new-value": "Hi! Do you have a question? also see http://www.nohello.com"
				},
				{
					"date": "2017-12-31T22:39:17.846Z",
					"editor": "graingert",
					"old-value": "Hi! Do you have a question? also see http://www.nohello.com",
					"new-value": "Hi! Do you have a question? also see http://nohello.com"
				},
				{
					"date": "2018-01-05T21:56:56.112Z",
					"editor": "MJCD",
					"old-value": "Hi! Do you have a question? also see http://nohello.com",
					"new-value": "Welcome! We're a community of friendly, helpful people who are happy to help any time 24/7/365. Please make yourself at home and consider adding us to your autojoin :) Please make sure you read the channel status for channel commands and updates."
				},
				{
					"date": "2018-05-09T22:30:35.383Z",
					"editor": "graingert",
					"old-value": "Welcome! We're a community of friendly, helpful people who are happy to help any time 24/7/365. Please make yourself at home and consider adding us to your autojoin :) Please make sure you read the channel status for channel commands and updates.",
					"new-value": "Welcome! We're a community of friendly, helpful people who are happy to help any time 24/7/365. Please make yourself at home and consider adding us to your autojoin :) Please make sure you read the channel status for channel commands and updates. FYI, just saying hello with no message is super rude in IRC! See also !nohello"
				}
			]
		},
		"otbs": {
			"value": "The One True Brace style: https://en.wikipedia.org/wiki/Indent_style#Variant:_1TBS_.28OTBS.29",
			"popularity": 99,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-09-23T07:37:33.929Z",
					"editor": "ljharb",
					"old-value": "The One True Brace style: http://en.wikipedia.org/wiki/Indent_style#Variant:_1TBS",
					"new-value": "The One True Brace style: https://en.wikipedia.org/wiki/Indent_style#Variant:_1TBS_.28OTBS.29"
				}
			]
		},
		"use a library": {
			"value": "You want to solve a problem that has been solved several times before, and has been distributed as a reusable component for anyone to use. Using a library you can have your cake, and eat it too!",
			"popularity": 2
		},
		"ajax": {
			"value": "XMLHttpRequest, a method for asynchronous fetching of data or files from a server with javascript. https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest (see also: !cors for issues with cross-origin XHR)",
			"popularity": 119,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2014-02-08T21:08:55.256Z",
					"editor": "GreenJello",
					"old-value": "XMLHttpRequest, a method for asynchronous fetching of pages from javascript. https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest (see also: !cors for issues with cross-origin XHR)",
					"new-value": "XMLHttpRequest, a method for asynchronous fetching of data or files from a server with javascript. https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest (see also: !cors for issues with cross-origin XHR)"
				}
			]
		},
		"xhr": {
			"alias": "ajax",
			"popularity": 40
		},
		"es5 shim": {
			"value": "To add most ES5 functionality to older, or modern non-compliant (eg, ALL of them) browsers or node, use https://npmjs.com/package/es5-shim !",
			"popularity": 183,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-01-06T00:01:06.220Z",
					"editor": "ljharb",
					"old-value": "You can add some ES5 functionality to older browsers with https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js or http://cdnjs.cloudflare.com/ajax/libs/es5-shim/2.0.8/es5-shim.min.js",
					"new-value": "You can add some ES5 functionality to older browsers with https://github.com/es-shims/es5-shim/blob/master/es5-shim.js or http://cdnjs.cloudflare.com/ajax/libs/es5-shim/2.0.8/es5-shim.min.js"
				},
				{
					"date": "2014-02-14T08:55:26.281Z",
					"editor": "ljharb",
					"old-value": "You can add some ES5 functionality to older browsers with https://github.com/es-shims/es5-shim/blob/master/es5-shim.js or http://cdnjs.cloudflare.com/ajax/libs/es5-shim/2.0.8/es5-shim.min.js",
					"new-value": "You can add most ES5 functionality to older browsers with https://github.com/es-shims/es5-shim/blob/master/es5-shim.js"
				},
				{
					"date": "2014-03-14T07:06:58.090Z",
					"editor": "ljharb",
					"old-value": "You can add most ES5 functionality to older browsers with https://github.com/es-shims/es5-shim/blob/master/es5-shim.js",
					"new-value": "You can add most ES5 functionality to older (or modern non-compliant) browsers with https://github.com/es-shims/es5-shim/blob/master/es5-shim.js"
				},
				{
					"date": "2015-06-12T00:18:04.818Z",
					"editor": "ljharb",
					"old-value": "You can add most ES5 functionality to older (or modern non-compliant) browsers with https://github.com/es-shims/es5-shim/blob/master/es5-shim.js",
					"new-value": "To add most ES5 functionality to older, or modern non-compliant (eg, ALL of them) browsers or node, use https://npmjs.com/package/es5-shim !"
				}
			]
		},
		"mixins": {
			"value": "A fresh look at Javascript mixins: http://javascriptweblog.wordpress.com/2011/05/31/a-fresh-look-at-javascript-mixins/",
			"popularity": 26
		},
		"rest": {
			"value": "\"How I Explained REST to my Wife\" http://tomayko.com/writings/rest-to-my-wife",
			"popularity": 9
		},
		"dom0": {
			"value": "The DOM 0 API was originally included by Netscape in 1995 with Netscape Navigator 2.0. It contained features such as collections and events, which were used to create primitive effects (e.g. form validation). The features that formed the DOM 0 API have become the foundation that forms the DOM today. For more, visit: (http://www.fortybelow.ca/Articles/DOM-0-Reference/).",
			"popularity": 19
		},
		"dom 0": {
			"alias": "dom0"
		},
		"raf": {
			"value": "For animations, requestAnimationFrame is far superior to setTimeout. http://paulirish.com/2011/requestanimationframe-for-smart-animating/ To cover older browsers, use this polyfill: https://gist.github.com/1579671",
			"popularity": 128,
			"editors": [
				"ljharb"
			]
		},
		"document tree": {
			"value": "A \"document tree\" is a live tree of nodes representing the current Web page. It is interfaced with via the DOM API.",
			"popularity": 6
		},
		"subtree": {
			"value": "A \"subtree\" is a subset of a document tree. See \"!document tree\" for more.",
			"popularity": 1
		},
		"documenttree": {
			"alias": "document tree"
		},
		"modifying prototypes": {
			"value": "Don't modify objects you don't own by extending native prototypes! http://www.nczonline.net/blog/2010/03/02/maintainable-javascript-dont-modify-objects-you-down-own/",
			"popularity": 6
		},
		"prototype modify": {
			"value": "Don't modify objects you don't own, e.g. by extending native prototypes! http://www.nczonline.net/blog/2010/03/02/maintainable-javascript-dont-modify-objects-you-down-own/",
			"popularity": 70,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2016-03-10T23:07:43.255Z",
					"editor": "GreenJello",
					"old-value": "Don't modify objects you don't own by extending native prototypes! http://www.nczonline.net/blog/2010/03/02/maintainable-javascript-dont-modify-objects-you-down-own/",
					"new-value": "Don't modify objects you don't own, e.g. by extending native prototypes! http://www.nczonline.net/blog/2010/03/02/maintainable-javascript-dont-modify-objects-you-down-own/"
				}
			]
		},
		"equals": {
			"alias": "comparisons",
			"popularity": 69
		},
		"functions": {
			"value": "See !fe vs fd",
			"popularity": 7
		},
		"ssjs": {
			"value": "Server-side JavaScript: Node.js and other V8 distributions (C++), Rhino (JVM), Spidermonkey (C).",
			"popularity": 14
		},
		"multi-browser": {
			"value": "\"Multi-browser\" is a word used to describe a resource that works in multiple browsers. Its definition is often used for the word \"cross-browser\", which has an entirely different meaning. See !cross-browser for details.",
			"popularity": 2
		},
		"templating": {
			"value": "\"You can get nice string formatting in a tweetful of characters, check out http://microjs.com/#templating for some nice options!\"",
			"popularity": 4
		},
		"help!": {
			"value": "Dont panic!",
			"popularity": 9
		},
		"onevent": {
			"value": "You should prefer using the DOM 2 addEventListener & removeEventListener methods to using the on<event name> property. See https://developer.mozilla.org/en/DOM/element.addEventListener#Why_use_addEventListener.3F",
			"popularity": 36
		},
		"bloat": {
			"value": "The solution to worrying about JS lib/framework size: include one less .jpg on your site. // https://twitter.com/paul_irish/status/227203681462927361 - also, https://twitter.com/trek/status/227082154109186049 http://fourword.fourkitchens.com/article/one-less-jpg",
			"popularity": 164,
			"editors": [
				"gkatsev",
				"ljharb",
				"gde33"
			],
			"changes": [
				{
					"date": "2014-08-14T00:18:30.751Z",
					"editor": "ljharb",
					"old-value": "The solution to worrying about JS lib/framework size: include one less .jpg on your site. // https://twitter.com/paul_irish/status/227203681462927361 - also, https://twitter.com/trek/status/227082154109186049 http://fourkitchens.com/blog/2013/04/24/one-less-jpg/",
					"new-value": "The solution to worrying about JS lib/framework size: include one less .jpg on your site. // https://twitter.com/paul_irish/status/227203681462927361 - also, https://twitter.com/trek/status/227082154109186049 http://fourword.fourkitchens.com/article/one-less-jpg"
				},
				{
					"date": "2016-12-28T03:59:51.130Z",
					"editor": "gde33",
					"old-value": "The solution to worrying about JS lib/framework size: include one less .jpg on your site. // https://twitter.com/paul_irish/status/227203681462927361 - also, https://twitter.com/trek/status/227082154109186049 http://fourword.fourkitchens.com/article/one-less-jpg",
					"new-value": "text-based websites should not exceed in size the major works of Russian literature http://idlewords.com/talks/website_obesity.htm"
				},
				{
					"date": "2017-04-19T08:04:45.718Z",
					"editor": "ljharb",
					"old-value": "text-based websites should not exceed in size the major works of Russian literature http://idlewords.com/talks/website_obesity.htm",
					"new-value": "The solution to worrying about JS lib/framework size: include one less .jpg on your site. // https://twitter.com/paul_irish/status/227203681462927361 - also, https://twitter.com/trek/status/227082154109186049 http://fourword.fourkitchens.com/article/one-less-jpg"
				}
			]
		},
		"extend": {
			"value": "A simple and naive implementation of the extend functionality which can copy items from one object to another: https://gist.github.com/3162008 . A safe, non-destructive implementation that merges any number of objects: https://gist.github.com/3162033",
			"popularity": 26,
			"editors": [
				"Maxdamantus"
			],
			"changes": [
				{
					"date": "2014-07-20T08:59:37.789Z",
					"editor": "Maxdamantus",
					"old-value": "A simple and naive implementation of the extend functionality which can copy items from one object to another. https://gist.github.com/3162008. A safe, non-destructive implementation that merges any number of objects: https://gist.github.com/3162033",
					"new-value": "A simple and naive implementation of the extend functionality which can copy items from one object to another: https://gist.github.com/3162008 . A safe, non-destructive implementation that merges any number of objects: https://gist.github.com/3162033"
				}
			]
		},
		"yoda condition": {
			"value": "A Yoda Condition: if ('blue' === sky) … if blue the sky is.",
			"popularity": 10
		},
		"yoda": {
			"alias": "yoda condition",
			"popularity": 9
		},
		"horsemen": {
			"value": "The == operator is actually an overhead view of the Four Horsemen of the Apocalypse. see !equals",
			"popularity": 26
		},
		"cthuloop": {
			"alias": "cthuloops",
			"popularity": 17,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-08-24T10:19:49.919Z",
					"editor": "ljharb",
					"old-alias": "cthuloops",
					"new-alias": "cthuloops"
				}
			]
		},
		"javascript url": {
			"value": "It's often advisable not to use inline javascript; including within the href of a link. If you want to achieve this, event handlers offer cleaner separation of markup and behavior, leading to easier maintenance. See !inline and !onevent",
			"popularity": 10
		},
		"ni!": {
			"value": "Do you demand a shrubbery?",
			"popularity": 4
		},
		">>>": {
			"alias": ">>",
			"popularity": 9
		},
		"v8>": {
			"alias": ">>",
			"popularity": 4
		},
		"sm>": {
			"alias": ">>",
			"popularity": 1
		},
		"for-in": {
			"alias": "for..in",
			"popularity": 4
		},
		"for...in": {
			"alias": "for..in",
			"popularity": 3
		},
		"hoist": {
			"value": "‘Hoisting’ is the name given to the mechanism whereby names defined with ‘var’ or function declarations (see !fe) are made available throughout their scope, even before the declaration is encountered textually.  Beware: though the *definition* of a variable is available, its value (if given) will be undefined until the var declaration is encountered or the variable is otherwise assigned to.",
			"popularity": 79,
			"editors": [
				"sacho",
				"Twey"
			]
		},
		"!>>": {
			"value": "To run code, use >> and sm> to execute on the Spidermonkey JS engine or >>> and v8> to execute on the v8 JS engine.",
			"popularity": 66,
			"editors": [
				"ImBcmDth"
			],
			"changes": [
				{
					"date": "2014-03-22T19:42:15.926Z",
					"editor": "ImBcmDth",
					"old-value": ">> and sm> run on the Spidermonkey JS engine. >>> and v8> run on the v8 JS engine.",
					"new-value": "To run code use >> and sm> run on the Spidermonkey JS engine. >>> and v8> run on the v8 JS engine.",
					"regex": "s/^/To run code use /"
				},
				{
					"date": "2014-03-22T19:42:31.684Z",
					"editor": "ImBcmDth",
					"old-value": "To run code use >> and sm> run on the Spidermonkey JS engine. >>> and v8> run on the v8 JS engine.",
					"new-value": "To run code, use >> and sm> run on the Spidermonkey JS engine. >>> and v8> run on the v8 JS engine.",
					"regex": "s/To run code use/To run code, use/"
				},
				{
					"date": "2014-03-22T19:43:09.881Z",
					"editor": "ImBcmDth",
					"old-value": "To run code, use >> and sm> run on the Spidermonkey JS engine. >>> and v8> run on the v8 JS engine.",
					"new-value": "To run code, use >> and sm> to run on the Spidermonkey JS engine. >>> and v8> run on the v8 JS engine.",
					"regex": "s/run on/to run on/"
				},
				{
					"date": "2014-03-22T19:43:27.681Z",
					"editor": "ImBcmDth",
					"old-value": "To run code, use >> and sm> to run on the Spidermonkey JS engine. >>> and v8> run on the v8 JS engine.",
					"new-value": "To run code, use >> and sm> to execute on the Spidermonkey JS engine. >>> and v8> run on the v8 JS engine.",
					"regex": "s/to run on/to execute on/"
				},
				{
					"date": "2014-03-22T19:43:43.917Z",
					"editor": "ImBcmDth",
					"old-value": "To run code, use >> and sm> to execute on the Spidermonkey JS engine. >>> and v8> run on the v8 JS engine.",
					"new-value": "To run code, use >> and sm> to execute on the Spidermonkey JS engine. >>> and v8> to execute on the v8 JS engine.",
					"regex": "s/run on/to execute on/"
				},
				{
					"date": "2014-03-22T19:44:10.699Z",
					"editor": "ImBcmDth",
					"old-value": "To run code, use >> and sm> to execute on the Spidermonkey JS engine. >>> and v8> to execute on the v8 JS engine.",
					"new-value": "To run code, use >> and sm> to execute on the Spidermonkey JS engine or >>> and v8> to execute on the v8 JS engine.",
					"regex": "s/engine./engine or/"
				}
			]
		},
		"!>>>": {
			"alias": "!>>",
			"popularity": 1
		},
		"!v8>": {
			"alias": "!>>"
		},
		"!sm>": {
			"alias": "!>>"
		},
		"es6": {
			"value": "Also known as ES2015 (Note JS is published yearly). For ES6/ES2015 features see http://www.ecma-international.org/ecma-262/6.0/ . To experiment with ES2015 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es6/ . A good summary of the new features is available at http://es6-features.org/",
			"popularity": 110,
			"editors": [
				"Benvie",
				"ljharb",
				"Sorella",
				"Xhuin"
			],
			"changes": [
				{
					"date": "2015-06-17T18:28:04.691Z",
					"editor": "ljharb",
					"old-value": "The next version of JavaScript, slated for completion in late 2013. For ES6 features see http://wiki.ecmascript.org/doku.php?id=harmony:proposals. To experiment with ES6 now see http://benvie.github.com/continuum. For availability in browsers see http://kangax.github.com/es5-compat-table/es6",
					"new-value": "The latest version of JavaScript, slated for completion in late 2013. For ES6 features see http://www.ecma-international.org/ecma-262/6.0/index.html. To experiment with ES6 now see http://babeljs.io/repl. For availability in browsers see http://kangax.github.io/compat-table/es6/"
				},
				{
					"date": "2015-06-17T18:35:32.414Z",
					"editor": "ljharb",
					"old-value": "The latest version of JavaScript, slated for completion in late 2013. For ES6 features see http://www.ecma-international.org/ecma-262/6.0/index.html. To experiment with ES6 now see http://babeljs.io/repl. For availability in browsers see http://kangax.github.io/compat-table/es6/",
					"new-value": "The latest version of JavaScript, published in June 2015. For ES6 features see http://www.ecma-international.org/ecma-262/6.0/index.html. To experiment with ES6 now see http://babeljs.io/repl. For availability in browsers see http://kangax.github.io/compat-table/es6/"
				},
				{
					"date": "2016-07-06T04:45:25.472Z",
					"editor": "ljharb",
					"old-value": "The latest version of JavaScript, published in June 2015. For ES6 features see http://www.ecma-international.org/ecma-262/6.0/index.html. To experiment with ES6 now see http://babeljs.io/repl. For availability in browsers see http://kangax.github.io/compat-table/es6/",
					"new-value": "An outdated version of JavaScript, published in June 2015. For ES6/ES2015 features see http://www.ecma-international.org/ecma-262/6.0/ . To experiment with ES2015 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es6/"
				},
				{
					"date": "2016-09-18T15:41:40.077Z",
					"editor": "Sorella",
					"old-value": "An outdated version of JavaScript, published in June 2015. For ES6/ES2015 features see http://www.ecma-international.org/ecma-262/6.0/ . To experiment with ES2015 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es6/",
					"new-value": "Harmony is an outdated version of JavaScript, published in June 2015. For ES6/ES2015 features see http://www.ecma-international.org/ecma-262/6.0/ . To experiment with ES2015 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es6/",
					"regex": "s/^An /Harmony is an /"
				},
				{
					"date": "2016-09-18T15:42:50.363Z",
					"editor": "Sorella",
					"old-value": "Harmony is an outdated version of JavaScript, published in June 2015. For ES6/ES2015 features see http://www.ecma-international.org/ecma-262/6.0/ . To experiment with ES2015 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es6/",
					"new-value": "A version of JavaScript, published in June 2015 (note JS is published yearly). For ES6/ES2015 features see http://www.ecma-international.org/ecma-262/6.0/ . To experiment with ES2015 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es6/"
				},
				{
					"date": "2017-01-28T02:15:01.482Z",
					"editor": "Xhuin",
					"old-value": "A version of JavaScript, published in June 2015 (note JS is published yearly). For ES6/ES2015 features see http://www.ecma-international.org/ecma-262/6.0/ . To experiment with ES2015 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es6/",
					"new-value": "Also known as ES2015 (Note JS is published yearly). For ES6/ES2015 features see http://www.ecma-international.org/ecma-262/6.0/ . To experiment with ES2015 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es6/ . A good summary of the new features is available at http://es6-features.org/"
				}
			]
		},
		"concat": {
			"value": "For two JS programs A and B the safe way to concatenate them is A + \"\\n;\" + B. This resolves all possible syntax issues (and both the newline and the semicolon are required to do so), however there still can be semantic collisions, e.g. between same-named functions in the top scope, strict mode declarations, etc.",
			"popularity": 9,
			"editors": [
				"inimino"
			]
		},
		"try it and see why don'tcha": {
			"alias": "tias"
		},
		"try it and see why dontcha": {
			"alias": "tias"
		},
		"last value": {
			"alias": "last one only",
			"popularity": 1
		},
		"regex html": {
			"value": "http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454",
			"popularity": 57
		},
		"coffeescript scoping": {
			"value": "The Problem with Implicit Scoping in CoffeeScript: http://lucumr.pocoo.org/2011/12/22/implicit-scoping-in-coffeescript/",
			"popularity": 4
		},
		"prototypal intro": {
			"alias": "prototype intro"
		},
		"try these": {
			"alias": "shoo"
		},
		"defaults": {
			"alias": "default",
			"popularity": 2
		},
		"quick fix": {
			"value": "Quick code doesn't do you any favours. You'll just get stuck on the next step if you have no understanding.",
			"popularity": 0
		},
		"quick code": {
			"alias": "quick fix"
		},
		"cats": {
			"value": "http://jsforcats.com/",
			"popularity": 5
		},
		"ded": {
			"alias": "dedicated",
			"popularity": 477,
			"editors": [
				"gkatsev"
			],
			"changes": [
				{
					"date": "2015-08-09T05:15:58.466Z",
					"editor": "gkatsev",
					"old-alias": "shoo",
					"new-alias": "dedicated"
				}
			]
		},
		"method": {
			"value": "a method is a function associated with an object. i.e., a function that interacts and uses the object it is associated with.",
			"popularity": 14
		},
		"arguments": {
			"value": "in Javascript, functions are variadic. They can accept any number of arguments using the arguments object. <http://en.wikipedia.org/wiki/Variadic_function> <http://mdn.io/arguments>",
			"popularity": 14,
			"editors": [
				"j201"
			]
		},
		"webconsole": {
			"value": "The built-in \"Web Console\" in Firefox shows errors & allows you to enter javascript snippets for evaluations. You can open it with 'Ctrl+Shift+K'.",
			"popularity": 5
		},
		"document.all": {
			"value": "document.all is a remnant from the DOM stone-age and should not be used, mostly because it is unreliable. Use document.getElementById instead.",
			"popularity": 7
		},
		"freelance": {
			"alias": "jobs",
			"popularity": 1
		},
		"learn-css": {
			"value": "Learn CSS, https://developer.mozilla.org/en-US/learn/css for more CSS specific stuff there's #css",
			"popularity": 0
		},
		"cookie": {
			"value": "om nom nom. <3",
			"popularity": 14
		},
		"i love you": {
			"value": "I love you too. <3",
			"popularity": 19
		},
		"<3": {
			"alias": "i love you",
			"popularity": 9
		},
		"hipsters": {
			"value": "hipsters use <!-- --> for all their javascript comments. JS: The Hip Parts: https://gist.github.com/3374141",
			"popularity": 2
		},
		"array-like": {
			"value": "An array-like object is an object with a property `length`, and (possibly) numeric properties 0..`length` holding values of the array-like. You can use Array.prototype.slice to convert an array-like to a proper array.",
			"popularity": 15,
			"editors": [
				"Mortchek"
			]
		},
		"lance": {
			"value": "try #js-lance and #css-lance",
			"popularity": 13
		},
		"paste live": {
			"value": "Paste links, not code. Sites like http://jsfiddle.net/ , http://jsbin.com/ , and http://www.webdevout.net/test let people easily run your code.",
			"popularity": 1
		},
		"queryselector": {
			"value": "Use querySelector for querying the DOM. It provides a jquery-alike functionality and accepts any valid css selector string. More info @ https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector",
			"popularity": 10,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2019-09-26T13:19:24.440Z",
					"editor": "MJCD",
					"old-value": "Please, use a querySelector engine for querying the DOM. Newer engines will get querySelector and querySelectorAll by default. You can use Sizzle, NWMatcher, Qwery or some other library to get it in older browsers.",
					"new-value": "Use querySelector for querying the DOM. It provides a jquery-alike functionality and accepts any valid css selector string. More info @ https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector"
				}
			]
		},
		"love": {
			"alias": "i love you",
			"popularity": 6
		},
		"cthuloops": {
			"value": ">> for (;;) { } // I give you, a cthuloop… FOR CTHULHU",
			"popularity": 30,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-01-25T00:52:10.272Z",
					"editor": "ljharb",
					"old-value": "I give you, a cthuloop: for (;;) { } … FOR CTHULU",
					"new-value": ">> for (;;) { } // I give you, a cthuloop… FOR CTHULHU"
				}
			]
		},
		"cthulu": {
			"alias": "cthuloops"
		},
		"books": {
			"value": "!eloquent (http://eloquentjavascript.net), !ydkjs (https://github.com/getify/You-Dont-Know-JS), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott.",
			"popularity": 1154,
			"creator": "gkatsev",
			"editors": [
				"gkatsev",
				"hemanth",
				"FireFly",
				"eboy",
				"_hemanth_",
				"Sorella",
				"dwcook",
				"ericelliott",
				"ashnur",
				"Agamemnus",
				"ljharb",
				"therealklanni",
				"cjohnson",
				"Havvy"
			],
			"changes": [
				{
					"date": "2013-12-21T07:51:39.523Z",
					"editor": "Agamemnus",
					"old-value": "!eloquent (http://eloquentjavascript.net), The Good Parts by Douglas Crockford, JS Patterns by Stoyan Stefanov, JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus.",
					"new-value": "!eloquent (http://eloquentjavascript.net), High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus."
				},
				{
					"date": "2014-02-26T05:06:49.177Z",
					"editor": "Agamemnus",
					"old-value": "!eloquent (http://eloquentjavascript.net), High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus.",
					"new-value": "\"Programming JavaScript Applications\" by Eric Elliott, eloquent (http://eloquentjavascript.net), \"High Performance JavaScript\" by Nicholas C. Zakas, \"Effective JavaScript\" by David Herman, \"Functional JavaScript\" by Michael Fogus"
				},
				{
					"date": "2014-03-06T01:29:59.647Z",
					"editor": "gkatsev",
					"old-value": "\"Programming JavaScript Applications\" by Eric Elliott, eloquent (http://eloquentjavascript.net), \"High Performance JavaScript\" by Nicholas C. Zakas, \"Effective JavaScript\" by David Herman, \"Functional JavaScript\" by Michael Fogus",
					"new-value": "!eloquent (http://eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus."
				},
				{
					"date": "2014-03-08T23:39:20.367Z",
					"editor": "Agamemnus",
					"old-value": "!eloquent (http://eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus.",
					"new-value": "!eloquent (eloquentjavascript.net), Programming JavaScript Applications by Eric Elliott, JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional"
				},
				{
					"date": "2014-03-08T23:56:01.260Z",
					"editor": "gkatsev",
					"old-value": "!eloquent (eloquentjavascript.net), Programming JavaScript Applications by Eric Elliott, JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus"
				},
				{
					"date": "2014-04-01T06:51:36.284Z",
					"editor": "Agamemnus",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus",
					"new-value": "!codecombat.com, eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus"
				},
				{
					"date": "2014-04-01T06:55:22.401Z",
					"editor": "Agamemnus",
					"old-value": "!codecombat.com, eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus ... see interactives for more ways to learn Javascript!"
				},
				{
					"date": "2014-04-01T06:55:33.058Z",
					"editor": "Agamemnus",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus ... see interactives for more ways to learn Javascript!",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus ... see \"interactives\" for more ways to learn Javascript!"
				},
				{
					"date": "2014-04-01T06:56:57.392Z",
					"editor": "ljharb",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus ... see \"interactives\" for more ways to learn Javascript!",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus … see !interactives for more ways to learn Javascript!"
				},
				{
					"date": "2014-04-01T06:57:01.332Z",
					"editor": "ljharb",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus … see !interactives for more ways to learn Javascript!",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus … see !interactives for more ways to learn JavaScript!"
				},
				{
					"date": "2014-04-01T13:49:58.324Z",
					"editor": "gkatsev",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus … see !interactives for more ways to learn JavaScript!",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus ",
					"regex": "s/… see !interactives for more ways to learn JavaScript!//"
				},
				{
					"date": "2014-04-02T04:24:01.929Z",
					"editor": "Agamemnus",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus ",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus ... also see: \"interactives\"."
				},
				{
					"date": "2014-04-02T04:25:03.872Z",
					"editor": "therealklanni",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus ... also see: \"interactives\".",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus ... also see !interactives"
				},
				{
					"date": "2014-06-04T12:37:34.899Z",
					"editor": "ljharb",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus ... also see !interactives",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, The Good Parts by Douglas Crockford ... also see !interactives"
				},
				{
					"date": "2014-09-20T07:15:16.935Z",
					"editor": "gkatsev",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, The Good Parts by Douglas Crockford ... also see !interactives",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus"
				},
				{
					"date": "2015-01-07T13:06:18.512Z",
					"editor": "ashnur",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications ( https://ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/ )"
				},
				{
					"date": "2015-01-07T13:06:35.323Z",
					"editor": "ashnur",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications ( https://ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/ )",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications ( ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/ )"
				},
				{
					"date": "2015-01-07T13:06:48.662Z",
					"editor": "ashnur",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications ( ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/ )",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications (ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/)"
				},
				{
					"date": "2015-10-08T19:29:34.248Z",
					"editor": "cjohnson",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications (ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/)",
					"new-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications (ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/)"
				},
				{
					"date": "2015-10-08T19:29:40.675Z",
					"editor": "cjohnson",
					"old-value": "!eloquent (eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications (ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/)",
					"new-value": "!eloquent (http://eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications (ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/)"
				},
				{
					"date": "2015-10-08T19:30:24.418Z",
					"editor": "cjohnson",
					"old-value": "!eloquent (http://eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications (ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/)",
					"new-value": "!eloquent (http://eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications (http://ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/)"
				},
				{
					"date": "2016-01-10T03:39:41.915Z",
					"editor": "gkatsev",
					"old-value": "!eloquent (http://eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications (http://ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/)",
					"new-value": "!eloquent (http://eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott."
				},
				{
					"date": "2016-07-08T08:07:26.585Z",
					"editor": "Havvy",
					"old-value": "!eloquent (http://eloquentjavascript.net), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott.",
					"new-value": "!eloquent (http://eloquentjavascript.net), !ydkjs (https://github.com/getify/You-Dont-Know-JS), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott."
				}
			]
		},
		"dogballs": {
			"alias": "iife parens",
			"popularity": 23,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2018-07-23T21:48:19.026Z",
					"editor": "ljharb",
					"old-alias": "dog balls",
					"new-alias": "iife parens"
				}
			]
		},
		"clientside": {
			"value": "Client-side rendering can be slow. Give a try to last decade's newest technology, server-side rendering! http://engineering.twitter.com/2012/05/improving-performance-on-twittercom.html",
			"popularity": 33,
			"creator": "ljharb",
			"editors": []
		},
		"typing": {
			"value": "A good read on static versus dynamic typing: https://sites.google.com/site/steveyegge2/is-weak-typing-strong-enough",
			"popularity": 8,
			"creator": "ljharb",
			"editors": []
		},
		"dynamic": {
			"alias": "typing"
		},
		"static": {
			"alias": "typing",
			"popularity": 4
		},
		"max value": {
			"value": ">>for(a=Number.MAX_VALUE,i=b=\"\",c=[],e=0,f=Math.floor,g=Math.pow(2,49),h=8*g*g,a=f(0>a?(i=\"-\",-a):a);a>=h;a/=g)c[e++]=0;for(;a>=g;a=d)d=f(a/g),c[e++]=a-d*g;for(c[e++]=a;e;){d=0;for(h=e;h--;)a=c[h]+d*g,(c[h]=f(a/10))||h+1<e||--e,d=a%10;b=d+b}i+b ",
			"popularity": 16,
			"creator": "very",
			"editors": [
				"very",
				"nowlan"
			]
		},
		"nophp": {
			"value": "Just say no to PHP!",
			"popularity": 3,
			"creator": "gkatsev",
			"editors": [
				"gkatsev"
			]
		},
		"curry": {
			"value": "Partial Application in JavaScript <http://benalman.com/news/2012/09/partial-application-in-javascript/>",
			"popularity": 36,
			"creator": "gkatsev",
			"editors": []
		},
		"partial application": {
			"alias": "curry",
			"popularity": 4
		},
		"java": {
			"value": "Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. See also: http://ow.ly/GMctL and https://twitter.com/ryber/status/567681894662164480 - Try ##java",
			"popularity": 352,
			"creator": "ljharb",
			"editors": [
				"eboy",
				"niggler",
				"ljharb",
				"Sorella",
				"ImBcmDth"
			],
			"changes": [
				{
					"date": "2014-01-19T22:36:45.840Z",
					"editor": "Sorella",
					"old-value": "Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. Try #java",
					"new-value": "Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. Try ##java",
					"regex": "s/#java/##java/"
				},
				{
					"date": "2015-01-04T23:13:09.280Z",
					"editor": "ImBcmDth",
					"old-value": "Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. Try ##java",
					"new-value": "Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. See also: http://ow.ly/GMctL/ Try ##java"
				},
				{
					"date": "2015-01-04T23:15:00.855Z",
					"editor": "ImBcmDth",
					"old-value": "Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. See also: http://ow.ly/GMctL/ Try ##java",
					"new-value": "Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. See also: http://ow.ly/GMctL Try ##java",
					"regex": "s/L\\//L/"
				},
				{
					"date": "2015-02-18T09:06:27.894Z",
					"editor": "ljharb",
					"old-value": "Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. See also: http://ow.ly/GMctL Try ##java",
					"new-value": "Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. See also: http://ow.ly/GMctL and https://twitter.com/ryber/status/567681894662164480 - Try ##java"
				}
			]
		},
		"</script>": {
			"value": "If you have an embedded <script> element with JavaScript code inside, watch out for having \"</script>\" embedded inside a string--it'll pre-emptively end the script tag since the HTML parser doesn't care about it being inside a string. To avoid this, put your scripts at their own locations and then use the script element's src attribute to refer to them.",
			"popularity": 4,
			"creator": "FireFly",
			"editors": [
				"dwcook"
			]
		},
		"promises": {
			"value": "Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronous ones. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps & see https://bevacqua.github.io/promisees/. Another guide: http://www.javascriptkit.com/javatutors/javascriptpromises.shtml",
			"popularity": 499,
			"creator": "ljharb",
			"editors": [
				"ljharb",
				"Agamemnus",
				"GreenJello",
				"Sorella",
				"deltab",
				"GreenJello_",
				"Havvy"
			],
			"changes": [
				{
					"date": "2014-05-14T05:50:33.981Z",
					"editor": "ljharb",
					"old-value": "You're missing the point of promises: \"The point of promises is to give us back functional composition and error bubbling in the async world.\" https://gist.github.com/3889970",
					"new-value": "What are promises, and why should I use them? https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them"
				},
				{
					"date": "2014-06-10T23:12:48.998Z",
					"editor": "Agamemnus",
					"old-value": "What are promises, and why should I use them? https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them",
					"new-value": "Promises are saved AJAX calls."
				},
				{
					"date": "2014-07-13T01:53:34.746Z",
					"editor": "ljharb",
					"old-value": "Promises are saved AJAX calls.",
					"new-value": "What are promises, and why should I use them? https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them"
				},
				{
					"date": "2014-07-14T02:31:04.439Z",
					"editor": "Agamemnus",
					"old-value": "What are promises, and why should I use them? https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them",
					"new-value": "JUST DELAYED AJAX CALLS. PROVE ME WRONG MOUAHAHAHAHA"
				},
				{
					"date": "2014-07-14T02:32:17.225Z",
					"editor": "GreenJello",
					"old-value": "JUST DELAYED AJAX CALLS. PROVE ME WRONG MOUAHAHAHAHA",
					"new-value": "What are promises, and why should I use them? https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them"
				},
				{
					"date": "2014-07-14T02:32:33.318Z",
					"editor": "Sorella",
					"old-value": "What are promises, and why should I use them? https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them",
					"new-value": "What are promises, and why should I use them? https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them"
				},
				{
					"date": "2014-07-14T02:39:43.981Z",
					"editor": "Sorella",
					"old-value": "What are promises, and why should I use them? https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them",
					"new-value": "Promises are placeholder for values, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/2013/03/30/callbacks-are-imperative-promises-are-functional-nodes-biggest-missed-opportunity/, and http://robotlolita.me/2014/03/20/a-monad"
				},
				{
					"date": "2014-07-14T02:40:00.259Z",
					"editor": "Sorella",
					"old-value": "Promises are placeholder for values, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/2013/03/30/callbacks-are-imperative-promises-are-functional-nodes-biggest-missed-opportunity/, and http://robotlolita.me/2014/03/20/a-monad",
					"new-value": "Promises are placeholder for values, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/2013/03/30/callbacks-are-imperative-promises-are-functional-nodes-biggest-missed-opportunity/"
				},
				{
					"date": "2014-07-14T02:40:53.445Z",
					"editor": "Sorella",
					"old-value": "Promises are placeholder for values, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/2013/03/30/callbacks-are-imperative-promises-are-functional-nodes-biggest-missed-opportunity/",
					"new-value": "Promises are placeholder for values, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/2013/03/30/callbacks-are-imperative-promises-are-functional-nodes-biggest-missed-opportunity/ (see also !cps)"
				},
				{
					"date": "2014-07-14T02:44:01.111Z",
					"editor": "GreenJello",
					"old-value": "Promises are placeholder for values, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/2013/03/30/callbacks-are-imperative-promises-are-functional-nodes-biggest-missed-opportunity/ (see also !cps)",
					"new-value": "Promises are placeholder for values, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/?p=1609 (see also !cps)"
				},
				{
					"date": "2014-07-27T22:13:20.343Z",
					"editor": "Sorella",
					"old-value": "Promises are placeholder for values, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/?p=1609 (see also !cps)",
					"new-value": "Promises are placeholder for values, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/?p=1609 (contrast with !cps)",
					"regex": "s/see also !cps/contrast with !cps/"
				},
				{
					"date": "2014-07-27T22:14:52.087Z",
					"editor": "Sorella",
					"old-value": "Promises are placeholder for values, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/?p=1609 (contrast with !cps)",
					"new-value": "Promises are placeholder for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/?p=1609 (contrast with !cps)",
					"regex": "s/for values/for values that are not yet available/"
				},
				{
					"date": "2014-07-27T22:15:42.692Z",
					"editor": "deltab",
					"old-value": "Promises are placeholder for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/?p=1609 (contrast with !cps)",
					"new-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/?p=1609 (contrast with !cps)",
					"regex": "s/holder/holders/"
				},
				{
					"date": "2015-02-02T09:20:47.227Z",
					"editor": "GreenJello_",
					"old-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript (so you can do things like `var x = foo(bar(y))`, where `foo` and `bar` are asynchronous operations). See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/?p=1609 (contrast with !cps)",
					"new-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript. See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/?p=1609 (contrast with !cps)"
				},
				{
					"date": "2015-05-19T15:35:49.333Z",
					"editor": "Havvy",
					"old-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript. See: https://gist.github.com/domenic/3889970, https://blog.jcoglan.com/?p=1609 (contrast with !cps)",
					"new-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript. See: https://blog.domenic.me/youre-missing-the-point-of-promises/, https://blog.jcoglan.com/?p=1609, http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html (contrast with !cps)"
				},
				{
					"date": "2015-05-22T20:10:43.722Z",
					"editor": "ljharb",
					"old-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript. See: https://blog.domenic.me/youre-missing-the-point-of-promises/, https://blog.jcoglan.com/?p=1609, http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html (contrast with !cps)",
					"new-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript. See: https://blog.domenic.me/youre-missing-the-point-of-promises/, https://blog.jcoglan.com/2013/03/30/callbacks-are-imperative-promises-are-functional-nodes-biggest-missed-opportunity/,"
				},
				{
					"date": "2015-05-22T20:11:07.609Z",
					"editor": "ljharb",
					"old-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript. See: https://blog.domenic.me/youre-missing-the-point-of-promises/, https://blog.jcoglan.com/2013/03/30/callbacks-are-imperative-promises-are-functional-nodes-biggest-missed-opportunity/,",
					"new-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript. See: https://blog.domenic.me/youre-missing-the-point-of-promises/, https://blog.jcoglan.com/?p=1609, http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html (contrast with !cps)"
				},
				{
					"date": "2015-05-22T20:16:51.706Z",
					"editor": "ljharb",
					"old-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript. See: https://blog.domenic.me/youre-missing-the-point-of-promises/, https://blog.jcoglan.com/?p=1609, http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html (contrast with !cps)",
					"new-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript. See: https://blog.domenic.me/youre-missing-the-point-of-promises/, https://t.co/jDfULUSUzB, http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html (contrast with !cps)"
				},
				{
					"date": "2015-11-16T01:21:22.645Z",
					"editor": "Sorella",
					"old-value": "Promises are placeholders for values that are not yet available, and allow one to regain compositionality for asynchronous operations in JavaScript. See: https://blog.domenic.me/youre-missing-the-point-of-promises/, https://t.co/jDfULUSUzB, http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html (contrast with !cps)",
					"new-value": "Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronous one. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps"
				},
				{
					"date": "2016-02-29T09:07:36.205Z",
					"editor": "Sorella",
					"old-value": "Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronous one. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps",
					"new-value": "Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronousones. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps",
					"regex": "s/ one\\./ones./"
				},
				{
					"date": "2016-02-29T09:08:00.085Z",
					"editor": "Sorella",
					"old-value": "Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronousones. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps",
					"new-value": "Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronous ones. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps",
					"regex": "s/synchronousones/synchronous ones/"
				},
				{
					"date": "2016-07-15T09:39:19.162Z",
					"editor": "ljharb",
					"old-value": "Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronous ones. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps",
					"new-value": "Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronous ones. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps & see https://bevacqua.github.io/promisees/"
				},
				{
					"date": "2017-09-25T01:09:09.349Z",
					"editor": "Agamemnus",
					"old-value": "Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronous ones. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps & see https://bevacqua.github.io/promisees/",
					"new-value": "Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronous ones. See http://robotlolita.me/2015/11/15/how-do-promises-work.html and https://blog.domenic.me/youre-missing-the-point-of-promises/. Contrast with !cps & see https://bevacqua.github.io/promisees/. Another guide: http://www.javascriptkit.com/javatutors/javascriptpromises.shtml"
				}
			]
		},
		"tco": {
			"value": "http://wiki.ecmascript.org/doku.php?id=harmony:proper_tail_calls https://gist.github.com/1697037",
			"popularity": 9,
			"creator": "FireFly",
			"editors": []
		},
		"equality table": {
			"value": "JavaScript Equality Table: https://janosch.woschitz.org/javascript-equality-comparison/",
			"popularity": 4,
			"creator": "CoverSlide|TPFR",
			"editors": [
				"CoverSlide|TPFR"
			]
		},
		"bracket notation": {
			"alias": "bracket access"
		},
		"pebkac": {
			"value": "Problem Exists Between Keyboard And Chair",
			"popularity": 4,
			"creator": "sukima",
			"editors": [
				"niggler",
				"sukima"
			]
		},
		"d3": {
			"value": "D3.js is a JavaScript library for manipulating documents based on data. http://d3js.org/",
			"popularity": 7,
			"creator": "sukima",
			"editors": []
		},
		"jsbin": {
			"alias": "fiddle",
			"popularity": 26,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2018-02-04T16:03:18.807Z",
					"editor": "MJCD",
					"old-alias": "paste",
					"new-alias": "fiddle"
				}
			]
		},
		"iff": {
			"value": "If and only if. \"a if and only if b\" is the same as \"a if b and b if a\". http://en.wikipedia.org/wiki/If_and_only_if",
			"popularity": 3,
			"creator": "sukima",
			"editors": [
				"jrajav",
				"sukima"
			]
		},
		"oauth2": {
			"value": "Consider carefully before choosing to use Oauth2 https://web.archive.org/web/20120919225635/http://hueniverse.com/2012/07/oauth-2-0-and-the-road-to-hell/",
			"popularity": 11,
			"creator": "ljharb",
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2019-06-05T23:24:48.369Z",
					"editor": "ljharb",
					"old-value": "Consider carefully before choosing to use Oauth2. http://hueniverse.com/2012/07/oauth-2-0-and-the-road-to-hell/",
					"new-value": "Consider carefully before choosing to use Oauth2 https://web.archive.org/web/20120919225635/http://hueniverse.com/2012/07/oauth-2-0-and-the-road-to-hell/"
				}
			]
		},
		"oauth": {
			"alias": "oauth2",
			"popularity": 4
		},
		"hashbang": {
			"value": "Google proposed a hashbang (#!) URL scheme in 2009: http://googlewebmastercentral.blogspot.com/2009/10/proposal-for-making-ajax-crawlable.html Now that pushState is available in modern browsers, it is strongly encouraged over hashbang URLs.",
			"popularity": 4,
			"creator": "ljharb",
			"editors": []
		},
		"pyramid": {
			"value": "Pyramid of Doom: A coding style that uses several levels of anonymous functions creating a pyramid like structure in the indented whitespace when viewed on it's side. http://tritarget.org/blog/2012/11/28/the-pyramid-of-doom-a-javascript-style-trap/",
			"popularity": 8,
			"creator": "sukima",
			"editors": []
		},
		"miller": {
			"value": "The Miller device is a method of determining whether a value is an array. The Miller Device: Object.prototype.toString.call(obj) == '[object Array]'; This works for ES3 and ES5, although for ES5 it is recommended to use the Array.isArray method",
			"popularity": 1,
			"creator": "CoverSlide",
			"editors": [
				"Mortchek"
			]
		},
		"miller-device": {
			"alias": "miller"
		},
		"isarray": {
			"alias": "miller"
		},
		"lastoneonly": {
			"value": "Javascript closures in for-loops https://web.archive.org/web/20141205234150/http://www.mennovanslooten.nl/blog/post/62",
			"popularity": 23,
			"creator": "NoiseEee",
			"editors": [
				"systemfault"
			],
			"changes": [
				{
					"date": "2017-05-30T13:54:32.688Z",
					"editor": "systemfault",
					"old-value": "Javascript closures in for-loops http://www.mennovanslooten.nl/blog/post/62",
					"new-value": "Javascript closures in for-loops https://web.archive.org/web/20141205234150/http://www.mennovanslooten.nl/blog/post/62"
				}
			]
		},
		"caps": {
			"value": "stop resting your coffee mug on shift.  it damages your keyboard",
			"popularity": 4,
			"creator": "hughfdjackson",
			"editors": []
		},
		"sod off": {
			"alias": "shoo"
		},
		"unobtrusive": {
			"value": "http://en.wikipedia.org/wiki/Unobtrusive_JavaScript",
			"popularity": 3,
			"creator": "misterhat",
			"editors": []
		},
		"constructor": {
			"value": "Constructors considered mildly confusing. http://joost.zeekat.nl/constructors-considered-mildly-confusing.html",
			"popularity": 28,
			"editors": [
				"gkatsev"
			]
		},
		"constructors": {
			"alias": "constructor"
		},
		"vanillajs": {
			"value": "The most lightweight JavaScript framework out there: http://vanilla-js.com/",
			"popularity": 9,
			"creator": "CoverSlide",
			"editors": []
		},
		"vanilla": {
			"alias": "vanillajs",
			"popularity": 4
		},
		"bot": {
			"value": "I'm a bot!",
			"popularity": 90,
			"creator": "lilmonkey",
			"editors": []
		},
		"@": {
			"value": "!<handler> @<user>",
			"popularity": 4,
			"creator": "hemanth_",
			"editors": []
		},
		"sop": {
			"value": "The same-origin policy restricts how a document or script loaded from one origin can interact with a resource from another origin. It is a critical security mechanism for isolating potentially malicious documents. More; https://developer.mozilla.org/en-US/docs/JavaScript/Same_origin_policy_for_JavaScript",
			"popularity": 42,
			"creator": "mistertwig",
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2017-08-20T07:13:32.653Z",
					"editor": "MJCD",
					"old-value": "https://developer.mozilla.org/en-US/docs/JavaScript/Same_origin_policy_for_JavaScript",
					"new-value": "The same-origin policy restricts how a document or script loaded from one origin can interact with a resource from another origin. It is a critical security mechanism for isolating potentially malicious documents. More; https://developer.mozilla.org/en-US/docs/JavaScript/Same_origin_policy_for_JavaScript"
				}
			]
		},
		"same origin policy": {
			"alias": "sop"
		},
		"jswiki": {
			"value": "This wiki indexes libraries and resources available for JavaScript. In addition it provides some starting points for newbies in form of Beginner's Resources.  https://github.com/bebraw/jswiki/wiki",
			"popularity": 2,
			"creator": "mikef",
			"editors": []
		},
		"jobs": {
			"value": "It's acceptable to occasionally mention (PROGRAMMING-RELATED) job requests. (discussion should be in PM) Spamming job posts is not allowed. You can also use Elance for posting small jobs or finding small jobs.",
			"popularity": 24,
			"creator": "niggler",
			"editors": [
				"niggler",
				"Agamemnus"
			],
			"changes": [
				{
					"date": "2015-01-21T18:16:54.569Z",
					"editor": "Agamemnus",
					"old-value": "##javascript is not a jobs forum.  Check out #css-lance for work",
					"new-value": "##javascript is not a jobs forum. BUT IT CAN BE."
				},
				{
					"date": "2015-01-21T18:18:20.725Z",
					"editor": "Agamemnus",
					"old-value": "##javascript is not a jobs forum. BUT IT CAN BE.",
					"new-value": "It's acceptable to occasionally discuss jobs. Spamming job posts is not allowed. You can also use Elance for posting small jobs or finding small jobs."
				},
				{
					"date": "2015-01-21T18:20:54.705Z",
					"editor": "Agamemnus",
					"old-value": "It's acceptable to occasionally discuss jobs. Spamming job posts is not allowed. You can also use Elance for posting small jobs or finding small jobs.",
					"new-value": "It's acceptable to occasionally discuss (PROGRAMMING-RELATED) jobs. Spamming job posts is not allowed. You can also use Elance for posting small jobs or finding small jobs."
				},
				{
					"date": "2015-01-21T18:22:11.551Z",
					"editor": "Agamemnus",
					"old-value": "It's acceptable to occasionally discuss (PROGRAMMING-RELATED) jobs. Spamming job posts is not allowed. You can also use Elance for posting small jobs or finding small jobs.",
					"new-value": "It's acceptable to occasionally mention (PROGRAMMING-RELATED) job requests. (discussion should be in PM) Spamming job posts is not allowed. You can also use Elance for posting small jobs or finding small jobs."
				}
			]
		},
		"contract": {
			"alias": "jobs"
		},
		"continuum": {
			"value": "A next-generation JavaScript (ES6) virtual machine written in last-generation JavaScript (ES3) http://benvie.github.com/continuum",
			"popularity": 2,
			"creator": "Benvie",
			"editors": []
		},
		"setinterval": {
			"value": "Avoid setInterval; use setTimeout instead. https://web.archive.org/web/20160602165800/https://zetafleet.com/blog/2010/04/why-i-consider-setinterval-to-be-harmful.html (requestAnimationFrame may be another alternative, see !raf)",
			"popularity": 375,
			"creator": "ljharb",
			"editors": [
				"qswz",
				"ljharb"
			],
			"changes": [
				{
					"date": "2017-04-29T21:05:08.644Z",
					"editor": "qswz",
					"old-value": "Avoid setInterval; use setTimeout instead. http://zetafleet.com/blog/why-i-consider-setinterval-harmful",
					"new-value": "Avoid setInterval; use setTimeout instead."
				},
				{
					"date": "2017-04-29T21:06:36.908Z",
					"editor": "qswz",
					"old-value": "Avoid setInterval; use setTimeout instead.",
					"new-value": "Avoid setInterval; use setTimeout (or requestAnimationFrame if in a browser) instead. http://zetafleet.com/blog/why-i-consider-setinterval-harmful"
				},
				{
					"date": "2017-05-03T11:20:08.044Z",
					"editor": "ljharb",
					"old-value": "Avoid setInterval; use setTimeout (or requestAnimationFrame if in a browser) instead. http://zetafleet.com/blog/why-i-consider-setinterval-harmful",
					"new-value": "Avoid setInterval; use setTimeout instead. http://zetafleet.com/blog/why-i-consider-setinterval-harmful (requestAnimationFrame may be another alternative)"
				},
				{
					"date": "2018-10-22T10:00:25.133Z",
					"editor": "ljharb",
					"old-value": "Avoid setInterval; use setTimeout instead. http://zetafleet.com/blog/why-i-consider-setinterval-harmful (requestAnimationFrame may be another alternative)",
					"new-value": "Avoid setInterval; use setTimeout instead. https://web.archive.org/web/20160602165800/https://zetafleet.com/blog/2010/04/why-i-consider-setinterval-to-be-harmful.html (requestAnimationFrame may be another alternative, see !raf)"
				}
			]
		},
		"book": {
			"alias": "books",
			"popularity": 47
		},
		"copy": {
			"value": "\"Shallow copy\" means to copy all the properties over from the source object to the new object.  \"Deep copy\" recursively performs the same to all properties with object values. Illustrations: https://gist.github.com/4644248",
			"popularity": 11,
			"creator": "FireFly",
			"editors": [
				"FireFly"
			]
		},
		"doesnt work": {
			"alias": "doesn't work",
			"popularity": 35
		},
		"dedicated channels": {
			"alias": "shoo"
		},
		"axe": {
			"value": "Doned axe to axe or if eniwon iz heer or a hive or yous's sumding. Jos axe yor westen an lets get mowen a lawn, k? Fanks.",
			"popularity": 21,
			"creator": "CoverSlide",
			"editors": []
		},
		"videotestcase": {
			"value": "A video testcase is a minimal viewable video exhibiting your problem. \"Minimal\" means just the bare essentials required to illustrate your problem. Please record a video testcase at http://www.youtube.com to help us assist you.",
			"popularity": 0,
			"creator": "eboy",
			"editors": []
		},
		"nashorn": {
			"value": "Nashorn is an upcoming JavaScript engine created by Oracle and programmed in Java. http://en.wikipedia.org/wiki/Nashorn_(JavaScript_engine)",
			"popularity": 0,
			"creator": "Benvie",
			"editors": []
		},
		"stop": {
			"value": "hammer time",
			"popularity": 9,
			"creator": "eboy",
			"editors": [
				"Maxdamantus"
			],
			"changes": [
				{
					"date": "2014-09-17T14:56:56.845Z",
					"editor": "Maxdamantus",
					"old-value": "collaborate and listen",
					"new-value": "hammer time"
				}
			]
		},
		"module patterns": {
			"alias": "module pattern",
			"popularity": 1
		},
		"tldr": {
			"value": "too many concerns. Modularize, simplify, remove the cruft. See !modularizing",
			"popularity": 10,
			"creator": "pachet",
			"editors": [
				"pachet",
				"sukima",
				"Mortchek",
				"Sorella",
				"niggler",
				"Xin",
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-07-06T09:09:20.792Z",
					"editor": "Xin",
					"old-value": "too many concerns. Modularize, simplify, remove the cruft. See !modularising",
					"new-value": "Shorten 'er up there, Jimmy"
				},
				{
					"date": "2016-08-03T04:28:37.170Z",
					"editor": "ljharb",
					"old-value": "Shorten 'er up there, Jimmy",
					"new-value": "too many concerns. Modularize, simplify, remove the cruft. See !modularising"
				},
				{
					"date": "2016-12-12T10:25:45.162Z",
					"editor": "ljharb",
					"old-value": "too many concerns. Modularize, simplify, remove the cruft. See !modularising",
					"new-value": "too many concerns. Modularize, simplify, remove the cruft. See !modularizing"
				}
			]
		},
		"modularising": {
			"value": "The code is difficult to read or follow. When writing code consider modularizing, simplifying, and/or extracting unneeded code. Narrowing down to the actual problem will greatly increase your chances of getting constructive feedback.",
			"popularity": 9,
			"creator": "Sorella",
			"editors": []
		},
		"jsurl": {
			"alias": "javascript url"
		},
		"thanks": {
			"value": "Don't thank me, I'm just a bot! You're welcome, nevertheless.",
			"popularity": 31,
			"creator": "eboy",
			"editors": [
				"eboy"
			]
		},
		"vanilla-js": {
			"alias": "vanillajs",
			"popularity": 1
		},
		"vanilla js": {
			"alias": "vanillajs",
			"popularity": 2
		},
		"test case": {
			"alias": "testcase",
			"popularity": 19
		},
		"lastone": {
			"alias": "last one only"
		},
		"shipit": {
			"value": "http://shipitsquirrel.github.com/",
			"popularity": 1,
			"creator": "gkatsev",
			"editors": []
		},
		"html regex": {
			"value": "How can I parse HTML/XHTML/XML with regular expressions? http://stackoverflow.com/a/1732454/632724",
			"popularity": 28,
			"creator": "ljharb",
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-04-14T12:46:08.802Z",
					"editor": "ljharb",
					"old-value": "'How can I parse HTML/XHTML/XML with regular expressions? http://stackoverflow.com/a/1732454/632724'",
					"new-value": "How can I parse HTML/XHTML/XML with regular expressions? http://stackoverflow.com/a/1732454/632724"
				}
			]
		},
		"float": {
			"value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html and http://floating-point-gui.de/ and http://0.30000000000000004.com",
			"popularity": 69,
			"creator": "systemfault",
			"editors": [
				"Gregor",
				"ljharb",
				"gkatsev"
			],
			"changes": [
				{
					"date": "2014-04-16T18:51:43.364Z",
					"editor": "ljharb",
					"old-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. Consider a base-10 system with only three decimal places: 1/3 is represented as 0.333, even though that's imprecise. Add 1/3 to 1/3 and we get 0.666, which isn't exactly 1/6. Add another 1/3 and we get 0.999, which isn't exactly 1. In base-2, 0.1 is hard to represent, but 0.5 is easy. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html",
					"new-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. Consider a base-10 system with only three decimal places: 1/3 is represented as 0.333, even though that's imprecise. Add 1/3 to 1/3 and we get 0.666, which isn't exactly 1/6. Add another 1/3 and we get 0.999, which isn't exactly 1. In base-2, 0.1 is hard to represent, but 0.5 is easy. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html and "
				},
				{
					"date": "2014-04-16T18:52:02.532Z",
					"editor": "ljharb",
					"old-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. Consider a base-10 system with only three decimal places: 1/3 is represented as 0.333, even though that's imprecise. Add 1/3 to 1/3 and we get 0.666, which isn't exactly 1/6. Add another 1/3 and we get 0.999, which isn't exactly 1. In base-2, 0.1 is hard to represent, but 0.5 is easy. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html and ",
					"new-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. Consider a base-10 system with only three decimal places: 1/3 is represented as 0.333, even though that's imprecise. Add 1/3 to 1/3 and we get 0.666, which isn't exactly 1/6. Add another 1/3 and we get 0.999, which isn't exactly 1. In base-2, 0.1 is hard to represent, but 0.5 is easy. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html and "
				},
				{
					"date": "2014-04-16T18:52:12.424Z",
					"editor": "ljharb",
					"old-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. Consider a base-10 system with only three decimal places: 1/3 is represented as 0.333, even though that's imprecise. Add 1/3 to 1/3 and we get 0.666, which isn't exactly 1/6. Add another 1/3 and we get 0.999, which isn't exactly 1. In base-2, 0.1 is hard to represent, but 0.5 is easy. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html and ",
					"new-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. Consider a base-10 system with only three decimal places: 1/3 is represented as 0.333, even though that's imprecise. Add 1/3 to 1/3 and we get 0.666, which isn't exactly 1/6. Add another 1/3 and we get 0.999, which isn't exactly 1. In base-2, 0.1 is hard to represent, but 0.5 is easy. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html"
				},
				{
					"date": "2014-04-16T18:52:29.095Z",
					"editor": "ljharb",
					"old-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. Consider a base-10 system with only three decimal places: 1/3 is represented as 0.333, even though that's imprecise. Add 1/3 to 1/3 and we get 0.666, which isn't exactly 1/6. Add another 1/3 and we get 0.999, which isn't exactly 1. In base-2, 0.1 is hard to represent, but 0.5 is easy. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html",
					"new-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. Consider a base-10 system with only three decimal places: 1/3 is represented as 0.333, even though that's imprecise. Add 1/3 to 1/3 and we get 0.666, which isn't exactly 1/6. Add another 1/3 and we get 0.999, which isn't exactly 1. In base-2, 0.1 is hard to represent, but 0.5 is easy. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html and"
				},
				{
					"date": "2014-04-16T18:58:44.441Z",
					"editor": "gkatsev",
					"old-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. Consider a base-10 system with only three decimal places: 1/3 is represented as 0.333, even though that's imprecise. Add 1/3 to 1/3 and we get 0.666, which isn't exactly 1/6. Add another 1/3 and we get 0.999, which isn't exactly 1. In base-2, 0.1 is hard to represent, but 0.5 is easy. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html and",
					"new-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. Consider a base-10 system with only three decimal places: 1/3 is represented as 0.333, even though that's imprecise. Add 1/3 to 1/3 and we get 0.666, which isn't exactly 1/6. Add another 1/3 and we get 0.999, which isn't exactly 1. In base-2, 0.1 is hard to represent, but 0.5 is easy. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html andhttp\\://floating-point-gui.de/",
					"regex": "s/$/http\\:\\/\\/floating-point-gui.de\\//"
				},
				{
					"date": "2014-04-16T19:01:03.681Z",
					"editor": "gkatsev",
					"old-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. Consider a base-10 system with only three decimal places: 1/3 is represented as 0.333, even though that's imprecise. Add 1/3 to 1/3 and we get 0.666, which isn't exactly 1/6. Add another 1/3 and we get 0.999, which isn't exactly 1. In base-2, 0.1 is hard to represent, but 0.5 is easy. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html andhttp\\://floating-point-gui.de/",
					"new-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html and http://floating-point-gui.de/"
				},
				{
					"date": "2016-02-09T12:31:28.204Z",
					"editor": "ljharb",
					"old-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html and http://floating-point-gui.de/",
					"new-value": "Confused by why 0.1+0.2 is not 0.3? In base-10 0.1 is simple, but in base-2, it's not. See http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html and http://floating-point-gui.de/ and http://0.30000000000000004.com"
				}
			]
		},
		"performance matters": {
			"value": "Performance only matters when it's built, working, measured, and THEN found to be slow.",
			"popularity": 0,
			"creator": "ljharb",
			"editors": []
		},
		"subclass arrays": {
			"value": "You can't subclass Array in javascript: http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/",
			"popularity": 8,
			"creator": "ljharb",
			"editors": []
		},
		"array mutators": {
			"value": "Array mutator methods: push, pop, unshift, shift, splice, reverse, sort, fill, copyWithin. https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array#Mutator_methods",
			"popularity": 63,
			"creator": "ljharb",
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2017-01-10T05:27:52.990Z",
					"editor": "ljharb",
					"old-value": "Array mutator methods: push, pop, unshift, shift, splice, reverse, sort. https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array#Mutator_methods",
					"new-value": "Array mutator methods: push, pop, unshift, shift, splice, reverse, sort, fill. https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array#Mutator_methods"
				},
				{
					"date": "2017-01-10T05:34:58.178Z",
					"editor": "ljharb",
					"old-value": "Array mutator methods: push, pop, unshift, shift, splice, reverse, sort, fill. https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array#Mutator_methods",
					"new-value": "Array mutator methods: push, pop, unshift, shift, splice, reverse, sort, fill, copyWithin. https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array#Mutator_methods"
				}
			]
		},
		"hola": {
			"alias": "hello"
		},
		"new": {
			"value": "When you call a function with `new`, the `this` binding is set to a new object that has as its prototype ThatFunction.prototype, and if the function does not return an object, the result is that object. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new",
			"popularity": 127,
			"creator": "Havvy",
			"editors": [
				"ImBcmDth",
				"Maxdamantus",
				"Sorella",
				"Havvy"
			],
			"changes": [
				{
					"date": "2014-04-16T23:51:30.128Z",
					"editor": "Maxdamantus",
					"old-value": "in words: https://gist.github.com/Havvy/5037770 in picture: http://i.imgur.com/afA8hs9.png",
					"new-value": "in words: https://gist.github.com/Havvy/503777"
				},
				{
					"date": "2014-04-16T23:59:26.795Z",
					"editor": "Maxdamantus",
					"old-value": "in words: https://gist.github.com/Havvy/503777",
					"new-value": "function new(constr, args){ var o = Object.create(constr.prototype), r = constr.apply(o, args); return r !== null && typeof r == \"object\"? r : o; }"
				},
				{
					"date": "2014-04-17T00:00:15.954Z",
					"editor": "Maxdamantus",
					"old-value": "function new(constr, args){ var o = Object.create(constr.prototype), r = constr.apply(o, args); return r !== null && typeof r == \"object\"? r : o; }",
					"new-value": "in words: https://gist.github.com/Havvy/503777"
				},
				{
					"date": "2014-04-20T01:25:35.524Z",
					"editor": "Sorella",
					"old-value": "in words: https://gist.github.com/Havvy/503777",
					"new-value": "in words: https://gist.github.com/Havvy/5037770",
					"regex": "s/$/0/"
				},
				{
					"date": "2014-04-20T01:26:47.602Z",
					"editor": "Havvy",
					"old-value": "in words: https://gist.github.com/Havvy/5037770",
					"new-value": "in words: https://gist.github.com/Havvy/5037770 | MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new",
					"regex": "s/$/ | MDN: https:\\/\\/developer.mozilla.org\\/en-US\\/docs\\/Web\\/JavaScript\\/Reference\\/Operators\\/new/"
				},
				{
					"date": "2014-04-20T01:27:07.344Z",
					"editor": "Havvy",
					"old-value": "in words: https://gist.github.com/Havvy/5037770 | MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new",
					"new-value": "https://gist.github.com/Havvy/5037770 | MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new",
					"regex": "s/in words: //"
				},
				{
					"date": "2014-07-09T07:32:06.303Z",
					"editor": "Maxdamantus",
					"old-value": "https://gist.github.com/Havvy/5037770 | MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new",
					"new-value": "`var a = new b(c, d);` is kind of like `var a = Object.create(b.prototype); b.call(a, c, d);`. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new"
				},
				{
					"date": "2014-07-09T07:37:07.874Z",
					"editor": "Maxdamantus",
					"old-value": "`var a = new b(c, d);` is kind of like `var a = Object.create(b.prototype); b.call(a, c, d);`. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new",
					"new-value": "`var a = new b(c, d);` is kind of like `var a = Object.create(b.prototype); b.call(a, c, d);` (there's a number of exceptions). https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new"
				},
				{
					"date": "2014-11-26T05:38:56.050Z",
					"editor": "Maxdamantus",
					"old-value": "`var a = new b(c, d);` is kind of like `var a = Object.create(b.prototype); b.call(a, c, d);` (there's a number of exceptions). https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new",
					"new-value": "When you call a function with `new`, the `this` binding is set to a new object that has as its prototype ThatFunction.prototype, and if the function does not return an object, the result is that object."
				},
				{
					"date": "2014-11-26T05:39:06.260Z",
					"editor": "Maxdamantus",
					"old-value": "When you call a function with `new`, the `this` binding is set to a new object that has as its prototype ThatFunction.prototype, and if the function does not return an object, the result is that object.",
					"new-value": "When you call a function with `new`, the `this` binding is set to a new object that has as its prototype ThatFunction.prototype, and if the function does not return an object, the result is that object. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new"
				}
			]
		},
		"prototype confusion": {
			"value": "The [[Prototype]] of an object is not related to the 'prototype' property it may have. For a function `Foo`, `Foo.prototype` is the [[Prototype]] of `new Foo`. The [[Prototype]] of `Foo` itself is `Function.prototype`.",
			"popularity": 1,
			"creator": "Mortchek",
			"editors": []
		},
		"cross": {
			"alias": "same",
			"popularity": 23
		},
		"is function": {
			"value": "Some browsers' host objects (IE, of course) are functions, but typeof doesn't return \"function\". Object.prototype.toString.call(foo) === '[object Function]' is reliable.",
			"popularity": 0,
			"creator": "ljharb",
			"editors": []
		},
		"first class functions": {
			"alias": "first-class functions",
			"popularity": 1
		},
		"patterns": {
			"value": "Learning Javascript Design Patterns by Addy Osmani : http://addyosmani.com/resources/essentialjsdesignpatterns/book/",
			"popularity": 20,
			"creator": "CoverSlide",
			"editors": []
		},
		"duck ducktype ducktyping duck-typing": {
			"value": "A pattern of testing an object is what you think it is in a loose way. http://en.wikipedia.org/wiki/Duck_typing",
			"popularity": 1,
			"creator": "sukima",
			"editors": []
		},
		"duckpunching duck-punching punching punch": {
			"value": "A pattern of making an object look and act like another object. Also known as monkey-patching. http://en.wikipedia.org/wiki/Monkey_patch",
			"popularity": 3,
			"creator": "sukima",
			"editors": []
		},
		"falsey": {
			"alias": "truthy",
			"popularity": 4
		},
		"onclick": {
			"alias": "onfoo",
			"popularity": 118,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-07-22T21:55:40.930Z",
					"editor": "ljharb",
					"old-alias": "inline",
					"new-alias": "onfoo"
				}
			]
		},
		"iteration": {
			"value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff",
			"popularity": 615,
			"creator": "Mortchek",
			"editors": [
				"Mortchek",
				"Sorella",
				"AAA_awright",
				"ljharb",
				"Maxdamantus"
			],
			"changes": [
				{
					"date": "2015-04-28T16:41:51.228Z",
					"editor": "Sorella",
					"old-value": "Instead of using for or while loop constructs to iterate over arrays, consider using array iteration methods (i.e., forEach, every, some, filter, map, reduce, reduceRight, or a combination thereof). They relieve the need for manual iteration, provide better abstraction, and make it clear what your iteration is doing.",
					"new-value": "Instead of using for or while loop constructs to iterate over arrays, consider using array iteration methods (i.e., forEach, every, some, filter, map, reduce, reduceRight, or a combination thereof). They relieve the need for manual iteration, provide better abstraction, and make it clear what your iteration is doing. See"
				},
				{
					"date": "2015-04-28T16:42:23.742Z",
					"editor": "Sorella",
					"old-value": "Instead of using for or while loop constructs to iterate over arrays, consider using array iteration methods (i.e., forEach, every, some, filter, map, reduce, reduceRight, or a combination thereof). They relieve the need for manual iteration, provide better abstraction, and make it clear what your iteration is doing. See",
					"new-value": "Instead of using for or while loop constructs to iterate over arrays, consider using array iteration methods (i.e., forEach, every, some, filter, map, reduce, reduceRight, or a combination thereof). They relieve the need for manual iteration, provide better abstraction, and make it clear what your iteration is doing. ",
					"regex": "s/See//"
				},
				{
					"date": "2015-10-19T22:49:31.461Z",
					"editor": "AAA_awright",
					"old-value": "Instead of using for or while loop constructs to iterate over arrays, consider using array iteration methods (i.e., forEach, every, some, filter, map, reduce, reduceRight, or a combination thereof). They relieve the need for manual iteration, provide better abstraction, and make it clear what your iteration is doing. ",
					"new-value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction, and make it clear what your iteration is doing."
				},
				{
					"date": "2015-10-19T22:50:22.819Z",
					"editor": "AAA_awright",
					"old-value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction, and make it clear what your iteration is doing.",
					"new-value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing."
				},
				{
					"date": "2017-02-21T10:15:52.813Z",
					"editor": "ljharb",
					"old-value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing.",
					"new-value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff"
				},
				{
					"date": "2018-09-01T16:04:36.191Z",
					"editor": "Maxdamantus",
					"old-value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff",
					"new-value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop in many cases, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff",
					"regex": "s/loop,/loop in many cases,/"
				},
				{
					"date": "2018-09-01T16:05:44.443Z",
					"editor": "Maxdamantus",
					"old-value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop in many cases, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff",
					"new-value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They reduce the need for manual iteration, provide better abstraction than a `for` loop in many cases, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff",
					"regex": "s/relieve/reduce/"
				},
				{
					"date": "2018-09-01T19:16:50.206Z",
					"editor": "ljharb",
					"old-value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They reduce the need for manual iteration, provide better abstraction than a `for` loop in many cases, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff",
					"new-value": "ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff"
				}
			]
		},
		"es6 shim": {
			"value": "To get every backwards-compatible feature of ES6 in every browser and node, use https://www.npmjs.com/package/es6-shim ! It's heavily tested, comes with Promises, and using the !es5-shim as well is strongly encouraged.",
			"popularity": 420,
			"creator": "ljharb",
			"editors": [
				"ljharb",
				"Maxdamantus"
			],
			"changes": [
				{
					"date": "2014-01-06T00:01:29.837Z",
					"editor": "ljharb",
					"old-value": "Once the ES6 spec is finalized, you can use https://github.com/paulmillr/es6-shim to get all the backwards-compatible features of ES6 in every browser! It's fully tested, and requires the !es5 shim.",
					"new-value": "Once the ES6 spec is finalized, you can use https://github.com/es-shims/es6-shim to get all the backwards-compatible features of ES6 in every browser! It's fully tested, and requires the !es5 shim."
				},
				{
					"date": "2014-07-18T10:11:38.106Z",
					"editor": "ljharb",
					"old-value": "Once the ES6 spec is finalized, you can use https://github.com/es-shims/es6-shim to get all the backwards-compatible features of ES6 in every browser! It's fully tested, and requires the !es5 shim.",
					"new-value": "The ES6 spec is almost finalized, so you should use https://github.com/es-shims/es6-shim to get all the backwards-compatible features of ES6 in every browser! It's fully tested, and requires the !es5 shim."
				},
				{
					"date": "2015-01-07T08:27:13.996Z",
					"editor": "ljharb",
					"old-value": "The ES6 spec is almost finalized, so you should use https://github.com/es-shims/es6-shim to get all the backwards-compatible features of ES6 in every browser! It's fully tested, and requires the !es5 shim.",
					"new-value": "Use https://www.npmjs.com/package/es6-shim to get every backwards-compatible feature of ES6 in every browser and node.js! It's fully tested, and requires the !es5-shim."
				},
				{
					"date": "2015-02-18T06:03:30.989Z",
					"editor": "Maxdamantus",
					"old-value": "Use https://www.npmjs.com/package/es6-shim to get every backwards-compatible feature of ES6 in every browser and node.js! It's fully tested, and requires the !es5-shim.",
					"new-value": "Use https://www.npmjs.com/package/es6-shim to get every backwards-compatible feature of ES6 in every browser and node.js! It's pretty much tested, and requires the !es5-shim.",
					"regex": "s/fully/pretty much/"
				},
				{
					"date": "2015-02-18T06:12:46.840Z",
					"editor": "ljharb",
					"old-value": "Use https://www.npmjs.com/package/es6-shim to get every backwards-compatible feature of ES6 in every browser and node.js! It's pretty much tested, and requires the !es5-shim.",
					"new-value": "Use https://www.npmjs.com/package/es6-shim to get every backwards-compatible feature of ES6 in every browser and node.js! It's heavily tested, comes with Promises, and requires the !es5-shim."
				},
				{
					"date": "2015-06-12T00:18:47.645Z",
					"editor": "ljharb",
					"old-value": "Use https://www.npmjs.com/package/es6-shim to get every backwards-compatible feature of ES6 in every browser and node.js! It's heavily tested, comes with Promises, and requires the !es5-shim.",
					"new-value": "To get every backwards-compatible feature of ES6 in every browser and node, use https://www.npmjs.com/package/es6-shim ! It's heavily tested, comes with Promises, and using the !es5-shim as well is strongly encouraged."
				}
			]
		},
		"document.head": {
			"value": "Use this shim for document.head in IE 8 and below: `if (!document.head) { document.head = document.getElementsByTagName('head')[0]; }`",
			"popularity": 8,
			"creator": "ljharb",
			"editors": []
		},
		"editors": {
			"value": "Popular text editors used by folks in ##javascript: 1) VSCode 2) Atom/Sublime Text [Tied] 3) vim",
			"popularity": 36,
			"creator": "Havvy",
			"editors": [
				"Havvy",
				"Mortchek",
				"jaspr",
				"MJCD"
			],
			"changes": [
				{
					"date": "2017-09-21T11:13:59.508Z",
					"editor": "MJCD",
					"old-value": "Popular text editors used by folks in ##javascript: Vim <http://www.vim.org/>, Emacs <https://www.gnu.org/software/emacs/>, Sublime Text <http://www.sublimetext.com/>, TextMate (Mac only) <http://macromates.com/>",
					"new-value": "Popular text editors used by folks in ##javascript: 1) VSCode 2) Atom/Sublime Text [Tied] 3) vim"
				}
			]
		},
		"microjs": {
			"value": "http://microjs.com/ : a listing of (mostly) small javascript libraries. Try searching your requirement!",
			"popularity": 3,
			"creator": "diamonds",
			"editors": []
		},
		"emergency": {
			"value": "Emergency! buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella GreenJello",
			"popularity": 166,
			"creator": "dwcook",
			"editors": [
				"ljharb",
				"GreenJello"
			],
			"changes": [
				{
					"date": "2015-05-11T07:39:03.571Z",
					"editor": "ljharb",
					"old-value": "Emergency! GarethAdams buu Gozzy Boki Phrogz Woosta dorward Twey inimino gkatsev dwcook",
					"new-value": "Emergency! buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella"
				},
				{
					"date": "2017-05-31T09:22:54.680Z",
					"editor": "GreenJello",
					"old-value": "Emergency! buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella",
					"new-value": "Emergency! buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella GreenJello"
				}
			]
		},
		"false": {
			"alias": "truthy",
			"popularity": 11
		},
		"clone": {
			"value": "arrays:  yourArray.slice();  array-likes: Array.prototype.slice.call(yourArrayLike);   objects: say !copy",
			"popularity": 7,
			"creator": "Havvy",
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2014-01-26T09:13:51.914Z",
					"editor": "GreenJello",
					"old-value": "arrays:  yourArray.slice();  array-likes: Array.prototype.slice.call(yourArrayLike);   objects: ???",
					"new-value": "arrays:  yourArray.slice();  array-likes: Array.prototype.slice.call(yourArrayLike);   objects: say !copy"
				}
			]
		},
		"core": {
			"value": "http://dmitrysoshnikov.com/ecmascript/javascript-the-core/",
			"popularity": 0,
			"creator": "Havvy",
			"editors": []
		},
		"terminology": {
			"value": "Terminology in PLT is much more fucked up than in all other areas of CS. Please don't try to apply terms from English or any other language to JS, check out the specs instead.",
			"popularity": 1,
			"creator": "sorella",
			"editors": []
		},
		"inheritance": {
			"value": "JavaScript does not really have “inheritance” like classical languages. What it has is more properly called “property delegation” or “behavior delegation” http://davidwalsh.name/javascript-objects - ie `foo.bar(baz)` when `!foo.hasOwnProperty('bar')` is essentially doing `Object.getPrototypeOf(foo).bar.call(foo, baz)`",
			"popularity": 373,
			"creator": "ljharb",
			"editors": [
				"Agamemnus",
				"ljharb",
				"austincheney",
				"Maxdamantus"
			],
			"changes": [
				{
					"date": "2014-01-22T04:56:20.271Z",
					"editor": "Agamemnus",
					"old-value": "JavaScript does not really have \"inheritance\" like classical languages. What it has is more properly called \"behavior delegation\" http://davidwalsh.name/javascript-objects",
					"new-value": "test"
				},
				{
					"date": "2014-01-22T04:57:44.053Z",
					"editor": "Agamemnus",
					"old-value": "test",
					"new-value": "Computer science classes say, \"inheritance all the way.\" Experienced programmers say, \"prefer composition over inheritance.\" See: http://en.wikipedia.org/wiki/Composition_over_inheritance , http://www.stackoverflow.com/questions/49002/prefer-composition-over-inheritance?"
				},
				{
					"date": "2014-01-22T04:58:06.549Z",
					"editor": "Agamemnus",
					"old-value": "Computer science classes say, \"inheritance all the way.\" Experienced programmers say, \"prefer composition over inheritance.\" See: http://en.wikipedia.org/wiki/Composition_over_inheritance , http://www.stackoverflow.com/questions/49002/prefer-composition-over-inheritance?",
					"new-value": "Computer science classes say, \"inheritance all the way\". Experienced programmers say, \"prefer composition over inheritance\". See: http://en.wikipedia.org/wiki/Composition_over_inheritance, http://www.stackoverflow.com/questions/49002/prefer-composition-over-inheritance?"
				},
				{
					"date": "2014-01-22T08:46:44.169Z",
					"editor": "ljharb",
					"old-value": "Computer science classes say, \"inheritance all the way\". Experienced programmers say, \"prefer composition over inheritance\". See: http://en.wikipedia.org/wiki/Composition_over_inheritance, http://www.stackoverflow.com/questions/49002/prefer-composition-over-inheritance?",
					"new-value": "JavaScript does not really have \"inheritance\" like classical languages. What it has is more properly called \"behavior delegation\" http://davidwalsh.name/javascript-objects"
				},
				{
					"date": "2014-03-18T22:49:33.611Z",
					"editor": "ljharb",
					"old-value": "JavaScript does not really have \"inheritance\" like classical languages. What it has is more properly called \"behavior delegation\" http://davidwalsh.name/javascript-objects",
					"new-value": "JavaScript does not really have \"inheritance\" like classical languages. What it has is more properly called \"property delegation\" or \"behavior delegation\" http://davidwalsh.name/javascript-objects - ie `foo.bar(baz)` when `!foo.hasOwnProperty('bar')` is essentially doing `Object.getPrototypeOf(foo).bar.call(foo, baz)`"
				},
				{
					"date": "2015-02-15T20:46:15.293Z",
					"editor": "austincheney",
					"old-value": "JavaScript does not really have \"inheritance\" like classical languages. What it has is more properly called \"property delegation\" or \"behavior delegation\" http://davidwalsh.name/javascript-objects - ie `foo.bar(baz)` when `!foo.hasOwnProperty('bar')` is essentially doing `Object.getPrototypeOf(foo).bar.call(foo, baz)`",
					"new-value": "JavaScript inheritance in as few words - http://www.reddit.com/r/javascript/comments/2vvox8/as_someone_new_to_prototypal_inheritance_should_i/colu4h0"
				},
				{
					"date": "2015-02-15T21:10:40.273Z",
					"editor": "ljharb",
					"old-value": "JavaScript inheritance in as few words - http://www.reddit.com/r/javascript/comments/2vvox8/as_someone_new_to_prototypal_inheritance_should_i/colu4h0",
					"new-value": "JavaScript does not really have “inheritance” like classical languages. What it has is more properly called “property delegation” or “behavior delegation” http://davidwalsh.name/javascript-objects - ie `foo.bar(baz)` when `!foo.hasOwnProperty('bar')` is essentially doing `Object.getPrototypeOf(foo).bar.call(foo, baz)`"
				},
				{
					"date": "2015-09-19T01:07:54.509Z",
					"editor": "Maxdamantus",
					"old-value": "JavaScript does not really have “inheritance” like classical languages. What it has is more properly called “property delegation” or “behavior delegation” http://davidwalsh.name/javascript-objects - ie `foo.bar(baz)` when `!foo.hasOwnProperty('bar')` is essentially doing `Object.getPrototypeOf(foo).bar.call(foo, baz)`",
					"new-value": "JavaScript does not really have “inheritance” like classical languages. What it has is more properly called “property delegation” http://davidwalsh.name/javascript-objects - ie `foo.bar(baz)` when `!foo.hasOwnProperty('bar')` is essentially doing `Object.getPrototypeOf(foo).bar.call(foo, baz)`",
					"regex": "s/or “behavior delegation” //"
				},
				{
					"date": "2015-09-19T01:08:43.248Z",
					"editor": "ljharb",
					"old-value": "JavaScript does not really have “inheritance” like classical languages. What it has is more properly called “property delegation” http://davidwalsh.name/javascript-objects - ie `foo.bar(baz)` when `!foo.hasOwnProperty('bar')` is essentially doing `Object.getPrototypeOf(foo).bar.call(foo, baz)`",
					"new-value": "JavaScript does not really have “inheritance” like classical languages. What it has is more properly called “property delegation” or “behavior delegation” http://davidwalsh.name/javascript-objects - ie `foo.bar(baz)` when `!foo.hasOwnProperty('bar')` is essentially doing `Object.getPrototypeOf(foo).bar.call(foo, baz)`"
				}
			]
		},
		"hoisted": {
			"alias": "hoist",
			"popularity": 32
		},
		"fe": {
			"value": "A function declaration `function declared() {}` & a function expression e.g. `var bar = function expressed() {}`: the former is !hoisted, the latter can be immediately invoked (see !iife) and can be anonymous (eg can omit the name \"expressed\"). \"function\" as the first word of a statement at global scope or directly inside a function starts a function declaration; otherwise, it starts a function expression.",
			"popularity": 158,
			"creator": "ljharb",
			"editors": [
				"ljharb"
			]
		},
		"fd": {
			"alias": "fe",
			"popularity": 7
		},
		"json object": {
			"value": "JSON object is an often misused buzzword that does not have a well-defined meaning. See https://github.com/robotlolita/screw-the-buzzwords/wiki/JSON for alternatives to express what you mean.",
			"popularity": 34,
			"creator": "sacho_",
			"editors": [
				"Sorella"
			]
		},
		"think": {
			"value": "\"Give me 6 hours to chop down a tree and I will spend the first 4 sharpening my axe.\" - Abraham Lincoln",
			"popularity": 2,
			"creator": "ljharb",
			"editors": [
				"ljharb"
			]
		},
		"tanstaafl": {
			"value": "There ain't no such thing as a free lunch",
			"popularity": 1,
			"creator": "aeoril",
			"editors": []
		},
		"preamble": {
			"value": "We hold these truths to be self evident, that all men are created equal",
			"popularity": 6,
			"creator": "aeoril",
			"editors": []
		},
		"not next": {
			"value": "Sorry, but your help wasn't helpful.",
			"popularity": 1,
			"creator": "Havvy",
			"editors": []
		},
		"common sense": {
			"value": "Have common sense.",
			"popularity": 2,
			"creator": "PigDude",
			"editors": []
		},
		"csp": {
			"value": "Content Security Policy (CSP) is an added layer of security to detect/mitigate certain attacks, including XSS and data injection. https://developer.mozilla.org/en-US/docs/Security/CSP",
			"popularity": 94,
			"creator": "ljharb",
			"editors": []
		},
		"dontlike": {
			"value": "You don't like PHP. Great! Go discuss it in #programming.",
			"popularity": 4,
			"creator": "diamonds",
			"editors": [
				"dwcook",
				"diamonds"
			]
		},
		"alt": {
			"alias": "alternative",
			"popularity": 1
		},
		"alternative": {
			"value": "Please suggest an alternative when damning a popular library. Suggestions are useful, 'jquery sucks' is useless, unoriginal, and boring.",
			"popularity": 3,
			"creator": "dwcook",
			"editors": []
		},
		"criticism": {
			"alias": "alternative"
		},
		"var from string": {
			"value": "If you have the string name of a variable, and the object to which the variable belongs, you can access the variable using square brackets: object[name]. If the variable is global, you can use the global object to access it: <global object>[name] (e.g., in a browser, window[name]). If the variable is in a local scope, you cannot access it using its name.",
			"popularity": 14,
			"creator": "j201",
			"editors": []
		},
		"{} + {}": {
			"value": "http://www.benjiegillam.com/2013/06/quantum-javascript/",
			"popularity": 3,
			"creator": "Havvy",
			"editors": []
		},
		"wat": {
			"value": "https://www.destroyallsoftware.com/talks/wat‎",
			"popularity": 12,
			"creator": "Havvy",
			"editors": []
		},
		"uri": {
			"value": "For dealing with URIs use http://medialize.github.io/URI.js/ or one of the https://github.com/medialize/URI.js#alternatives",
			"popularity": 27,
			"creator": "ashnur",
			"editors": []
		},
		"asp": {
			"alias": "backend"
		},
		"backbone": {
			"value": "Backbone support channel: #documentcloud",
			"popularity": 21,
			"creator": "dwcook",
			"editors": []
		},
		"framework": {
			"value": "Check out http://todomvc.com/ for help deciding on a web framework.",
			"popularity": 10,
			"creator": "j201",
			"editors": []
		},
		"gorillascript": {
			"value": "http://ckknight.github.io/gorillascript/",
			"popularity": 0,
			"creator": "Havvy",
			"editors": [
				"ckknight"
			]
		},
		"fuckitjs": {
			"value": "https://github.com/mattdiamond/fuckitjs",
			"popularity": 6,
			"creator": "Havvy",
			"editors": []
		},
		"amd": {
			"value": "http://en.wikipedia.org/wiki/Asynchronous_module_definition",
			"popularity": 9,
			"creator": "ckknight",
			"editors": []
		},
		"atomic": {
			"value": "\"An atomic group is a group that, when the regex engine exits from it, automatically throws away all backtracking positions remembered by any tokens inside the group. Atomic groups are non-capturing. The syntax is (?>group)\" [ http://www.regular-expressions.info/atomic.html ]",
			"popularity": 4,
			"creator": "MJCD",
			"editors": []
		},
		"literal inheritance": {
			"value": "You can't directly set the prototype of an object literal, but you can make a helper function that's almost as good: http://j201.github.io/posts/2013-06-22-JS-Object-Literal-Inheritance.html",
			"popularity": 9,
			"creator": "j201",
			"editors": [
				"j201"
			],
			"changes": [
				{
					"date": "2014-10-28T07:43:32.162Z",
					"editor": "j201",
					"old-value": "You can't directly set the prototype of an object literal, but you can make a helper function that's almost as good: http://j201.github.io/blog/2013/06/22/js-object-literal-inheritance/",
					"new-value": "You can't directly set the prototype of an object literal, but you can make a helper function that's almost as good: http://j201.github.io/posts/2013-06-22-JS-Object-Literal-Inheritance.html"
				}
			]
		},
		"altjs": {
			"value": "Most programming languages offer a way of compiling code to JavaScript. There are also languages designed specifically for this. Take a look at http://git.io/altjs and http://smurfpandey.github.io/altjs/",
			"popularity": 29,
			"creator": "Sorella",
			"editors": [
				"Sorella",
				"j201",
				"GreenJello",
				"gkatsev"
			],
			"changes": [
				{
					"date": "2014-04-24T00:13:02.098Z",
					"editor": "j201",
					"old-value": "Most programming languages offer a way of compiling code to JavaScript. There are also languages designed specifically for this. Take a look at http://altjs.org/",
					"new-value": "Most programming languages offer a way of compiling code to JavaScript. There are also languages designed specifically for this. Take a look at https://github.com/jashkenas/coffee-script/wiki/List-of-languages-that-compile-to-JS",
					"regex": "s/http.+$/https:\\/\\/github.com\\/jashkenas\\/coffee-script\\/wiki\\/List-of-languages-that-compile-to-JS/"
				},
				{
					"date": "2014-04-24T00:15:17.909Z",
					"editor": "GreenJello",
					"old-value": "Most programming languages offer a way of compiling code to JavaScript. There are also languages designed specifically for this. Take a look at https://github.com/jashkenas/coffee-script/wiki/List-of-languages-that-compile-to-JS",
					"new-value": "Most programming languages offer a way of compiling code to JavaScript. There are also languages designed specifically for this. Take a look at http://git.io/altjs"
				},
				{
					"date": "2015-02-01T05:37:07.763Z",
					"editor": "gkatsev",
					"old-value": "Most programming languages offer a way of compiling code to JavaScript. There are also languages designed specifically for this. Take a look at http://git.io/altjs",
					"new-value": "Most programming languages offer a way of compiling code to JavaScript. There are also languages designed specifically for this. Take a look at http://git.io/altjs and http://smurfpandey.github.io/altjs/",
					"regex": "s/$/ and http:\\/\\/smurfpandey.github.io\\/altjs\\//"
				}
			]
		},
		"w3tools": {
			"alias": "w3schools"
		},
		"strict mode": {
			"value": "Strict mode is an opt-in mode for JS that fixes, disables, and changes some of the most problematic features of the language. https://gist.github.com/gkatsev/4685345",
			"popularity": 44,
			"creator": "gkatsev",
			"editors": [
				"gkatsev"
			]
		},
		"aasdfgh": {
			"alias": "foobarbaz"
		},
		"stop constructors": {
			"value": "Public constructors are problematic for a number of reasons, e.g. they couple the calling code to the constructor implementation.  http://ericleads.com/2012/09/stop-using-constructor-functions-in-javascript/",
			"popularity": 30,
			"creator": "ashnur",
			"editors": []
		},
		"pass by value": {
			"value": "JavaScript has call-by-value semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: https://web.archive.org/web/20161005155047/http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
			"popularity": 210,
			"creator": "gkatsev",
			"editors": [
				"ImBcmDth",
				"dwcook",
				"Sorella",
				"ljharb",
				"Maxdamantus"
			],
			"changes": [
				{
					"date": "2014-03-20T19:57:04.394Z",
					"editor": "dwcook",
					"old-value": "JavaScript has call-by-value semantics in which references are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed and somewhat boring explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"new-value": "JavaScript has call-by-value semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed and somewhat boring explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"regex": "s/references/references to objects/"
				},
				{
					"date": "2014-03-20T19:57:32.076Z",
					"editor": "dwcook",
					"old-value": "JavaScript has call-by-value semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed and somewhat boring explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"new-value": "JavaScript has call-by-value semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"regex": "s/and somewhat boring //"
				},
				{
					"date": "2015-09-14T13:40:42.938Z",
					"editor": "Sorella",
					"old-value": "JavaScript has call-by-value semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"new-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"regex": "s/call-by-value/call-by-value (or call-by-sharing, more specifically)/"
				},
				{
					"date": "2016-02-17T13:03:39.732Z",
					"editor": "ljharb",
					"old-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"new-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see:"
				},
				{
					"date": "2016-02-17T13:03:56.683Z",
					"editor": "ljharb",
					"old-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see:",
					"new-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/"
				},
				{
					"date": "2016-03-13T04:42:11.259Z",
					"editor": "ljharb",
					"old-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"new-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see:"
				},
				{
					"date": "2016-03-13T04:42:21.271Z",
					"editor": "ljharb",
					"old-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see:",
					"new-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/"
				},
				{
					"date": "2016-06-04T22:11:15.849Z",
					"editor": "ljharb",
					"old-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"new-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/"
				},
				{
					"date": "2016-08-07T18:30:25.727Z",
					"editor": "Sorella",
					"old-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"new-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function."
				},
				{
					"date": "2016-09-06T04:06:26.691Z",
					"editor": "ljharb",
					"old-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function.",
					"new-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/"
				},
				{
					"date": "2017-08-27T00:48:14.041Z",
					"editor": "ljharb",
					"old-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"new-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: https://web.archive.org/web/20161005155047/http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/"
				},
				{
					"date": "2017-11-03T10:54:20.206Z",
					"editor": "Maxdamantus",
					"old-value": "JavaScript has call-by-value (or call-by-sharing, more specifically) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: https://web.archive.org/web/20161005155047/http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"new-value": "JavaScript has call-by-value (or call-by-sharing, less formally) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: https://web.archive.org/web/20161005155047/http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"regex": "s/more specifically/less formally/"
				},
				{
					"date": "2017-11-03T10:56:50.359Z",
					"editor": "Maxdamantus",
					"old-value": "JavaScript has call-by-value (or call-by-sharing, less formally) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: https://web.archive.org/web/20161005155047/http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"new-value": "(with usage patterns that might be referred to as \"call-by-sharing\")",
					"regex": "s/(.*)/(with usage patterns that might be referred to as \"call-by-sharing\")/"
				},
				{
					"date": "2017-11-03T10:57:27.397Z",
					"editor": "ljharb",
					"old-value": "(with usage patterns that might be referred to as \"call-by-sharing\")",
					"new-value": "JavaScript has call-by-value (or call-by-sharing, less formally) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: https://web.archive.org/web/20161005155047/http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/"
				},
				{
					"date": "2017-11-03T10:59:51.585Z",
					"editor": "Maxdamantus",
					"old-value": "JavaScript has call-by-value (or call-by-sharing, less formally) semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: https://web.archive.org/web/20161005155047/http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"new-value": "JavaScript has call-by-value semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: https://web.archive.org/web/20161005155047/http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/",
					"regex": "s/\\(.*\\) //"
				}
			]
		},
		"pass by reference": {
			"alias": "pass by value",
			"popularity": 34
		},
		"superhero": {
			"value": "http://superherojs.com/ a great collection articles, videos, and presentations about javascript.",
			"popularity": 9,
			"creator": "gkatsev",
			"editors": []
		},
		"superherojs": {
			"alias": "superhero"
		},
		"call by value": {
			"alias": "pass by value",
			"popularity": 22
		},
		"call by reference": {
			"alias": "pass by value",
			"popularity": 2
		},
		"ham": {
			"alias": "java",
			"popularity": 12,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-10-07T12:14:08.129Z",
					"editor": "ljharb",
					"old-alias": "hamster",
					"new-alias": "java"
				}
			]
		},
		"dsamarin": {
			"value": "god",
			"popularity": 0,
			"creator": "dsamarin",
			"editors": []
		},
		"resize using canvas": {
			"value": "see http://davidwalsh.name/resize-image-canvas",
			"popularity": 2,
			"creator": "gkatsev",
			"editors": []
		},
		"moz": {
			"value": "https://developer.mozilla.org/en-US/docs/Web/CSS/Reference/Mozilla_Extensions?redirectlocale=en-US&redirectslug=Web%2FCSS%2FCSS_Reference%2FMozilla_Extensions",
			"popularity": 0,
			"creator": "MJCD",
			"editors": []
		},
		"ie": {
			"value": "http://blogs.msdn.com/b/ie/archive/2008/09/08/microsoft-css-vendor-extensions.aspx",
			"popularity": 3,
			"creator": "MJCD",
			"editors": []
		},
		"webkit": {
			"value": "http://css-infos.net/properties/webkit",
			"popularity": 0,
			"creator": "MJCD",
			"editors": []
		},
		"multiline": {
			"value": "Multiline string literals require you to escape newlines or use separate strings combined with the + operator: https://gist.github.com/j201/6227909",
			"popularity": 10,
			"creator": "j201",
			"editors": []
		},
		"marquee": {
			"value": "The marquee tag is a non-standard HTML element which causes text to scroll up, down, left or right automatically. The tag was first introduced in early versions of Microsoft's Internet Explorer, and was compared to Netscape's blink element, as a proprietary non-standard extension to the HTML standard with usability problems. Do not use.",
			"popularity": 3,
			"creator": "MJCD",
			"editors": []
		},
		"tutorial": {
			"value": "It is HIGHLY recommended that you establish a firm grasp of the core syntax within both JavaScript, HTML, and basic CSS. Before asking any syntax error related questions you can use `!eslint` to detect any contextual errors. A critically acclaimed tutorial is available @ http://eloquentjavascript.net/",
			"popularity": 186,
			"creator": "MJCD",
			"editors": [
				"graingert",
				"MJCD",
				"ljharb"
			],
			"changes": [
				{
					"date": "2017-01-01T07:10:39.382Z",
					"editor": "graingert",
					"old-value": "It is highly recommended that you establish a firm grasp of the core syntax within both javascript and HTML before asking any syntax error related questions. A good tutorial is: http://eloquentjavascript.net/ - you can also use http://validator.w3.org/ (HTML) and http://www.jslint.com/ (JS) to make sure your code passes.",
					"new-value": "It is highly recommended that you establish a firm grasp of the core syntax within both JavaScript and HTML before asking any syntax error related questions. A good tutorial is: http://eloquentjavascript.net/ - you can also use http://validator.w3.org/ (HTML) and http://eslint.org/demo/ (JS) to make sure your code passes."
				},
				{
					"date": "2018-10-19T23:00:28.348Z",
					"editor": "MJCD",
					"old-value": "It is highly recommended that you establish a firm grasp of the core syntax within both JavaScript and HTML before asking any syntax error related questions. A good tutorial is: http://eloquentjavascript.net/ - you can also use http://validator.w3.org/ (HTML) and http://eslint.org/demo/ (JS) to make sure your code passes.",
					"new-value": "It is HIGHLY recommended that you establish a firm grasp of the core syntax within both JavaScript, HTML and basic CSS. Before asking any syntax error related questions you can use `!eslint` to detect any contextual errors. A critically acclaimed tutorial is available @ http://eloquentjavascript.net/"
				},
				{
					"date": "2018-10-19T23:35:57.127Z",
					"editor": "ljharb",
					"old-value": "It is HIGHLY recommended that you establish a firm grasp of the core syntax within both JavaScript, HTML and basic CSS. Before asking any syntax error related questions you can use `!eslint` to detect any contextual errors. A critically acclaimed tutorial is available @ http://eloquentjavascript.net/",
					"new-value": "It is HIGHLY recommended that you establish a firm grasp of the core syntax within both JavaScript, HTML, and basic CSS. Before asking any syntax error related questions you can use `!eslint` to detect any contextual errors. A critically acclaimed tutorial is available @ http://eloquentjavascript.net/"
				}
			]
		},
		"confuse me": {
			"value": "Sure thing, boss! https://docs.google.com/drawings/d/1FxGQh2zhAekUYe5zZhv2yrQPmNtp3w34cwkh7iReKqI/edit",
			"popularity": 32,
			"creator": "ImBcmDth",
			"editors": [
				"ImBcmDth",
				"Maxdamantus"
			],
			"changes": [
				{
					"date": "2014-10-26T08:16:49.807Z",
					"editor": "Maxdamantus",
					"old-value": "Sure thing, boss! http://i.imgur.com/mbKmJdL.png",
					"new-value": "Sure thing, boss! http://i.imgur.com/mbKmJdL.png .. just ignore the dotted line and the \"prototype\" property on Function's prototype.",
					"regex": "s/$/ .. just ignore the dotted line and the \"prototype\" property on Function's prototype./"
				},
				{
					"date": "2014-10-30T02:48:07.612Z",
					"editor": "ImBcmDth",
					"old-value": "Sure thing, boss! http://i.imgur.com/mbKmJdL.png .. just ignore the dotted line and the \"prototype\" property on Function's prototype.",
					"new-value": "Sure thing, boss! http://i.imgur.com/x5RrlGl.png"
				},
				{
					"date": "2014-10-30T02:57:36.645Z",
					"editor": "ImBcmDth",
					"old-value": "Sure thing, boss! http://i.imgur.com/x5RrlGl.png",
					"new-value": "Sure thing, boss! https://docs.google.com/drawings/d/1FxGQh2zhAekUYe5zZhv2yrQPmNtp3w34cwkh7iReKqI/edit"
				}
			]
		},
		"fp": {
			"value": "Functional programming: A style of programming which uses only pure (mathematical) functions, avoiding side-effects",
			"popularity": 65,
			"creator": "Sorella",
			"editors": [
				"Sorella",
				"Maxdamantus",
				"j201",
				"ashnur"
			],
			"changes": [
				{
					"date": "2014-04-17T23:40:54.072Z",
					"editor": "Sorella",
					"old-value": "1) A style of programming which uses only pure (mathematical) functions, avoiding mutation of state; 2) A term used loosely by many to refer to higher-order programming, where functions or procedures are first-class citizens and are passed around to influence the effects of other functions or procedures",
					"new-value": "1) A style of programming which uses only pure (mathematical) functions, avoiding side-effects; 2) A term used loosely by many to refer to higher-order programming, where functions or procedures are first-class citizens and are passed around to influence the effects of other functions or procedures",
					"regex": "s/avoiding mutation of state/avoiding side-effects/"
				},
				{
					"date": "2014-04-17T23:41:25.827Z",
					"editor": "j201",
					"old-value": "1) A style of programming which uses only pure (mathematical) functions, avoiding side-effects; 2) A term used loosely by many to refer to higher-order programming, where functions or procedures are first-class citizens and are passed around to influence the effects of other functions or procedures",
					"new-value": "Functional programming: 1) A style of programming which uses only pure (mathematical) functions, avoiding side-effects; 2) A term used loosely by many to refer to higher-order programming, where functions or procedures are first-class citizens and are passed around to influence the effects of other functions or procedures",
					"regex": "s/^/Functional programming: /"
				},
				{
					"date": "2014-05-02T18:39:27.036Z",
					"editor": "ashnur",
					"old-value": "Functional programming: 1) A style of programming which uses only pure (mathematical) functions, avoiding side-effects; 2) A term used loosely by many to refer to higher-order programming, where functions or procedures are first-class citizens and are passed around to influence the effects of other functions or procedures",
					"new-value": "Functional programming: A style of programming which uses only pure (mathematical) functions, avoiding side-effects"
				}
			]
		},
		"!": {
			"value": "!! is a convenient shorthand for converting a truthy/falsy value to true/false, similar to the more verbose `Boolean` function.",
			"popularity": 154,
			"creator": "ImBcmDth",
			"editors": [
				"yansanmo",
				"ImBcmDth",
				"dwcook",
				"FireFly",
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-02-21T05:15:54.322Z",
					"editor": "yansanmo",
					"old-value": "A convenient shorthand for converting a truthy/falsey value to true/false.",
					"new-value": "Bang bang"
				},
				{
					"date": "2014-02-24T02:32:33.303Z",
					"editor": "ImBcmDth",
					"old-value": "Bang bang",
					"new-value": "A convenient shorthand for converting a truthy/falsey value to true/false."
				},
				{
					"date": "2014-03-22T04:41:14.705Z",
					"editor": "dwcook",
					"old-value": "A convenient shorthand for converting a truthy/falsey value to true/false.",
					"new-value": "!! is a convenient shorthand for converting a truthy/falsey value to true/false.",
					"regex": "s/A/!! is a/"
				},
				{
					"date": "2014-03-22T15:29:32.596Z",
					"editor": "FireFly",
					"old-value": "!! is a convenient shorthand for converting a truthy/falsey value to true/false.",
					"new-value": "!! is a convenient shorthand for converting a truthy/falsey value to true/false, compared to the more verbose `Boolean` function.",
					"regex": "s/.$/, compared to the more verbose `Boolean` function./"
				},
				{
					"date": "2014-03-22T15:29:46.295Z",
					"editor": "FireFly",
					"old-value": "!! is a convenient shorthand for converting a truthy/falsey value to true/false, compared to the more verbose `Boolean` function.",
					"new-value": "!! is a convenient shorthand for converting a truthy/falsey value to true/false, similar to the more verbose `Boolean` function.",
					"regex": "s/compared/similar/"
				},
				{
					"date": "2014-03-22T18:09:53.670Z",
					"editor": "ljharb",
					"old-value": "!! is a convenient shorthand for converting a truthy/falsey value to true/false, similar to the more verbose `Boolean` function.",
					"new-value": "!! is a convenient shorthand for converting a truthy/falsy value to true/false, similar to the more verbose `Boolean` function.",
					"regex": "s/falsey/falsy/"
				}
			]
		},
		"record": {
			"value": "Recommended reading on capturing audio/video signals using HTML5; http://www.html5rocks.com/en/tutorials/getusermedia/intro/",
			"popularity": 5,
			"creator": "MJCD",
			"editors": []
		},
		"modules": {
			"value": "Modules divide programs into clusters of code that, by some criterion, belong together. \"!es modules\" are second-class, but JS can encode first-class ones. Major implementations include CommonJS, Node modules (a variant of CJS), and AMD. All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-all.html and",
			"popularity": 190,
			"creator": "Sorella",
			"editors": [
				"Sorella",
				"falafel",
				"graingert"
			],
			"changes": [
				{
					"date": "2014-07-02T17:16:02.844Z",
					"editor": "Sorella",
					"old-value": "The current specification of ECMAScript doesn't define modules. Second-class modules are coming in ES6, but JS is powerful enough to encode first-class ones. Major implementations include AMD, CommonJS and Node modules (a modified CJS system). All of them can be used in any JS VM, including browsers. See also: http://robotlolita.github.io/2013/06/06/node-modules-to-rule-them-all.html",
					"new-value": "The current specification of ECMAScript doesn't define modules. Second-class modules are coming in ES6, but JS is powerful enough to encode first-class ones. Major implementations include AMD, CommonJS and Node modules (a modified CJS system). All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-all.html",
					"regex": "s/\\.github\\.io/.me/"
				},
				{
					"date": "2015-07-13T21:28:50.328Z",
					"editor": "falafel",
					"old-value": "The current specification of ECMAScript doesn't define modules. Second-class modules are coming in ES6, but JS is powerful enough to encode first-class ones. Major implementations include AMD, CommonJS and Node modules (a modified CJS system). All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-all.html",
					"new-value": "Modules divide programs into clusters of code that, by some criterion, belong together. The current specification of ECMAScript (ES6) defines second-class modules, but JS is powerful enough to encode first-class ones. Major implementations include AMD, CommonJS and Node modules. All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-al"
				},
				{
					"date": "2015-07-13T21:29:55.823Z",
					"editor": "falafel",
					"old-value": "Modules divide programs into clusters of code that, by some criterion, belong together. The current specification of ECMAScript (ES6) defines second-class modules, but JS is powerful enough to encode first-class ones. Major implementations include AMD, CommonJS and Node modules. All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-al",
					"new-value": "Modules divide programs into clusters of code that, by some criterion, belong together. ES6 defines second-class modules, but JS can encode first-class ones. Major implementations include AMD, CommonJS and Node modules. All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-all.html and http://eloquentjavascript.net/10_modules.html."
				},
				{
					"date": "2016-02-17T10:00:36.425Z",
					"editor": "Sorella",
					"old-value": "Modules divide programs into clusters of code that, by some criterion, belong together. ES6 defines second-class modules, but JS can encode first-class ones. Major implementations include AMD, CommonJS and Node modules. All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-all.html and http://eloquentjavascript.net/10_modules.html.",
					"new-value": "Modules divide programs into clusters of code that, by some criterion, belong together. \"!es6 modules\" are second-class, but JS can encode first-class ones. Major implementations include AMD, CommonJS and Node modules. All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-all.html and http://eloquentjavascript.net/10_modules.html.",
					"regex": "s/ES6 defines second-class modules/\"!es6 modules\" are second-class/"
				},
				{
					"date": "2016-02-17T10:16:09.996Z",
					"editor": "Sorella",
					"old-value": "Modules divide programs into clusters of code that, by some criterion, belong together. \"!es6 modules\" are second-class, but JS can encode first-class ones. Major implementations include AMD, CommonJS and Node modules. All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-all.html and http://eloquentjavascript.net/10_modules.html.",
					"new-value": "Modules divide programs into clusters of code that, by some criterion, belong together. \"!es6 modules\" are second-class, but JS can encode first-class ones. Major implementations include CommonJS, Node modules (a variant of CJS), and AMD. All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-all.html and http://eloquentjavascript.net/10_modules.html.",
					"regex": "s/AMD, CommonJS and Node modules/CommonJS, Node modules (a variant of CJS), and AMD/"
				},
				{
					"date": "2019-03-11T20:10:44.826Z",
					"editor": "graingert",
					"old-value": "Modules divide programs into clusters of code that, by some criterion, belong together. \"!es6 modules\" are second-class, but JS can encode first-class ones. Major implementations include CommonJS, Node modules (a variant of CJS), and AMD. All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-all.html and http://eloquentjavascript.net/10_modules.html.",
					"new-value": "Modules divide programs into clusters of code that, by some criterion, belong together. \"!es modules\" are second-class, but JS can encode first-class ones. Major implementations include CommonJS, Node modules (a variant of CJS), and AMD. All of them can be used in any JS VM, including browsers. See also: http://robotlolita.me/2013/06/06/node-modules-to-rule-them-all.html and"
				}
			]
		},
		"anonymous function": {
			"value": "The term \"anonymous function\" has somewhat ambiguous usage. People have used it to mean \"function expression\", \"function not bound to a variable\", and \"function with no name\". It couldn't hurt to clarify which you mean.",
			"popularity": 0,
			"creator": "dwcook",
			"editors": [
				"dwcook"
			]
		},
		"anon": {
			"alias": "anonymous function"
		},
		"imperative": {
			"value": "A programming style that focuses on sequential statements (commands), which move the computer from one state to another.",
			"popularity": 8,
			"creator": "Sorella",
			"editors": [
				"Sorella",
				"Agamemnus"
			]
		},
		"unicode": {
			"value": "This blog post is a brief introduction to Unicode and how it is handled in JavaScript. http://www.2ality.com/2013/09/javascript-unicode.html",
			"popularity": 2,
			"creator": "ashnur",
			"editors": []
		},
		"allongé": {
			"value": "https://leanpub.com/javascript-allonge/read",
			"popularity": 3,
			"creator": "fwg",
			"editors": []
		},
		"pressure": {
			"value": "http://toys.usvsth3m.com/javascript-under-pressure/",
			"popularity": 6,
			"creator": "ashnur",
			"editors": []
		},
		"optimisation": {
			"value": "Don't try to optimize if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimizations based off dynamic type inferencing and execution analysis over time that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU, https://www.youtube.com/watch?v=g0ek4vV7nEA",
			"popularity": 118,
			"creator": "Sorella",
			"editors": [
				"Sorella",
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-10-24T10:31:58.127Z",
					"editor": "ljharb",
					"old-value": "Don't try to optimise if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimisations based off dynamic type inferencing and execution analysis over time,  that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU",
					"new-value": "Don't try to optimize if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimizations based off dynamic type inferencing and execution analysis over time, that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU"
				},
				{
					"date": "2015-03-22T15:52:39.854Z",
					"editor": "Sorella",
					"old-value": "Don't try to optimize if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimizations based off dynamic type inferencing and execution analysis over time, that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU",
					"new-value": "Don't try to optimize if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimizations based off dynamic type inferencing and execution analysis over time that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU",
					"regex": "s/, that'll/ that'll/"
				},
				{
					"date": "2015-07-14T22:27:06.883Z",
					"editor": "Sorella",
					"old-value": "Don't try to optimize if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimizations based off dynamic type inferencing and execution analysis over time that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU",
					"new-value": "Don't try to optimize if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimizations based off dynamic type inferencing and execution analysis over time that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU, https://www.youtube.com/watch?v=g0ek4vV7nEA",
					"regex": "s/$/, https:\\/\\/www.youtube.com\\/watch?v=g0ek4vV7nEA/"
				},
				{
					"date": "2016-01-26T20:42:04.004Z",
					"editor": "Sorella",
					"old-value": "Don't try to optimize if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimizations based off dynamic type inferencing and execution analysis over time that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU, https://www.youtube.com/watch?v=g0ek4vV7nEA",
					"new-value": "Don't try to optimise if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimizations based off dynamic type inferencing and execution analysis over time that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU, https://www.youtube.com/watch?v=g0ek4vV7nEA",
					"regex": "s/optimize/optimise/"
				},
				{
					"date": "2016-01-26T20:42:14.297Z",
					"editor": "Sorella",
					"old-value": "Don't try to optimise if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimizations based off dynamic type inferencing and execution analysis over time that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU, https://www.youtube.com/watch?v=g0ek4vV7nEA",
					"new-value": "Don't try to optimise if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimisations based off dynamic type inferencing and execution analysis over time that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU, https://www.youtube.com/watch?v=g0ek4vV7nEA",
					"regex": "s/optimizations/optimisations/"
				},
				{
					"date": "2016-03-09T23:49:08.696Z",
					"editor": "ljharb",
					"old-value": "Don't try to optimise if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimisations based off dynamic type inferencing and execution analysis over time that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU, https://www.youtube.com/watch?v=g0ek4vV7nEA",
					"new-value": "Don't try to optimize if you have no clue about what goes 'round the JIT. JITs are *really* smart, and they do lots of complex optimizations based off dynamic type inferencing and execution analysis over time that'll defeat your naive reasoning. See: https://www.youtube.com/watch?v=65-RbBwZQdU, https://www.youtube.com/watch?v=g0ek4vV7nEA",
					"regex": "s/optimis/optimiz/g"
				}
			]
		},
		"optimization": {
			"alias": "optimisation",
			"popularity": 56,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2014-02-26T23:14:48.322Z",
					"editor": "Sorella",
					"old-alias": "optimisation",
					"new-alias": "optimisation"
				}
			]
		},
		"media": {
			"value": "A comprehensive guide to cross-device CSS media queries; http://pugetworks.com/blog/2011/04/css-media-queries-for-targeting-different-mobile-devices/",
			"popularity": 0,
			"creator": "MJCD",
			"editors": []
		},
		"sourcemap": {
			"value": "A great article on source maps: https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/",
			"popularity": 4,
			"creator": "MJCD",
			"editors": []
		},
		"strict": {
			"alias": "strict mode",
			"popularity": 23
		},
		"important": {
			"value": "CSS: \"An !important declaration provides a way for a stylesheet author to give a CSS value more weight than it naturally has.\" | More: http://coding.smashingmagazine.com/2010/11/02/the-important-css-declaration-how-and-when-to-use-it/",
			"popularity": 4,
			"creator": "MJCD_",
			"editors": []
		},
		"numbers talk": {
			"value": "http://www.youtube.com/watch?v=MqHDDtVYJRI Bartek Szopka: Everything you never wanted to know about JavaScript Numbers",
			"popularity": 13,
			"creator": "ashnur",
			"editors": []
		},
		"asknow": {
			"value": "Just ask! Sit back, relax, and you will be helped shortly.",
			"popularity": 3,
			"creator": "jaspr",
			"editors": []
		},
		"asi": {
			"value": "ASI stands for 'automatic semicolon insertion', a mechanism by which semicolons may be omitted from the source code in certain cases, and still be recognized by the parser. Note that semicolons are NOT OPTIONAL and use of this feature will patch around your omission. For details: http://inimino.org/~inimino/blog/javascript_semicolons",
			"popularity": 170,
			"creator": "ashnur",
			"editors": [
				"ImBcmDth",
				"Agamemnus",
				"Sorella",
				"MJCD"
			],
			"changes": [
				{
					"date": "2014-08-05T09:01:31.153Z",
					"editor": "Agamemnus",
					"old-value": "ASI stands for 'automatic semicolon insertion', a mechanism by which semicolons may be omitted from the source code in certain cases, and still be recognised by the parser. For details: http://inimino.org/~inimino/blog/javascript_semicolons - for fewer details and a commonly-held opinion, see http://goo.gl/QEYT4g",
					"new-value": "ASI stands for 'automatic semicolon insertion', a mechanism by which semicolons may be omitted from the source code in certain cases, and still be recognized by the parser. For details: http://inimino.org/~inimino/blog/javascript_semicolons - for fewer details and a commonly-held opinion, see http://goo.gl/QEYT4g"
				},
				{
					"date": "2014-08-05T09:01:44.327Z",
					"editor": "Agamemnus",
					"old-value": "ASI stands for 'automatic semicolon insertion', a mechanism by which semicolons may be omitted from the source code in certain cases, and still be recognized by the parser. For details: http://inimino.org/~inimino/blog/javascript_semicolons - for fewer details and a commonly-held opinion, see http://goo.gl/QEYT4g",
					"new-value": "ASI stands for 'automatic semicolon insertion', a mechanism by which semicolons may be omitted from the source code in certain cases, and still be recognized by the parser. For details: http://inimino.org/~inimino/blog/javascript_semicolons - for fewer details and a commonly-held opinion, see http://goo.gl/QEYT4g"
				},
				{
					"date": "2016-07-07T01:24:57.709Z",
					"editor": "Sorella",
					"old-value": "ASI stands for 'automatic semicolon insertion', a mechanism by which semicolons may be omitted from the source code in certain cases, and still be recognized by the parser. For details: http://inimino.org/~inimino/blog/javascript_semicolons - for fewer details and a commonly-held opinion, see http://goo.gl/QEYT4g",
					"new-value": "ASI stands for 'automatic semicolon insertion', a mechanism by which semicolons may be omitted from the source code in certain cases, and still be recognized by the parser. For details: http://inimino.org/~inimino/blog/javascript_semicolons"
				},
				{
					"date": "2018-08-23T19:32:12.827Z",
					"editor": "MJCD",
					"old-value": "ASI stands for 'automatic semicolon insertion', a mechanism by which semicolons may be omitted from the source code in certain cases, and still be recognized by the parser. For details: http://inimino.org/~inimino/blog/javascript_semicolons",
					"new-value": "ASI stands for 'automatic semicolon insertion', a mechanism by which semicolons may be omitted from the source code in certain cases, and still be recognized by the parser. Note that semicolons are NOT OPTIONAL and use of this feature will patch around your omission. For details: http://inimino.org/~inimino/blog/javascript_semicolons"
				}
			]
		},
		"semicolons": {
			"value": "don't rely on ASI! use /*eslint semi: [\"error\", \"always\"]*/ , or use !airbnb",
			"popularity": 36,
			"creator": "j201",
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2019-07-15T22:22:45.584Z",
					"editor": "graingert",
					"old-value": "Here we go again...",
					"new-value": "don't rely on ASI! use /*eslint semi: [\"error\", \"always\"]*/ , or use !airbnb"
				}
			]
		},
		"allonge": {
			"alias": "allongé",
			"popularity": 1
		},
		"benvie": {
			"value": "the elusive Benvie may sometimes be found here but mostly on mozilla's IRC network and on twitter.",
			"popularity": 4,
			"creator": "gkatsev",
			"editors": []
		},
		"execution model": {
			"value": "JavaScript is a synchronous language, and all native functions are executed synchronously. Some extensions (e.g.: Node's core, and Browser's DOM) may add asynchronous operations. Async operations aren't compatible with loops & other control flow, so you need to use callbacks (!cps) or !promises.",
			"popularity": 14,
			"creator": "Sorella",
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2016-02-29T22:02:00.599Z",
					"editor": "Sorella",
					"old-value": "JavaScript is a strict, eager, run-to-completion, top-down, applicative order language. The standard library operations are executed synchronously. Some extensions may add asynchronous operations. For example, Node.js or the Browser.",
					"new-value": "JavaScript is a strict, eager, run-to-completion, top-down, applicative order language. The standard library operations are executed synchronously. Some extensions may add asynchronous operations. For example, Node.js or the Browser. !promises.",
					"regex": "s/$/ !promises./"
				},
				{
					"date": "2016-02-29T22:03:07.622Z",
					"editor": "Sorella",
					"old-value": "JavaScript is a strict, eager, run-to-completion, top-down, applicative order language. The standard library operations are executed synchronously. Some extensions may add asynchronous operations. For example, Node.js or the Browser. !promises.",
					"new-value": "JavaScript is a strict, eager, run-to-completion, top-down, applicative order language. The standard library operations are executed synchronously. Some extensions may add asynchronous operations. For example, Node.js or the BrowserAsync operations aren't compatible with loops & other control flow, you need to use callbacks (!cps) or !promises.",
					"regex": "s/\\. !promises\\./Async operations aren't compatible with loops & other control flow, you need to use callbacks (!cps) or !promises./"
				},
				{
					"date": "2016-02-29T22:03:33.607Z",
					"editor": "Sorella",
					"old-value": "JavaScript is a strict, eager, run-to-completion, top-down, applicative order language. The standard library operations are executed synchronously. Some extensions may add asynchronous operations. For example, Node.js or the BrowserAsync operations aren't compatible with loops & other control flow, you need to use callbacks (!cps) or !promises.",
					"new-value": "JavaScript is a strict, eager, run-to-completion, top-down, applicative order language. The standard library operations are executed synchronously. Some extensions may add asynchronous operations. For example, Node.js or the Browser. Async operations aren't compatible with loops & other control flow, you need to use callbacks (!cps) or !promises.",
					"regex": "s/BrowserAsync/Browser. Async/"
				},
				{
					"date": "2016-02-29T22:05:03.145Z",
					"editor": "Sorella",
					"old-value": "JavaScript is a strict, eager, run-to-completion, top-down, applicative order language. The standard library operations are executed synchronously. Some extensions may add asynchronous operations. For example, Node.js or the Browser. Async operations aren't compatible with loops & other control flow, you need to use callbacks (!cps) or !promises.",
					"new-value": "JavaScript is a synchronous language, and all native functions are executed synchronously. Some extensions (e.g.: Node's core, and Browser's DOM) may add asynchronous operations. Async operations aren't compatible with loops & other control flow, so you need to use callbacks (!cps) or !promises."
				}
			]
		},
		"modal": {
			"value": "\"Modal window\" is just a fancy way to say \"some div floating over everything pretending to be a window and not allowing interaction with any other part of the page until the 'window' is dimissed.\" -- ch3mical.",
			"popularity": 6,
			"creator": "Agamemnus",
			"editors": [
				"Agamemnus"
			]
		},
		"backend": {
			"value": "You're showing us (PHP|ASP|other backend language) code, but asking a question about the browser, which sees the output. Maybe your code produces correct output, maybe it doesn't. Please show us the HTML as the browser sees it.",
			"popularity": 56,
			"creator": "dwcook",
			"editors": [
				"dwcook"
			]
		},
		"src object.create": {
			"value": "Object.create = function(o){ function f(){} f.prototype = o; return new f(); };",
			"popularity": 7,
			"creator": "Maxdamantus",
			"editors": []
		},
		"tried": {
			"value": "Give us some context - what have you tried? What have you read? http://mattgemmell.com/what-have-you-tried/",
			"popularity": 12,
			"creator": "diamonds",
			"editors": [
				"Agamemnus"
			],
			"changes": [
				{
					"date": "2014-06-10T21:36:16.461Z",
					"editor": "Agamemnus",
					"old-value": "What have you tried?",
					"new-value": "\"Give us some context - what have you tried? What have you read? http://mattgemmell.com/what-have-you-tried/\""
				},
				{
					"date": "2014-06-10T21:37:46.358Z",
					"editor": "Agamemnus",
					"old-value": "\"Give us some context - what have you tried? What have you read? http://mattgemmell.com/what-have-you-tried/\"",
					"new-value": "Give us some context - what have you tried? What have you read? http://mattgemmell.com/what-have-you-tried/"
				}
			]
		},
		"premature": {
			"alias": "premature optimization",
			"popularity": 26
		},
		"modularize": {
			"alias": "modularising",
			"popularity": 1
		},
		"modularise": {
			"alias": "modularising"
		},
		"modularizing": {
			"alias": "modularising",
			"popularity": 2
		},
		"reason": {
			"value": "Please explain why you need to even do such a thing. What are you trying to accomplish? What is your final goal? You may find that you are approaching the problem the wrong way.",
			"popularity": 2,
			"creator": "dwcook",
			"editors": []
		},
		"cps": {
			"value": "Continuation-Passing style is the formal term for the \"callback-based\" approach to programming. CPS is a heavily used idiom in JavaScript to deal with asynchronous programming. See http://matt.might.net/articles/by-example-continuation-passing-style/",
			"popularity": 207,
			"creator": "Sorella",
			"editors": []
		},
		"pofl": {
			"value": "a Plain Old For Loop",
			"creator": "ImBcmDth",
			"date": "2013-12-12T16:26:51.287Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"callback": {
			"value": "A function `f` you pass to another function `g`, as an argument, expecting to be called when `g` is done with its work, and wants to continue the execution of the program with its computed value (i.e.: where you'd use `return`). Compare `function add(a, b){ return a + b }` with `function add(a, b, Return){ Return(a + b) }`. See !cps",
			"creator": "Havvy",
			"date": "2013-12-16T22:02:16.498Z",
			"popularity": 62,
			"editors": [
				"Maxdamantus",
				"Sorella"
			],
			"changes": [
				{
					"date": "2015-05-16T00:23:35.969Z",
					"editor": "Maxdamantus",
					"old-value": "A function you pass to another function expecting it to be called when the result of the function you called is known.",
					"new-value": "A function you pass to anosomething interesting happens.",
					"regex": "s/the.*$/something interesting happens./"
				},
				{
					"date": "2015-05-16T00:24:04.469Z",
					"editor": "Maxdamantus",
					"old-value": "A function you pass to anosomething interesting happens.",
					"new-value": "A function you pass to another function expecting it to be called when something interesting happens."
				},
				{
					"date": "2015-06-12T16:36:43.258Z",
					"editor": "Sorella",
					"old-value": "A function you pass to another function expecting it to be called when something interesting happens.",
					"new-value": "A function you pass to another function expecting it to be called when you're done with it, and want to pass the result of the function on (i.e.: where you'd use `return`).",
					"regex": "s/when something interesting happens/when you're done with it, and want to pass the result of the function on (i.e.: where you'd use `return`)/"
				},
				{
					"date": "2015-10-01T20:46:48.875Z",
					"editor": "Sorella",
					"old-value": "A function you pass to another function expecting it to be called when you're done with it, and want to pass the result of the function on (i.e.: where you'd use `return`).",
					"new-value": "A function `f` you pass to another function `g`, as an argument, expecting to be called when `g` is done with its work, and wants to continue the execution of the program with its computed value (i.e.: where you'd use `return`). Compare `function add(a, b){ return a + b }` with `function add(a, b, Return){ Return(a + b) }`. See !cps"
				}
			]
		},
		"callbackhell": {
			"value": "Callback hell is easily avoidable. Check out http://callbackhell.com , and look into Promises ( https://gist.github.com/domenic/3889970 )",
			"creator": "dsamarin",
			"date": "2013-12-16T22:02:25.320Z",
			"popularity": 20,
			"editors": [],
			"changes": []
		},
		"callbacks": {
			"alias": "callback",
			"creator": "dsamarin",
			"date": "2013-12-16T22:04:51.425Z",
			"popularity": 18,
			"editors": [],
			"changes": []
		},
		"cb": {
			"alias": "callback",
			"creator": "Havvy",
			"date": "2013-12-16T22:05:06.966Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"mnd": {
			"alias": "mdc",
			"creator": "",
			"date": "2013-12-17T09:30:03.502Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"evaluation model": {
			"alias": "execution model",
			"creator": "Sorella",
			"date": "2013-12-18T19:08:08.551Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"arraylike": {
			"value": "An object that has integral properties and a length property. You can use most Array.prototype methods on them (ex: Array.prototype.slice.call(arraylike)) even though they are not actually arrays. Examples include the arguments object and the DOM's NodeList.",
			"creator": "Havvy",
			"date": "2013-12-23T15:38:38.047Z",
			"popularity": 7,
			"editors": [],
			"changes": []
		},
		"urban": {
			"value": "Urbanizator is the best",
			"creator": "urbanizator",
			"date": "2013-12-23T16:26:56.646Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"crockford": {
			"value": "http://yuiblog.com/crockford/ Videos by Douglas Crockford about JavaScript. Also on YouTube.",
			"creator": "Havvy",
			"date": "2013-12-26T07:17:58.691Z",
			"popularity": 9,
			"editors": [],
			"changes": []
		},
		"nowrap": {
			"value": "Under \"Frameworks & Extensions\" on jsfiddle, change \"onLoad\" to \"No wrap - in <body>\"; or stop putting event handlers in your HTML.",
			"creator": "GreenJello",
			"date": "2013-12-26T17:07:44.158Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"doesn't make sense": {
			"value": "What do you mean it doesn't make sense? Is it blind? What about the topic do you not understand? What do you feel is contradictory or incorrect? Most of us aren't simply voices in your head so we can't help you if you don't first explain your confusion.",
			"creator": "ImBcmDth",
			"date": "2013-12-27T06:07:46.223Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"thishelp": {
			"value": "A common source of confusion is `this`.  Explanation of the problem, and some solutions:  http://cdpn.io/moiwa",
			"creator": "GreenJello",
			"date": "2013-12-27T17:11:08.428Z",
			"popularity": 15,
			"editors": [],
			"changes": []
		},
		"this is madness": {
			"value": "THIS IS JAVASCRIPT",
			"creator": "darbicus",
			"date": "2013-12-28T23:03:47.661Z",
			"popularity": 18,
			"editors": [],
			"changes": []
		},
		"now": {
			"value": "Use this shim for Date.now in IE 8 and below: `if (!Date.now) { Date.now = function () { return (new Date()).getTime(); }; }` or use !es5-shim",
			"creator": "ljharb",
			"date": "2014-01-06T00:05:54.557Z",
			"popularity": 10,
			"editors": [
				"earendel",
				"ljharb"
			],
			"changes": [
				{
					"date": "2018-05-05T21:46:44.745Z",
					"editor": "earendel",
					"old-value": "'Use this shim for Date.now in IE 8 and below: `if (!Date.now) { Date.now = function () { return (new Date()).getTime(); }; }`",
					"new-value": "deploy directory of static files free http server just by typing: now| t4gs: cli design porn hosting tool |  https://zeit.co/docs"
				},
				{
					"date": "2018-05-05T21:48:03.179Z",
					"editor": "earendel",
					"old-value": "deploy directory of static files free http server just by typing: now| t4gs: cli design porn hosting tool |  https://zeit.co/docs",
					"new-value": "deploy directory of static files free http server just by typing: now | t4gs: cli design porn hosting tool | install: npm i -g now  .. docs:   https://zeit.co/docs"
				},
				{
					"date": "2018-06-14T18:55:06.029Z",
					"editor": "ljharb",
					"old-value": "deploy directory of static files free http server just by typing: now | t4gs: cli design porn hosting tool | install: npm i -g now  .. docs:   https://zeit.co/docs",
					"new-value": "Use this shim for Date.now in IE 8 and below: `if (!Date.now) { Date.now = function () { return (new Date()).getTime(); }; }` or use !es5-shim"
				}
			]
		},
		"polyfill": {
			"value": "A polyfill, or a shim, should be a spec-compliant method of providing functionality to older environments that lack it. See !es5 shim, !es6 shim, !polyfill.io, !document.head, !raf, !now, etc",
			"creator": "ljharb",
			"date": "2014-01-06T00:06:05.813Z",
			"popularity": 44,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2018-11-08T16:58:34.412Z",
					"editor": "qswz",
					"old-value": "A polyfill, or a shim, should be a spec-compliant method of providing functionality to older environments that lack it. See !es5 shim, !es6 shim, !document.head, !raf, !now, etc.",
					"new-value": "A polyfill, or a shim, should be a spec-compliant method of providing functionality to older environments that lack it. See !es5 shim, !es6 shim, !polyfill.io, !document.head, !raf, !now, etc"
				}
			]
		},
		"shim": {
			"alias": "polyfill",
			"creator": "ljharb",
			"date": "2014-01-06T00:06:22.430Z",
			"popularity": 19,
			"editors": [],
			"changes": []
		},
		"askquestion": {
			"value": "Just ask your question, you don't have to ask permission to ask.",
			"creator": "urbanizator",
			"date": "2014-01-08T15:20:47.422Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"es6compat": {
			"value": "http://kangax.github.io/es5-compat-table/es6/#For..of_loops",
			"creator": "Havvy",
			"date": "2014-01-13T21:05:53.106Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"mondays": {
			"value": "\"first day of the work week\"",
			"creator": "blackkbot",
			"date": "2014-01-19T12:36:10.750Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"thumbs up": {
			"value": "👍",
			"creator": "ljharb",
			"date": "2014-01-21T00:29:20.527Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"composition": {
			"value": "Computer science classes say, \"inheritance all the way\". Experienced programmers say, \"prefer composition over inheritance\". See: http://en.wikipedia.org/wiki/Composition_over_inheritance, http://www.stackoverflow.com/questions/49002/prefer-composition-over-inheritance",
			"creator": "ljharb",
			"date": "2014-01-22T08:51:48.126Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"nodeschool": {
			"value": "Learn some node.js basics thru bite sized exercises here: http://nodeschool.io/",
			"creator": "diamonds",
			"date": "2014-01-22T16:20:43.149Z",
			"popularity": 6,
			"editors": [
				"Havvy"
			],
			"changes": [
				{
					"date": "2015-05-26T19:46:03.530Z",
					"editor": "Havvy",
					"old-value": "learn some node.js basics thru bite sized exercises here: http://nodeschool.io/",
					"new-value": "Learn some node.js basics thru bite sized exercises here: http://nodeschool.io/",
					"regex": "s/^l/L/"
				}
			]
		},
		"snip choice": {
			"value": "This function takes an array or string, and returns a random item or character from it: function choice(xs){ return xs[Math.floor(Math.random() * xs.length)] }",
			"creator": "GreenJello",
			"date": "2014-01-24T22:16:12.045Z",
			"popularity": 8,
			"editors": [],
			"changes": []
		},
		"prototypes are not classes": {
			"value": "“Prototypes are not classes, and neither are constructor functions bundled with prototypes. They don’t encapsulate their private data, and they don’t have a metaclass object defining their behaviour. A prototype is to a class as a database record is to a model object.” — http://raganwald.com/2014/01/19/prototypes-are-not-classes.html",
			"creator": "Sorella",
			"date": "2014-01-24T23:08:58.576Z",
			"popularity": 7,
			"editors": [],
			"changes": []
		},
		"placehold": {
			"value": "Imaginary variables such as \"string\", \"number\", \"array\", \"object\", and \"element\" and the shorter str, num, arr, and obj are used in code examples.  They're not special variables; you should replace them with your own variables of that type. ",
			"creator": "GreenJello",
			"date": "2014-01-25T00:18:44.808Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"sort": {
			"value": "Array.prototype.sort sorts lexicographic (casting to string) by default. Pass a comparator function as the first arg if you want to sort otherwise (and without implicit casting).",
			"creator": "Havvy",
			"date": "2014-01-25T23:42:46.949Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"api over ajax": {
			"value": "It's best to not scatter AJAX calls around your code.  Instead create an API providing functions that indicate behavior.  Later you may create a version of this API that saves to a different medium, such as localStorage.",
			"creator": "GreenJello",
			"date": "2014-01-26T09:10:13.136Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"snip itar": {
			"value": "To loop over an array, you can use a for loop.  This will log each item in the array to the console: for (var i=0; i<array.length; i++){ var item = array[i];  console.log(item); }",
			"creator": "GreenJello",
			"date": "2014-01-26T09:56:41.615Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"grammar": {
			"value": "Take it to ##english",
			"creator": "Havvy",
			"date": "2014-01-27T05:43:33.273Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"works in fiddle": {
			"value": "It doesn't work normally, but you can't reproduce the problem?  That's a good indication that you can rule out any code in the fiddle as the problem.  ",
			"creator": "GreenJello",
			"date": "2014-01-30T07:02:55.767Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"rofl": {
			"value": "I'm serious.",
			"creator": "ashnur",
			"date": "2014-01-30T07:06:59.275Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"sicp": {
			"value": "interactive sicp:  http://xuanji.appspot.com/isicp/1-1-elements.html | pdf: https://github.com/sarabander/sicp-pdf/blob/master/sicp.pdf | html: http://sarabander.github.io/sicp/html/index.xhtml",
			"creator": "ashnur",
			"date": "2014-01-30T15:29:39.811Z",
			"popularity": 10,
			"editors": [
				"ashnur"
			],
			"changes": [
				{
					"date": "2014-01-30T15:33:00.784Z",
					"editor": "ashnur",
					"old-value": "interactive sicp:  http://xuanji.appspot.com/isicp/1-1-elements.html",
					"new-value": "interactive sicp:  http://xuanji.appspot.com/isicp/1-1-elements.html | pdf: https://github.com/sarabander/sicp-pdf/blob/master/sicp.pdf | html: http://sarabander.github.io/sicp/html/index.xhtml"
				}
			]
		},
		"panic": {
			"value": "\"Don't Panic.\" It's the first helpful or intelligible thing anybody's said to me all day.",
			"creator": "Maxdamantus",
			"date": "2014-02-02T04:38:41.248Z",
			"popularity": 7,
			"editors": [
				"sukima"
			],
			"changes": [
				{
					"date": "2014-02-02T04:46:09.152Z",
					"editor": "sukima",
					"old-value": "There is nothing to panic about but panicking itself.",
					"new-value": "\"Don't Panic.\" It's the first helpful or intelligible thing anybody's said to me all day."
				}
			]
		},
		"rule 1": {
			"value": "When learning JS, forget what you know about other languages; or you'll try to do things in very weird ways.",
			"creator": "GreenJello",
			"date": "2014-02-02T12:52:49.671Z",
			"popularity": 21,
			"editors": [],
			"changes": []
		},
		"rule 2": {
			"value": "Premature optimizations are responsible for the death of many projects.  Don't subject your project the disease.",
			"creator": "GreenJello",
			"date": "2014-02-02T12:53:39.874Z",
			"popularity": 13,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2014-04-20T02:19:36.019Z",
					"editor": "GreenJello",
					"old-value": "Premature optimizations are responsible for the death of many projects.  Don't subject your project the the disease.",
					"new-value": "Premature optimizations are responsible for the death of many projects.  Don't subject your project the disease."
				}
			]
		},
		"rule 3": {
			"value": "Rules suck.",
			"creator": "GreenJello",
			"date": "2014-02-02T13:01:08.715Z",
			"popularity": 11,
			"editors": [],
			"changes": []
		},
		"rule 4": {
			"value": "Are you still trying?",
			"creator": "GreenJello",
			"date": "2014-02-02T13:01:48.507Z",
			"popularity": 7,
			"editors": [
				"D[4]ni"
			],
			"changes": [
				{
					"date": "2014-02-02T13:02:09.664Z",
					"editor": "D[4]ni",
					"old-value": "That's all folks :-)",
					"new-value": "Are you still trying?"
				}
			]
		},
		"rule 5": {
			"value": "...really?",
			"creator": "D[4]ni",
			"date": "2014-02-02T13:03:00.907Z",
			"popularity": 5,
			"editors": [],
			"changes": []
		},
		"check console": {
			"value": "Check your console for errors.  Ctrl-Shift-J on Chrome, Ctrl-Shift-K on Firefox (Cmd-Option-J/K on Mac).  Chrome's developer tools are prefered.",
			"creator": "GreenJello",
			"date": "2014-02-09T21:00:12.442Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"this help": {
			"alias": "thishelp",
			"creator": "GreenJello",
			"date": "2014-02-13T21:55:15.004Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"mean": {
			"value": "MEAN (Mongo, Express, Angular, Node) is a boilerplate stack that provides a nice starting point for MongoDB, Node.js, Express, and AngularJS based applications. (http://mean.io)",
			"creator": "therealklanni",
			"date": "2014-02-13T23:01:23.411Z",
			"popularity": 13,
			"editors": [],
			"changes": []
		},
		"nodejs": {
			"alias": "node.js",
			"creator": "",
			"date": "2014-02-13T23:45:27.558Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"confuse": {
			"value": "You are talking about X, then about Y, then Z. You don't want our help; you are just thinking out loud…",
			"creator": "yansanmo",
			"date": "2014-02-18T04:30:50.795Z",
			"popularity": 3,
			"editors": [
				"yansanmo",
				"Agamemnus",
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-02-18T04:31:55.494Z",
					"editor": "yansanmo",
					"old-value": "you are talking about X, then about Y, then Z, then ...",
					"new-value": "you are talking about X, then about Y, then Z, you don't want our help, just thinking out loud"
				},
				{
					"date": "2014-02-18T04:32:49.942Z",
					"editor": "Agamemnus",
					"old-value": "you are talking about X, then about Y, then Z, you don't want our help, just thinking out loud",
					"new-value": "You are talking about X, then about Y, then Z. You don't want our help; you are just thinking out loud... but hey, that is useful sometimes, too."
				},
				{
					"date": "2014-08-10T23:31:26.061Z",
					"editor": "ljharb",
					"old-value": "You are talking about X, then about Y, then Z. You don't want our help; you are just thinking out loud... but hey, that is useful sometimes, too.",
					"new-value": "'You are talking about X, then about Y, then Z. You don't want our help; you are just thinking out loud…'"
				},
				{
					"date": "2014-10-20T19:49:39.764Z",
					"editor": "ljharb",
					"old-value": "'You are talking about X, then about Y, then Z. You don't want our help; you are just thinking out loud…'",
					"new-value": "You are talking about X, then about Y, then Z. You don't want our help; you are just thinking out loud…"
				}
			]
		},
		"made day": {
			"value": "Putting one more day in the \"made\" pile.",
			"creator": "GreenJello",
			"date": "2014-02-21T05:11:46.336Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"object keys": {
			"value": "To iterate over a object's keys, use something like: `Object.keys(foo).forEach(function (key) { foo[key]; });` See !es5 shim to add these to older browsers.",
			"creator": "ljharb",
			"date": "2014-02-22T08:30:03.179Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"completion value": {
			"value": "Every statement in JavaScript has what is known as a `completion value.` That value is printed to the console/REPL after a statement is executed. For some statements, such as `var` the completion value is always 'undefined' but for others, such as `if` and `for`, the completion value takes on the value of the last expression executed inside the statement.",
			"creator": "ImBcmDth",
			"date": "2014-02-23T06:02:13.338Z",
			"popularity": 7,
			"editors": [],
			"changes": []
		},
		"imbcmdth": {
			"alias": "completion value",
			"creator": "gkatsev",
			"date": "2014-02-23T06:05:56.991Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"array#map": {
			"value": ">> [1, 2, 3, 4].map(function(n) { return n * 3; }); // Array#map applies a function to each element in an array and returns a new array with the results. In this case, we double each number.",
			"creator": "dwcook",
			"date": "2014-02-23T07:26:54.979Z",
			"popularity": 14,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-03-22T04:26:05.811Z",
					"editor": "ljharb",
					"old-value": ">> [1, 2, 3, 4].map(function(n) { return n * 2; }); // Array#map applies a function to each element in an array and returns a new array with the results. In this case, we double each number.",
					"new-value": "[1, 2, 3, 4].map(function(n) { return n * 3; }); // Array#map applies a function to each element in an array and returns a new array with the results. In this case, we double each number."
				},
				{
					"date": "2014-03-22T04:26:14.006Z",
					"editor": "ljharb",
					"old-value": "[1, 2, 3, 4].map(function(n) { return n * 3; }); // Array#map applies a function to each element in an array and returns a new array with the results. In this case, we double each number.",
					"new-value": ">> [1, 2, 3, 4].map(function(n) { return n * 3; }); // Array#map applies a function to each element in an array and returns a new array with the results. In this case, we double each number."
				}
			]
		},
		"trolls": {
			"value": "Trolls have a host of psychological disorders. Don't hate them - pity them, for they are pathetic, and suffering. http://www.slate.com/articles/health_and_science/climate_desk/2014/02/internet_troll_personality_study_machiavellianism_narcissism_psychopathy.html",
			"creator": "ljharb",
			"date": "2014-02-23T20:13:25.545Z",
			"popularity": 35,
			"editors": [],
			"changes": []
		},
		"eof": {
			"value": "buzzzzzZZZZZZZZZZ!  Times up!  And the winner is.... none of you!  Better luck next time.",
			"creator": "GreenJello",
			"date": "2014-02-24T03:47:08.937Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"unit testing": {
			"value": "Jasmine is the most popular, which means the most plugins; Mocha has better async support; minimalists like tape and/or should",
			"creator": "GreenJello",
			"date": "2014-02-25T04:31:59.233Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"rule of 0s": {
			"value": "Some libraries *cough*jQuery*cough* always have several bug fix releases after the X.X.0 release.  It might be a good idea to not use any X.X.0 releases of those libraries.  There's probably a few bugs.",
			"creator": "GreenJello",
			"date": "2014-02-25T09:43:28.954Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"rule 6": {
			"value": "Don't spam the channel!",
			"creator": "GreenJello",
			"date": "2014-03-02T00:22:50.172Z",
			"popularity": 8,
			"editors": [],
			"changes": []
		},
		"insult": {
			"value": "'you are too strict!'",
			"creator": "ashnur",
			"date": "2014-03-02T18:49:59.474Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"iterable array": {
			"value": ">> Array.apply(null, Array(3)).map(function(n,i){ return i*i})",
			"creator": "ashnur",
			"date": "2014-03-07T13:59:15.925Z",
			"popularity": 4,
			"editors": [
				"ashnur"
			],
			"changes": [
				{
					"date": "2014-03-07T13:59:40.508Z",
					"editor": "ashnur",
					"old-value": ">> Array.apply(null, Array(3)).map(function(n){ return n*n})",
					"new-value": ">> Array.apply(null, Array(3)).map(function(n,i){ return i*i})"
				}
			]
		},
		"object.assign": {
			"value": "Using !es6 shim or https://www.npmjs.com/package/object.assign, you can do `Object.assign(target, source1, source2, sourceN)` for an elegant $.extend / _.extend replacement!",
			"creator": "ljharb",
			"date": "2014-03-12T00:25:52.075Z",
			"popularity": 26,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-04-10T17:54:36.718Z",
					"editor": "ljharb",
					"old-value": "Using !es6 shim, you can do [source1, source2, source3].reduce(Object.assign, target) for an elegant $.extend / _.extend replacement!",
					"new-value": "Using !es6 shim, you can do `Object.assign(target, source1, source2, sourceN)` for an elegant $.extend / _.extend replacement!"
				},
				{
					"date": "2015-01-07T21:03:08.992Z",
					"editor": "ljharb",
					"old-value": "Using !es6 shim, you can do `Object.assign(target, source1, source2, sourceN)` for an elegant $.extend / _.extend replacement!",
					"new-value": "Using !es6 shim or https://www.npmjs.com/package/object.assign, you can do `Object.assign(target, source1, source2, sourceN)` for an elegant $.extend / _.extend replacement!"
				}
			]
		},
		"jquery-like": {
			"value": "tirejs.com, zeptojs.com ... more here ...",
			"creator": "Agamemnus",
			"date": "2014-03-15T12:49:01.171Z",
			"popularity": 3,
			"editors": [
				"Agamemnus"
			],
			"changes": [
				{
					"date": "2014-03-15T12:50:41.782Z",
					"editor": "Agamemnus",
					"old-value": "http://tirejs.com/ , ... more here ...",
					"new-value": "tirejs.com, zeptojs.com ... more here ..."
				}
			]
		},
		"zero": {
			"value": "Zeros in Javascript: <http://zero.milosz.ca/>",
			"creator": "ljharb",
			"date": "2014-03-17T00:39:41.567Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"zeros": {
			"alias": "zero",
			"creator": "ljharb",
			"date": "2014-03-17T00:39:46.360Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"flatten": {
			"value": "function flatten(arr) { return arr.reduce(function (flat, toFlatten) { return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten); }, []); };",
			"creator": "ljharb",
			"date": "2014-03-19T16:33:51.897Z",
			"popularity": 48,
			"editors": [
				"ljharb",
				"SomeDude26"
			],
			"changes": [
				{
					"date": "2014-03-19T16:34:10.470Z",
					"editor": "ljharb",
					"old-value": ">> var flatten = function flatten(arr) { return arr.reduce(function (a, b) { return a.concat(b); }, []); };",
					"new-value": "|> var flatten = function flatten(arr) { return arr.reduce(function (a, b) { return a.concat(b); }, []); };"
				},
				{
					"date": "2015-01-28T11:14:31.024Z",
					"editor": "SomeDude26",
					"old-value": "|> var flatten = function flatten(arr) { return arr.reduce(function (a, b) { return a.concat(b); }, []); };",
					"new-value": "function flatten(arr) {"
				},
				{
					"date": "2015-01-28T11:15:45.009Z",
					"editor": "SomeDude26",
					"old-value": "function flatten(arr) {",
					"new-value": "function flatten(arr) { return arr.reduce(function (flat, toFlatten) { return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten); }, []); };"
				}
			]
		},
		"object.create": {
			"value": "The Object.create() method creates a new object with the specified prototype object and properties. (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create)",
			"creator": "therealklanni",
			"date": "2014-03-20T20:32:52.637Z",
			"popularity": 9,
			"editors": [],
			"changes": []
		},
		"showus": {
			"alias": "code",
			"creator": "yorick",
			"date": "2014-03-21T23:00:09.716Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"callback hell": {
			"alias": "callbackhell",
			"creator": "ljharb",
			"date": "2014-03-22T04:31:47.536Z",
			"popularity": 17,
			"editors": [],
			"changes": []
		},
		"factoid": {
			"alias": "usage",
			"creator": "ljharb",
			"date": "2014-03-22T04:37:27.813Z",
			"popularity": 23,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-03-22T04:38:05.364Z",
					"editor": "ljharb",
					"old-alias": "factoids",
					"new-alias": "usage"
				}
			]
		},
		">>": {
			"alias": "!>>",
			"creator": "ImBcmDth",
			"date": "2014-03-22T19:44:54.278Z",
			"popularity": 37,
			"editors": [],
			"changes": []
		},
		"dis guy": {
			"value": "<-- Can you believe this person's chutzpah!?",
			"creator": "ImBcmDth",
			"date": "2014-03-23T19:07:49.429Z",
			"popularity": 4,
			"editors": [
				"ImBcmDth"
			],
			"changes": [
				{
					"date": "2014-03-23T19:34:01.460Z",
					"editor": "ImBcmDth",
					"old-value": "<-- Can you believe the chutzpah of this person?",
					"new-value": "<-- Can you believe this person's chutzpah!?"
				}
			]
		},
		"==": {
			"alias": "comparisons",
			"creator": "",
			"date": "2014-03-23T23:44:47.732Z",
			"popularity": 92,
			"editors": [],
			"changes": []
		},
		"!=": {
			"alias": "comparisons",
			"creator": "",
			"date": "2014-03-23T23:45:06.238Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"=": {
			"alias": "comparisons",
			"creator": "",
			"date": "2014-03-23T23:49:10.518Z",
			"popularity": 10,
			"editors": [],
			"changes": []
		},
		"enumberable": {
			"value": "Enumerations of numbers.",
			"creator": "therealklanni",
			"date": "2014-03-24T17:20:30.214Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"interactives": {
			"value": "http://www.codecombat.com, http://www.codewars.com, http://www.codecademy.com, http://www.khanacademy.org, http://alexnisnevich.github.io/untrusted/",
			"creator": "Agamemnus",
			"date": "2014-04-01T06:56:32.071Z",
			"popularity": 214,
			"editors": [
				"Agamemnus"
			],
			"changes": [
				{
					"date": "2014-04-02T03:15:22.913Z",
					"editor": "Agamemnus",
					"old-value": "codecombat.com, codewars.com, codecademy.com, khanacademy.org",
					"new-value": "http://www.codecombat.com, http://www.codewars.com, http://www.codecademy.com, http://www.khanacademy.org"
				},
				{
					"date": "2014-06-03T08:38:55.610Z",
					"editor": "Agamemnus",
					"old-value": "http://www.codecombat.com, http://www.codewars.com, http://www.codecademy.com, http://www.khanacademy.org",
					"new-value": "http://www.codecombat.com, http://www.codewars.com, http://www.codecademy.com, http://www.khanacademy.org, http://alexnisnevich.github.io/untrusted/"
				}
			]
		},
		"nih": {
			"value": "NIH: Not Invented Here syndrome. Don't reinvent the wheel - find somebody else who's solved your problem, and use their solution. It's highly likely it's better than what you'd be able to come up with, and if not, you can submit patches to improve theirs!",
			"creator": "ljharb",
			"date": "2014-04-04T20:26:47.596Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"eich": {
			"alias": "semicolons",
			"creator": "j201",
			"date": "2014-04-04T21:55:26.299Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"class": {
			"value": "JavaScript does not have class-based inheritance (only a \"class\" keyword in ES6). Instead, it has constructor functions which initialize newly created objects that are linked to the object referred to by the constructor's \"prototype\" property. These instances point to the prototype and use it for fallback property lookup. See also: !classes, !inheritance",
			"creator": "ljharb",
			"date": "2014-04-06T06:46:03.054Z",
			"popularity": 79,
			"editors": [
				"ljharb",
				"xecycle",
				"Maxdamantus"
			],
			"changes": [
				{
					"date": "2014-04-06T06:46:24.400Z",
					"editor": "ljharb",
					"old-value": "JavaScript does not have class-based inheritance. Instead, it has constructor functions which initialize newly created objects that are linked to the constructor's prototype. These instances point to the prototype and use it for fallback property lookup.",
					"new-value": "JavaScript does not have class-based inheritance. Instead, it has constructor functions which initialize newly created objects that are linked to the constructor's prototype. These instances point to the prototype and use it for fallback property lookup. See also: !classes, !inheritance"
				},
				{
					"date": "2015-02-12T02:46:48.570Z",
					"editor": "xecycle",
					"old-value": "JavaScript does not have class-based inheritance. Instead, it has constructor functions which initialize newly created objects that are linked to the constructor's prototype. These instances point to the prototype and use it for fallback property lookup. See also: !classes, !inheritance",
					"new-value": "JavaScript has NO classes but a class keyword.  Attempts to using classes in Java style will fail.  See also !classes, !inheritance"
				},
				{
					"date": "2015-02-12T02:50:50.592Z",
					"editor": "xecycle",
					"old-value": "JavaScript has NO classes but a class keyword.  Attempts to using classes in Java style will fail.  See also !classes, !inheritance",
					"new-value": "JavaScript has NO classes, even with the class keyword introduced in ES6.  Attempts to using classes in Java style will fail.  See also !classes, !inheritance",
					"regex": "s/classes but a class keyword/classes, even with the class keyword introduced in ES6/"
				},
				{
					"date": "2015-02-12T02:53:40.454Z",
					"editor": "ljharb",
					"old-value": "JavaScript has NO classes, even with the class keyword introduced in ES6.  Attempts to using classes in Java style will fail.  See also !classes, !inheritance",
					"new-value": "JavaScript does not have class-based inheritance (only a \"class\" keyword in ES6). Instead, it has constructor functions which initialize newly created objects that are linked to the constructor's prototype. These instances point to the prototype and use it for fallback property lookup. See also: !classes, !inheritance"
				},
				{
					"date": "2018-11-16T13:22:51.620Z",
					"editor": "Maxdamantus",
					"old-value": "JavaScript does not have class-based inheritance (only a \"class\" keyword in ES6). Instead, it has constructor functions which initialize newly created objects that are linked to the constructor's prototype. These instances point to the prototype and use it for fallback property lookup. See also: !classes, !inheritance",
					"new-value": "JavaScript does not have class-based inheritance (only a \"class\" keyword in ES6). Instead, it has constructor functions which initialize newly created objects that are linked to the object referred to by the constructor's \"prototype\" property. These instances point to the prototype and use it for fallback property lookup. See also: !classes, !inheritance",
					"regex": "s/constructor's prototype/object referred to by the constructor's \"prototype\" property/"
				}
			]
		},
		"interactive": {
			"alias": "interactives",
			"creator": "therealklanni",
			"date": "2014-04-07T21:52:44.177Z",
			"popularity": 34,
			"editors": [],
			"changes": []
		},
		"fairy whispers": {
			"value": "Publish JavaScript, not fairy whispers. https://groups.google.com/d/msg/nodejs/GB3leHT7dHI/oX4ULcWlhfIJ",
			"creator": "ljharb",
			"date": "2014-04-08T07:35:38.870Z",
			"popularity": 11,
			"editors": [],
			"changes": []
		},
		"iteration loop": {
			"value": "Is an iteration a loop? No: https://gist.github.com/robotlolita/7643014",
			"creator": "ljharb",
			"date": "2014-04-09T01:41:39.911Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"dot": {
			"alias": "bracket access",
			"creator": "",
			"date": "2014-04-15T00:49:13.734Z",
			"popularity": 24,
			"editors": [],
			"changes": []
		},
		"amirite": {
			"value": "Yes.",
			"creator": "GreenJello",
			"date": "2014-04-15T22:11:10.143Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"wrong way": {
			"value": "You're trying to get data out of your html?  That seems a little backwards.  JavaScript has data, and the power to manipulate it.  HTML is a markup language, intended for displaying data.",
			"creator": "GreenJello",
			"date": "2014-04-16T01:47:18.065Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"extract": {
			"value": "extract({a: {b: {c: 5}}}, \"a.b.c\") gives 5 -- code: https://gist.github.com/brigand/8324917",
			"creator": "GreenJello",
			"date": "2014-04-16T01:56:21.939Z",
			"popularity": 17,
			"editors": [],
			"changes": []
		},
		"src new": {
			"value": "function new(constr, args){ var o = Object.create(constr.prototype), r = constr.apply(o, args); return r !== null && typeof r == \"object\"? r : o; }",
			"creator": "Maxdamantus",
			"date": "2014-04-16T23:59:42.112Z",
			"popularity": 7,
			"editors": [],
			"changes": []
		},
		"verbs": {
			"alias": "nouns",
			"creator": "ljharb",
			"date": "2014-04-19T21:18:38.096Z",
			"popularity": 17,
			"editors": [],
			"changes": []
		},
		"let's go": {
			"value": "!shoot em' in the back now",
			"creator": "Maxdamantus",
			"date": "2014-04-20T08:30:14.964Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"last if something is only being applied to the 'last' one of many, you have a scoping problem. e.g.: in for (i": {
			"value": "0; i<5; ++i) {doX(function(){ doY(i) })}; `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://www.mennovanslooten.nl/blog/post/62/",
			"creator": "yansanmo",
			"date": "2014-04-20T20:21:57.464Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"something": {
			"value": "just testing",
			"creator": "Qbix2",
			"date": "2014-04-24T00:16:06.374Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"!!": {
			"value": "convert to boolean",
			"creator": "Qbix2",
			"date": "2014-04-24T00:17:29.237Z",
			"popularity": 108,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2017-01-16T04:11:40.037Z",
					"editor": "graingert",
					"old-value": "I am supposed to say something compromising, because someone told me to when the channel was pretty quiet.",
					"new-value": "convert to boolean"
				}
			]
		},
		"es5-shim": {
			"value": "You can add most ES5 functionality to older (or modern non-compliant) browsers with https://github.com/es-shims/es5-shim/blob/master/es5-shim.js Even modern browsers (including latest Chrome) need it to be compliant!",
			"creator": "ashnur",
			"date": "2014-04-27T14:24:01.237Z",
			"popularity": 28,
			"editors": [
				"ashnur",
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-04-27T14:24:27.275Z",
					"editor": "ashnur",
					"old-value": "es5 shim",
					"new-value": "You can add most ES5 functionality to older (or modern non-compliant) browsers with https://github.com/es-shims/es5-shim/blob/master/es5-shim.js"
				},
				{
					"date": "2014-10-07T08:28:00.337Z",
					"editor": "ljharb",
					"old-value": "You can add most ES5 functionality to older (or modern non-compliant) browsers with https://github.com/es-shims/es5-shim/blob/master/es5-shim.js",
					"new-value": "You can add most ES5 functionality to older (or modern non-compliant) browsers with https://github.com/es-shims/es5-shim/blob/master/es5-shim.js Even modern browsers (including latest Chrome) need it to be compliant!"
				}
			]
		},
		"function": {
			"alias": "fe",
			"creator": "Sorella",
			"date": "2014-04-28T14:38:40.934Z",
			"popularity": 14,
			"editors": [],
			"changes": []
		},
		"async return": {
			"value": "Asynchronous functions generally can't return values — once you go async, it's async forever. Instead of returning a value from the callback function, accept a callback as a parameter and call it with the value you want to return. See also: !promises",
			"creator": "ljharb",
			"date": "2014-05-14T05:38:56.825Z",
			"popularity": 4,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-05-14T05:44:04.681Z",
					"editor": "ljharb",
					"old-value": "Asynchronous callbacks usually can't return values. Once you go callbacks, it's callbacks forever. One possible alternative: !promises",
					"new-value": "Asynchronous callbacks usually can't return values — once you go callbacks, it's callbacks forever. The most common is to call the callback with either an error, or `null` and the final value once the async operation completes (this is common in #node.js). See also: !promises"
				},
				{
					"date": "2014-05-14T05:47:22.500Z",
					"editor": "ljharb",
					"old-value": "Asynchronous callbacks usually can't return values — once you go callbacks, it's callbacks forever. The most common is to call the callback with either an error, or `null` and the final value once the async operation completes (this is common in #node.js). See also: !promises",
					"new-value": "Asynchronous functions generally can't return values — once you go async, it's async forever. Instead of returning a value from the callback function, accept a callback as a parameter and call it with the value you want to return. See also: !promises"
				}
			]
		},
		"point of promises": {
			"value": "You're missing the point of promises: \"The point of promises is to give us back functional composition and error bubbling in the async world.\" https://blog.domenic.me/youre-missing-the-point-of-promises/",
			"creator": "ljharb",
			"date": "2014-05-14T05:50:20.181Z",
			"popularity": 21,
			"editors": [
				"ljharb",
				"gkatsev"
			],
			"changes": [
				{
					"date": "2014-07-13T01:53:25.600Z",
					"editor": "ljharb",
					"old-value": "\"The point of promises is to give us back functional composition and error bubbling in the async world.\" https://gist.github.com/3889970",
					"new-value": "You're missing the point of promises: \"The point of promises is to give us back functional composition and error bubbling in the async world.\" https://gist.github.com/3889970"
				},
				{
					"date": "2015-10-11T06:21:52.317Z",
					"editor": "gkatsev",
					"old-value": "You're missing the point of promises: \"The point of promises is to give us back functional composition and error bubbling in the async world.\" https://gist.github.com/3889970",
					"new-value": "You're missing the point of promises: \"The point of promises is to give us back functional composition and error bubbling in the async world.\" https://blog.domenic.me/youre-missing-the-point-of-promises/",
					"regex": "s/https:\\/\\/gist.github.com\\/3889970/https:\\/\\/blog.domenic.me\\/youre-missing-the-point-of-promises\\//"
				}
			]
		},
		"mars code": {
			"value": "Gerard Holzmann  JPL Laboratory for Reliable Software  https://www.usenix.org/conference/hotdep12/workshop-program/presentation/holzmann",
			"creator": "ashnur",
			"date": "2014-05-17T23:11:15.038Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"fuckit": {
			"alias": "fuckitjs",
			"creator": "therealklanni",
			"date": "2014-05-22T19:49:23.773Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"es6bin": {
			"value": "Try \"some\" ES6 today! http://benvie.github.io/continuum/",
			"creator": "diamonds",
			"date": "2014-05-28T20:14:02.451Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"charts": {
			"value": "chart.js (http://www.chartjs.org/) meteorcharts (http://meteorcharts.com)",
			"creator": "Agamemnus",
			"date": "2014-05-29T03:51:52.653Z",
			"popularity": 21,
			"editors": [
				"Agamemnus"
			],
			"changes": [
				{
					"date": "2014-05-29T03:53:34.780Z",
					"editor": "Agamemnus",
					"old-value": "Highcharts, chart.js meteorcharts",
					"new-value": "chart.js (http://www.chartjs.org/) meteorcharts (http://meteorcharts.com)"
				}
			]
		},
		"use": {
			"value": "don't use me!",
			"creator": "Maxdamantus",
			"date": "2014-06-05T07:35:17.565Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"frameworks": {
			"value": "Check out http://todomvc.com/ for help deciding on a web framework.",
			"creator": "Agamemnus",
			"date": "2014-06-07T01:14:25.179Z",
			"popularity": 3,
			"editors": [
				"Agamemnus"
			],
			"changes": [
				{
					"date": "2014-06-07T01:14:35.979Z",
					"editor": "Agamemnus",
					"old-value": "Check out http://todomvc.com/ for help deciding on a web framework",
					"new-value": "Check out http://todomvc.com/ for help deciding on a web framework."
				}
			]
		},
		"google api": {
			"value": "Google APIs are very specific, and rarely get answered here.  StackOverflow is a good place to ask about them.",
			"creator": "GreenJello_",
			"date": "2014-06-18T03:40:27.436Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"gapi": {
			"value": "Google APIs are very specific, and rarely get answered here.  StackOverflow is a good place to ask about them.",
			"creator": "GreenJello_",
			"date": "2014-06-18T03:40:41.285Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"games": {
			"value": "#bbg is the main channel for JavaScript game development (browser based games)",
			"creator": "GreenJello",
			"date": "2014-06-27T23:09:52.134Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"carousel": {
			"value": "http://shouldiuseacarousel.com/",
			"creator": "j201",
			"date": "2014-07-16T00:39:33.537Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"php book": {
			"value": "Read \"PHP: The Good Parts\" http://i.imgur.com/Knuuz4w.png",
			"creator": "GreenJello",
			"date": "2014-07-24T22:38:06.628Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"idiomatic": {
			"value": "idiomatic is a popular style guide for JavaScript.  Unlike many style guides, it's flexible, but still enables other developers to read your code easily. https://github.com/rwaldron/idiomatic.js/",
			"creator": "GreenJello",
			"date": "2014-08-06T03:35:46.249Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"browser bugs": {
			"value": "Curious how well your favorite browser complies with ES5 & ES6? Check out https://cdn.rawgit.com/es-shims/es5-shim/master/tests/native.html and https://cdn.rawgit.com/es-shims/es6-shim/master/test/native.html & softly weep.",
			"creator": "ljharb",
			"date": "2014-08-08T05:55:25.259Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"snip qsa": {
			"value": "This snippet mimics jQuery syntax while being much lighter: function qsa(sel, parent){ return Array.prototype.slice.call((parent || document).querySelectorAll(sel)); }",
			"creator": "GreenJello",
			"date": "2014-08-13T09:56:31.939Z",
			"popularity": 21,
			"editors": [],
			"changes": []
		},
		"byod": {
			"value": "bring your own disaster http://strategy-madlibs.herokuapp.com/",
			"creator": "blackkbot",
			"date": "2014-08-16T10:07:48.652Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"es6-shim": {
			"alias": "es6 shim",
			"creator": "ljharb",
			"date": "2014-08-16T22:00:36.485Z",
			"popularity": 85,
			"editors": [],
			"changes": []
		},
		"range": {
			"value": "|> function range(start, end) { return Array.apply(Array, Array(end + 1 - start)).map(function (_, i) { return i + start; }); }",
			"creator": "ljharb",
			"date": "2014-08-17T12:05:59.180Z",
			"popularity": 167,
			"editors": [
				"qswz",
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-07-12T13:29:08.253Z",
					"editor": "qswz",
					"old-value": "|> function range(start, end) { return Array.apply(Array, Array(end + 1 - start)).map(function (_, i) { return i + start; }); }",
					"new-value": "(start,end,step=1)=> Array.from({length:Math.ceil((end-start)/step)}, (_,i)=>start+i*step)"
				},
				{
					"date": "2016-08-03T04:25:44.683Z",
					"editor": "ljharb",
					"old-value": "(start,end,step=1)=> Array.from({length:Math.ceil((end-start)/step)}, (_,i)=>start+i*step)",
					"new-value": "|> function range(start, end) { return Array.apply(Array, Array(end + 1 - start)).map(function (_, i) { return i + start; }); }"
				}
			]
		},
		"beginner": {
			"value": "http://webapplist.info/blog/development/html5-development/lets-build-an-html5-game-beginner-tutorial-part-1/",
			"creator": "Agamemnus",
			"date": "2014-08-17T20:08:26.079Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"plugins": {
			"value": "It's often unlikely someone who has used X plugin will see your message.  StackOverflow is a better medium for questions about plugins.",
			"creator": "GreenJello",
			"date": "2014-08-18T06:24:17.108Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"$ magic": {
			"value": "jQuery is magical, for example the $ function can be called in any of these ways, and more: $('.a'), $('.a', $(el)) $(el), $([el1, el2]), $({}), $($(el)), $('<div>'), $('<div>', document), $('<div>', {id: 'x'}), $(function(){})",
			"creator": "GreenJello",
			"date": "2014-08-20T21:39:11.541Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"( [morenoh149] foo": {
			"value": "bar | foo =~ s/expression/replace/gi )",
			"creator": "morenoh151",
			"date": "2014-08-25T08:24:02.915Z",
			"popularity": 0,
			"editors": [
				"morenoh151"
			],
			"changes": [
				{
					"date": "2014-08-25T08:25:04.936Z",
					"editor": "morenoh151",
					"old-value": "bar )",
					"new-value": "bar | foo =~ s/expression/replace/gi )"
				}
			]
		},
		"a": {
			"value": "5",
			"creator": "raypulver",
			"date": "2014-08-31T19:55:31.517Z",
			"popularity": 37,
			"editors": [],
			"changes": []
		},
		"smart": {
			"value": "http://www.catb.org/~esr/faqs/smart-questions.html",
			"creator": "ashnur",
			"date": "2014-09-06T16:19:41.273Z",
			"popularity": 16,
			"editors": [],
			"changes": []
		},
		"event loop": {
			"value": "https://nodesource.com/blog/understanding-the-nodejs-event-loop ; https://www.youtube.com/watch?v=8aGhZQkoFbQ ; https://www.youtube.com/watch?v=cCOL7MC4Pl0",
			"creator": "ashnur",
			"date": "2014-10-09T20:07:26.047Z",
			"popularity": 209,
			"editors": [
				"Havvy",
				"devsnek",
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-05-19T08:11:57.374Z",
					"editor": "Havvy",
					"old-value": "https://www.youtube.com/watch?v=8aGhZQkoFbQ Philip Roberts: What the heck is the event loop anyway? | JSConf EU 2014",
					"new-value": "https://nodesource.com/blog/understanding-the-nodejs-event-loop ; https://www.youtube.com/watch?v=8aGhZQkoFbQ Philip Roberts: What the heck is the event loop anyway? | JSConf EU 2014"
				},
				{
					"date": "2019-07-15T05:23:40.231Z",
					"editor": "devsnek",
					"old-value": "https://nodesource.com/blog/understanding-the-nodejs-event-loop ; https://www.youtube.com/watch?v=8aGhZQkoFbQ Philip Roberts: What the heck is the event loop anyway? | JSConf EU 2014",
					"new-value": "https://www.youtube.com/watch?v=cCOL7MC4Pl0"
				},
				{
					"date": "2019-07-30T02:26:10.001Z",
					"editor": "ljharb",
					"old-value": "https://www.youtube.com/watch?v=cCOL7MC4Pl0",
					"new-value": "https://nodesource.com/blog/understanding-the-nodejs-event-loop ; https://www.youtube.com/watch?v=8aGhZQkoFbQ ; https://www.youtube.com/watch?v=cCOL7MC4Pl0"
				}
			]
		},
		"animation": {
			"alias": "raf",
			"creator": "ljharb",
			"date": "2014-10-20T19:46:54.530Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"animations": {
			"alias": "raf",
			"creator": "ljharb",
			"date": "2014-10-20T19:47:05.243Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"onfoo": {
			"value": "Using \".onclick\", \".onchange\", or \"on\" anything is bad practice and results in poorly factored, hard-to-manage code; as well as limiting you to one event listener per event. Consider attaching your events with addEventListener, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener",
			"creator": "ljharb",
			"date": "2014-10-22T00:25:55.014Z",
			"popularity": 167,
			"editors": [
				"Havvy"
			],
			"changes": [
				{
					"date": "2015-04-29T04:44:54.984Z",
					"editor": "Havvy",
					"old-value": "Using \".onclick\", \".onchange\", or \"on\" anything is bad practice and results in poorly factored, hard-to-manage code; as well as limiting you to one event listener per event. Consider attaching your events with addEventListener, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener",
					"new-value": "Using \".onclick\", \".onchange\", or \"on\" anything is bad practice and results in poorly factored, hard-to-manage code; as well as limiting you to one event listener per event. Consider attaching your events with addEventListener, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener"
				}
			]
		},
		"optimisations": {
			"alias": "optimisation",
			"creator": "Sorella",
			"date": "2014-10-23T03:22:24.852Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"premature optimisation": {
			"alias": "premature optimization",
			"creator": "ljharb",
			"date": "2014-10-24T10:32:24.088Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"css ids": {
			"value": "http://oli.jp/2011/ids/, http://screwlewse.com/2010/07/dont-use-id-selectors-in-css/",
			"creator": "Agamemnus",
			"date": "2014-10-25T09:28:26.715Z",
			"popularity": 9,
			"editors": [
				"Agamemnus"
			],
			"changes": [
				{
					"date": "2014-10-25T09:32:08.951Z",
					"editor": "Agamemnus",
					"old-value": "http://oli.jp/2011/ids/",
					"new-value": "http://oli.jp/2011/ids/, http://screwlewse.com/2010/07/dont-use-id-selectors-in-css/"
				}
			]
		},
		"css id": {
			"alias": "css ids",
			"creator": "Agamemnus",
			"date": "2014-10-25T09:29:24.761Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"ids": {
			"alias": "css ids",
			"creator": "Agamemnus",
			"date": "2014-10-25T09:30:12.486Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"id": {
			"alias": "css ids",
			"creator": "Agamemnus",
			"date": "2014-10-25T09:30:16.900Z",
			"popularity": 5,
			"editors": [],
			"changes": []
		},
		"specificity": {
			"alias": "css ids",
			"creator": "Agamemnus",
			"date": "2014-10-25T09:30:44.224Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"naked ping": {
			"value": "Don't just `ping` someone but ping with some context. `someone: ping re: issue #123` rather than just `someone: ping`. http://blogs.gnome.org/markmc/2014/02/20/naked-pings/",
			"creator": "gkatsev",
			"date": "2014-10-28T00:07:51.936Z",
			"popularity": 46,
			"editors": [
				"ImBcmDth"
			],
			"changes": [
				{
					"date": "2014-11-02T04:59:02.968Z",
					"editor": "ImBcmDth",
					"old-value": "don't just `ping` someone but ping with some context. `someone: ping re: issue #123` rather than just `someone: ping`. http://blogs.gnome.org/markmc/2014/02/20/naked-pings/",
					"new-value": "Don't just `ping` someone but ping with some context. `someone: ping re: issue #123` rather than just `someone: ping`. http://blogs.gnome.org/markmc/2014/02/20/naked-pings/",
					"regex": "s/don't/Don't/"
				}
			]
		},
		"ping": {
			"alias": "naked ping",
			"creator": "gkatsev",
			"date": "2014-10-28T00:08:12.133Z",
			"popularity": 46,
			"editors": [],
			"changes": []
		},
		"coc": {
			"value": "The JSConf and #npm Codes of Conduct are good resources to understand how people should conduct themselves on this channel - < http://jsconf.com/codeofconduct.html > and < http://www.npmjs.com/policies/conduct/ >",
			"creator": "aeoril",
			"date": "2014-10-31T01:02:12.139Z",
			"popularity": 124,
			"editors": [
				"aeoril",
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-10-31T01:05:21.758Z",
					"editor": "aeoril",
					"old-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - < http://jsconf.com/codeofconduct.html > - < http://www.npmjs.com/policies/conduct/ >",
					"new-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - <http://jsconf.com/codeofconduct.html > - < http://www.npmjs.com/policies/conduct/ >",
					"regex": "s/< /</"
				},
				{
					"date": "2014-10-31T01:05:29.739Z",
					"editor": "aeoril",
					"old-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - <http://jsconf.com/codeofconduct.html > - < http://www.npmjs.com/policies/conduct/ >",
					"new-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - <http://jsconf.com/codeofconduct.html > - <http://www.npmjs.com/policies/conduct/ >",
					"regex": "s/< /</g"
				},
				{
					"date": "2014-10-31T01:05:43.549Z",
					"editor": "aeoril",
					"old-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - <http://jsconf.com/codeofconduct.html > - <http://www.npmjs.com/policies/conduct/ >",
					"new-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - <http://jsconf.com/codeofconduct.html> - <http://www.npmjs.com/policies/conduct/>",
					"regex": "s/ >/>/g"
				},
				{
					"date": "2014-10-31T01:06:20.556Z",
					"editor": "aeoril",
					"old-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - <http://jsconf.com/codeofconduct.html> - <http://www.npmjs.com/policies/conduct/>",
					"new-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - <http://jsconf.com/codeofconduct.html> and <http://www.npmjs.com/policies/conduct/>",
					"regex": "s/> - </> and </"
				},
				{
					"date": "2014-10-31T01:07:50.036Z",
					"editor": "aeoril",
					"old-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - <http://jsconf.com/codeofconduct.html> and <http://www.npmjs.com/policies/conduct/>",
					"new-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - < http://jsconf.com/codeofconduct.html> and < http://www.npmjs.com/policies/conduct/>",
					"regex": "s/</< /g"
				},
				{
					"date": "2014-10-31T01:07:58.148Z",
					"editor": "aeoril",
					"old-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - < http://jsconf.com/codeofconduct.html> and < http://www.npmjs.com/policies/conduct/>",
					"new-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - < http://jsconf.com/codeofconduct.html < and < http://www.npmjs.com/policies/conduct/ <",
					"regex": "s/>/ </g"
				},
				{
					"date": "2014-10-31T01:08:48.067Z",
					"editor": "aeoril",
					"old-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - < http://jsconf.com/codeofconduct.html < and < http://www.npmjs.com/policies/conduct/ <",
					"new-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - < http://jsconf.com/codeofconduct.html > and < http://www.npmjs.com/policies/conduct/ <",
					"regex": "s/html </html >/"
				},
				{
					"date": "2014-10-31T01:08:59.154Z",
					"editor": "ljharb",
					"old-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - < http://jsconf.com/codeofconduct.html > and < http://www.npmjs.com/policies/conduct/ <",
					"new-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - < http://jsconf.com/codeofconduct.html > and < http://www.npmjs.com/policies/conduct/ >"
				},
				{
					"date": "2014-11-02T11:36:26.380Z",
					"editor": "aeoril",
					"old-value": "The JSConf and #npm Codes of Conduct are good resources to understand best practices for conduct on this channel - < http://jsconf.com/codeofconduct.html > and < http://www.npmjs.com/policies/conduct/ >",
					"new-value": "The JSConf and #npm Codes of Conduct are good resources to understand how people should conduct themselves on this channel - < http://jsconf.com/codeofconduct.html > and < http://www.npmjs.com/policies/conduct/ >"
				}
			]
		},
		"conduct": {
			"alias": "coc",
			"creator": "ImBcmDth",
			"date": "2014-11-02T16:42:05.885Z",
			"popularity": 15,
			"editors": [],
			"changes": []
		},
		"reserved words": {
			"value": "Reserved keywords in JavaScript: https://mathiasbynens.be/notes/reserved-keywords",
			"creator": "ljharb",
			"date": "2014-11-06T09:44:57.790Z",
			"popularity": 3,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-11-06T09:45:05.159Z",
					"editor": "ljharb",
					"old-value": "https://mathiasbynens.be/notes/reserved-keywords",
					"new-value": "Reserved keywords in JavaScript: https://mathiasbynens.be/notes/reserved-keywords"
				}
			]
		},
		"tooling": {
			"value": "Front-end Tooling Workflows by Addy Osmani, https://speakerdeck.com/addyosmani/front-end-tooling-workflows",
			"creator": "falafel",
			"date": "2014-11-20T02:50:47.728Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"snip curry": {
			"value": "|>function curry(f){return function(a){return a=[].slice.call(arguments),a.length<f.length?f.bind.apply(f,[0].concat(a)):f.apply(0,a)}}",
			"creator": "falafel",
			"date": "2014-11-20T07:27:35.249Z",
			"popularity": 27,
			"editors": [
				"ImBcmDth",
				"falafel"
			],
			"changes": [
				{
					"date": "2014-11-20T07:30:48.284Z",
					"editor": "ImBcmDth",
					"old-value": "curry=function(f){return function(a){return a=[].slice.call(arguments),a.length<f.length?f.bind.apply(f,[0].concat(a)):f.apply(0,a)}}",
					"new-value": "|> curry=function(f){return function(a){return a=[].slice.call(arguments),a.length<f.length?f.bind.apply(f,[0].concat(a)):f.apply(0,a)}}",
					"regex": "s/^/|> /"
				},
				{
					"date": "2014-12-18T22:22:10.619Z",
					"editor": "falafel",
					"old-value": "|> curry=function(f){return function(a){return a=[].slice.call(arguments),a.length<f.length?f.bind.apply(f,[0].concat(a)):f.apply(0,a)}}",
					"new-value": "|>function curry(f){return function(a){return a=[].slice.call(arguments),a.length<f.length?f.bind.apply(f,[0].concat(a)):f.apply(0,a)}}"
				}
			]
		},
		"test221": {
			"value": "|>curry=function(f){return function(a){return a=[].slice.call(arguments),a.length<f.length?f.bind.apply(f,[0].concat(a)):f.apply(0,a)}}",
			"creator": "ImBcmDth",
			"date": "2014-11-20T07:29:16.337Z",
			"popularity": 5,
			"editors": [
				"ImBcmDth"
			],
			"changes": [
				{
					"date": "2014-11-20T07:29:40.224Z",
					"editor": "ImBcmDth",
					"old-value": "curry=function(f){return function(a){return a=[].slice.call(arguments),a.length<f.length?f.bind.apply(f,[0].concat(a)):f.apply(0,a)}}",
					"new-value": "|>curry=function(f){return function(a){return a=[].slice.call(arguments),a.length<f.length?f.bind.apply(f,[0].concat(a)):f.apply(0,a)}}",
					"regex": "s/^/|>/"
				}
			]
		},
		"perf": {
			"value": "Are you experiencing performance issues? Have you profiled your code? If not, then stop trying to preempt possibly non-existent performance issues and just keep writing code.",
			"creator": "seemikehack",
			"date": "2014-11-20T21:18:56.699Z",
			"popularity": 17,
			"editors": [],
			"changes": []
		},
		"replit": {
			"value": "If you want an online interactive editor with an easily accessible console and without the overhead of the DOM, try repl.it! http://repl.it/languages/JavaScript/ . For js + html + css (with a console still accessible right on the page, https://repl.it/languages/web_project )",
			"creator": "seemikehack",
			"date": "2014-11-20T21:39:28.907Z",
			"popularity": 9,
			"editors": [
				"seemikehack",
				"jaawerth"
			],
			"changes": [
				{
					"date": "2014-11-21T03:15:14.504Z",
					"editor": "seemikehack",
					"old-value": "If you want an interactive editor with an easily accessible console and without the overhead of the DOM, try repl.it! http://repl.it/languages/JavaScript/",
					"new-value": "If you want an online interactive editor with an easily accessible console and without the overhead of the DOM, try repl.it! http://repl.it/languages/JavaScript/"
				},
				{
					"date": "2018-04-04T04:38:33.242Z",
					"editor": "jaawerth",
					"old-value": "If you want an online interactive editor with an easily accessible console and without the overhead of the DOM, try repl.it! http://repl.it/languages/JavaScript/",
					"new-value": "If you want an online interactive editor with an easily accessible console and without the overhead of the DOM, try repl.it! http://repl.it/languages/JavaScript/ . For js + html + css (with a console still accessible right on the page, https://repl.it/languages/web_project )"
				}
			]
		},
		"timers": {
			"value": "A primer on JS timers, execution, and single-threadedness: http://ejohn.org/blog/how-javascript-timers-work/",
			"creator": "seemikehack",
			"date": "2014-11-21T18:42:40.007Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"chart": {
			"alias": "charts",
			"creator": "Agamemnus",
			"date": "2014-11-23T12:23:30.451Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"globals": {
			"value": "It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE and !modules",
			"creator": "therealklanni",
			"date": "2014-12-03T01:46:02.212Z",
			"popularity": 80,
			"editors": [
				"therealklanni",
				"ljharb",
				"XIIIIIN",
				"MJCD"
			],
			"changes": [
				{
					"date": "2014-12-03T01:47:06.593Z",
					"editor": "therealklanni",
					"old-value": "It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads).",
					"new-value": "It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE"
				},
				{
					"date": "2015-01-12T06:18:00.470Z",
					"editor": "ljharb",
					"old-value": "It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE",
					"new-value": "Globals: not even once! It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE"
				},
				{
					"date": "2016-12-12T02:54:38.391Z",
					"editor": "XIIIIIN",
					"old-value": "Globals: not even once! It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE",
					"new-value": "It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE and !modules"
				},
				{
					"date": "2016-12-12T02:55:22.221Z",
					"editor": "XIIIIIN",
					"old-value": "It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE and !modules",
					"new-value": "It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE and !modules and !avoid"
				},
				{
					"date": "2016-12-12T02:56:27.366Z",
					"editor": "XIIIIIN",
					"old-value": "It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE and !modules and !avoid",
					"new-value": "It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE and !modules and !best-practices"
				},
				{
					"date": "2016-12-12T10:23:14.779Z",
					"editor": "ljharb",
					"old-value": "It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE and !modules and !best-practices",
					"new-value": "Globals: not even once! It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE and !modules"
				},
				{
					"date": "2018-10-20T00:10:45.040Z",
					"editor": "MJCD",
					"old-value": "Globals: not even once! It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE and !modules",
					"new-value": "It's best to avoid global variables. As variables lose scope, they will be eligible for garbage collection. If they are scoped globally, then they will not be eligible for collection until the global namespace loses scope (e.g. when the page unloads). See also !IIFE and !modules"
				}
			]
		},
		"global": {
			"alias": "globals",
			"creator": "therealklanni",
			"date": "2014-12-03T01:46:16.936Z",
			"popularity": 29,
			"editors": [],
			"changes": []
		},
		"snip partial": {
			"value": "|>var _={},partial=function(e,t){t=[].slice.call(arguments,1);return function(n,i){n=t.concat([].slice.call(arguments)),i=n.length;while(i--)if(n[i]===_)n[i]=n.splice(-1)[0];return e.apply(0,n)}}",
			"creator": "falafel",
			"date": "2014-12-03T03:27:12.550Z",
			"popularity": 9,
			"editors": [
				"falafel"
			],
			"changes": [
				{
					"date": "2014-12-03T03:30:41.849Z",
					"editor": "falafel",
					"old-value": "var _={},partial=function(e,t){t=[].slice.call(arguments,1);return function(n){n=t.concat([].slice.call(arguments)),i=n.length;while(i--)if(n[i]===_)n[i]=n.splice(-1)[0];return e.apply(0,n)}}",
					"new-value": "|>var _={},partial=function(e,t){t=[].slice.call(arguments,1);return function(n){n=t.concat([].slice.call(arguments)),i=n.length;while(i--)if(n[i]===_)n[i]=n.splice(-1)[0];return e.apply(0,n)}}"
				},
				{
					"date": "2014-12-03T03:55:11.920Z",
					"editor": "falafel",
					"old-value": "|>var _={},partial=function(e,t){t=[].slice.call(arguments,1);return function(n){n=t.concat([].slice.call(arguments)),i=n.length;while(i--)if(n[i]===_)n[i]=n.splice(-1)[0];return e.apply(0,n)}}",
					"new-value": "|>var _={},partial=function(e,t){t=[].slice.call(arguments,1);return function(n,i){n=t.concat([].slice.call(arguments)),i=n.length;while(i--)if(n[i]===_)n[i]=n.splice(-1)[0];return e.apply(0,n)}}"
				}
			]
		},
		"trampoline": {
			"value": "A trampoline is a loop that iteratively invokes thunk-returning functions (continuation-passing style). Trampolined functions can be used to implement tail-recursive function calls in stack-oriented programming languages. See http://raganwald.com/2013/03/28/trampolines-in-javascript.html and http://pastie.org/9757419",
			"creator": "falafel",
			"date": "2014-12-03T04:01:39.098Z",
			"popularity": 6,
			"editors": [
				"falafel"
			],
			"changes": [
				{
					"date": "2014-12-03T04:03:18.675Z",
					"editor": "falafel",
					"old-value": "A trampoline is a loop that iteratively invokes thunk-returning functions (continuation-passing style). A single trampoline is sufficient to express all control transfers of a program. Converting a program to trampolined style is trampolining. Trampolined functions can be used to implement tail-recursive function calls in stack-oriented programming languages. http://raganwald.com/2013/03/28/trampolines-in",
					"new-value": "A trampoline is a loop that iteratively invokes thunk-returning functions (continuation-passing style). Trampolined functions can be used to implement tail-recursive function calls in stack-oriented programming languages. http://raganwald.com/2013/03/28/trampolines-in-javascript.html"
				},
				{
					"date": "2014-12-03T05:08:07.445Z",
					"editor": "falafel",
					"old-value": "A trampoline is a loop that iteratively invokes thunk-returning functions (continuation-passing style). Trampolined functions can be used to implement tail-recursive function calls in stack-oriented programming languages. http://raganwald.com/2013/03/28/trampolines-in-javascript.html",
					"new-value": "A trampoline is a loop that iteratively invokes thunk-returning functions (continuation-passing style). Trampolined functions can be used to implement tail-recursive function calls in stack-oriented programming languages. See http://raganwald.com/2013/03/28/trampolines-in-javascript.html and http://bit.ly/1tKJW0u and http://pastie.org/9757419"
				},
				{
					"date": "2014-12-03T05:08:20.707Z",
					"editor": "falafel",
					"old-value": "A trampoline is a loop that iteratively invokes thunk-returning functions (continuation-passing style). Trampolined functions can be used to implement tail-recursive function calls in stack-oriented programming languages. See http://raganwald.com/2013/03/28/trampolines-in-javascript.html and http://bit.ly/1tKJW0u and http://pastie.org/9757419",
					"new-value": "A trampoline is a loop that iteratively invokes thunk-returning functions (continuation-passing style). Trampolined functions can be used to implement tail-recursive function calls in stack-oriented programming languages. See http://raganwald.com/2013/03/28/trampolines-in-javascript.html and http://pastie.org/9757419"
				}
			]
		},
		"devtools": {
			"value": "Links to browser debugging tools documentation. Chrome: https://www.youtube.com/watch?v=kVSo4buDAEE https://developer.chrome.com/devtools/docs/tips-and-tricks Firefox: https://developer.mozilla.org/en-US/docs/Tools/Debugger",
			"creator": "joeytwiddle",
			"date": "2014-12-05T08:12:24.302Z",
			"popularity": 6,
			"editors": [
				"Agamemnus"
			],
			"changes": [
				{
					"date": "2014-12-05T09:27:40.770Z",
					"editor": "Agamemnus",
					"old-value": "Learn to use your browser's debugging tools! Chrome: https://www.youtube.com/watch?v=kVSo4buDAEE https://developer.chrome.com/devtools/docs/tips-and-tricks Firefox: https://developer.mozilla.org/en-US/docs/Tools/Debugger",
					"new-value": "Links to browser debugging tools documentation. Chrome: https://www.youtube.com/watch?v=kVSo4buDAEE https://developer.chrome.com/devtools/docs/tips-and-tricks Firefox: https://developer.mozilla.org/en-US/docs/Tools/Debugger"
				}
			]
		},
		"snip sequence promises": {
			"value": "function sequencePromises(fns,xs){var results=[];xs=xs||[];return fns.reduce(function(p,fn,i){return p.then(function(){return fn(xs[i]).then(function(x){results.push(x);return x})})},Promise.resolve()).then(function(){return results})}; // see http://jsfiddle.net/cko4gwoo/",
			"creator": "GreenJello",
			"date": "2014-12-06T19:55:42.345Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"snip compose": {
			"value": "|>function compose(){return[].reduce.call(arguments,function(f,g){return function(){return f(g.apply(null,arguments))}})}",
			"creator": "falafel",
			"date": "2014-12-09T19:55:24.693Z",
			"popularity": 7,
			"editors": [],
			"changes": []
		},
		"snip typeof": {
			"value": "|> function typeOf(x) { return Object.prototype.toString.call(x).slice(8,-1); }",
			"creator": "falafel",
			"date": "2014-12-10T02:07:01.582Z",
			"popularity": 7,
			"editors": [
				"falafel",
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-12-10T02:07:10.604Z",
					"editor": "falafel",
					"old-value": "function typeOf(x){return {}.toString.call(x).slice(8,-1)}",
					"new-value": "|>function typeOf(x){return {}.toString.call(x).slice(8,-1)}"
				},
				{
					"date": "2015-01-10T01:43:11.614Z",
					"editor": "ljharb",
					"old-value": "|>function typeOf(x){return {}.toString.call(x).slice(8,-1)}",
					"new-value": "|> function typeOf(x) { return Object.prototype.toString.call(x).slice(8,-1); }"
				}
			]
		},
		"tostring": {
			"value": ">> var x = { toString: function () { return NaN; }, valueOf: function () { return Infinity; }}; [x.toString(), x + '', String(x)] /* note that only the third item is both a string, and the toString value */",
			"creator": "ljharb",
			"date": "2014-12-13T03:23:31.641Z",
			"popularity": 61,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2014-12-14T08:36:56.692Z",
					"editor": "ljharb",
					"old-value": ">> var x = { toString: function () { return 3; }, valueOf: function () { return 4; }}; [x.toString(), x + '', String(x)]",
					"new-value": ">> var x = { toString: function () { return NaN; }, valueOf: function () { return Infinity; }}; [x.toString(), x + '', String(x)] /* note that only the third item is both a string, and the toString value */"
				}
			]
		},
		"snip ncurry": {
			"value": "|>function ncurry(a,b,c){return function(d){d=(c||[]).concat([].slice.call(arguments));return d.length<a?ncurry(a,b,d):b.apply(null,d)}}",
			"creator": "falafel",
			"date": "2014-12-18T22:21:01.934Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"modulepattern": {
			"value": "The module pattern is a *way* of using !closures, via an !iife, to achieve a semblance of \"private\" variables that the language doesn't natively support. See !module pattern",
			"creator": "ljharb",
			"date": "2014-12-24T07:31:36.699Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"purr": {
			"value": "AHHHHH... You just said the secret word!",
			"creator": "ImBcmDth",
			"date": "2014-12-29T00:56:15.032Z",
			"popularity": 10,
			"editors": [],
			"changes": []
		},
		"ydkjs": {
			"value": "You Don't Know Javascript - A free book series for intermediate-advanced skill levels (https://github.com/getify/You-Dont-Know-JS)",
			"creator": "bradleymeck",
			"date": "2014-12-29T21:10:32.401Z",
			"popularity": 76,
			"editors": [
				"ljharb",
				"Havvy",
				"MJCD"
			],
			"changes": [
				{
					"date": "2015-01-10T01:41:26.593Z",
					"editor": "ljharb",
					"old-value": "https://github.com/getify/You-Dont-Know-JS a journey into the stranger parts of Javascri",
					"new-value": "https://github.com/getify/You-Dont-Know-JS a journey into the stranger parts of Javascript"
				},
				{
					"date": "2016-07-05T16:23:16.021Z",
					"editor": "Havvy",
					"old-value": "https://github.com/getify/You-Dont-Know-JS a journey into the stranger parts of Javascript",
					"new-value": "You Don't Know Javascript - Free book series on Github (https://github.com/getify/You-Dont-Know-JS)"
				},
				{
					"date": "2019-09-10T14:28:35.850Z",
					"editor": "MJCD",
					"old-value": "You Don't Know Javascript - Free book series on Github (https://github.com/getify/You-Dont-Know-JS)",
					"new-value": "You Don't Know Javascript - A free book series for intermediate-advanced skill levels (https://github.com/getify/You-Dont-Know-JS)"
				}
			]
		},
		"snip deepclone": {
			"value": "|>function deepClone(o,i){i=Array.isArray(o)?[]:{};return Object.keys(o).reduce(function(a,k,x){return x=o[k],a[k]=typeof x==\\\"object\\\"?deepClone(x):x,a},i)};",
			"creator": "falafel",
			"date": "2014-12-30T23:01:31.175Z",
			"popularity": 33,
			"editors": [
				"MJCD",
				"ljharb"
			],
			"changes": [
				{
					"date": "2017-10-02T16:08:25.035Z",
					"editor": "MJCD",
					"old-value": "|>function deepClone(o,i){i=Array.isArray(o)?[]:{};return Object.keys(o).reduce(function(a,k,x){return x=o[k],a[k]=typeof x==\"object\"?deepClone(x):x,a},i)};",
					"new-value": "|> var deepClone = function (o) { return JSON.parse(JSON.stringify(o)); };"
				},
				{
					"date": "2017-10-04T21:56:01.364Z",
					"editor": "ljharb",
					"old-value": "|> var deepClone = function (o) { return JSON.parse(JSON.stringify(o)); };",
					"new-value": "|>function deepClone(o,i){i=Array.isArray(o)?[]:{};return Object.keys(o).reduce(function(a,k,x){return x=o[k],a[k]=typeof x==\\\"object\\\"?deepClone(x):x,a},i)};"
				}
			]
		},
		"values": {
			"value": ">> var values = function values(object) { return Object.keys(object).map(function (key) { return object[key]; }); }; values({ a: 1, b: 2 });",
			"creator": "ljharb",
			"date": "2015-01-02T19:50:15.960Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"↑↑↓↓←→←→ba": {
			"value": "You have gained 30 lives.",
			"creator": "gkatsev",
			"date": "2015-01-03T01:08:59.570Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"feelings": {
			"value": "\"Search your feelings; you know it to be true!\"",
			"creator": "gkatsev",
			"date": "2015-01-03T01:16:44.440Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"powers": {
			"value": "With your powers combined, I am Captain Planet!",
			"creator": "gkatsev",
			"date": "2015-01-03T01:18:22.310Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"assemble": {
			"value": "Form feet and legs; form arms and body; and I'll form.. the head!",
			"creator": "ImBcmDth",
			"date": "2015-01-03T01:29:24.730Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"abstraction": {
			"value": "an abstraction is something that captures the essential parts of the problem and its solution. See http://lambdatoast.com/programming/2014/09/20/the-point-of-abstraction.html",
			"creator": "Sorella",
			"date": "2015-01-06T19:25:34.888Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"es7-shim": {
			"value": "Add shimmable proposed ES7 functionality to browsers and node.js/io.js with https://www.npmjs.com/package/es7-shim !",
			"creator": "ljharb",
			"date": "2015-01-07T08:24:58.596Z",
			"popularity": 10,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-01-07T08:25:40.894Z",
					"editor": "ljharb",
					"old-value": "Add shimmable proposed ES7 functionality to browsers and node with https://www.npmjs.com/package/es7-shim !",
					"new-value": "Add shimmable proposed ES7 functionality to browsers and node.js/io.js with https://www.npmjs.com/package/es7-shim !"
				}
			]
		},
		"es7 shim": {
			"alias": "es7-shim",
			"creator": "ljharb",
			"date": "2015-01-07T08:27:27.138Z",
			"popularity": 10,
			"editors": [],
			"changes": []
		},
		"includes": {
			"value": "For Array.prototype.includes (formerly Array.prototype.contains), use https://www.npmjs.com/package/array-includes or !es7-shim",
			"creator": "ljharb",
			"date": "2015-01-07T08:28:27.122Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"badpastebin": {
			"value": "Don't use pastebin.com, Ads, Spamfilters, Captcha, Adds whitespace, Slow, Ugly, No comment/fork/annotate, Breaks copy/paste, Blocked for some people, etc. See !paste and !fiddle",
			"creator": "ashnur",
			"date": "2015-01-07T11:48:28.292Z",
			"popularity": 196,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2018-01-04T20:37:09.548Z",
					"editor": "graingert",
					"old-value": "Ads, Spamfilters, Captcha, Adds whitespace, Slow, Ugly, No comment/fork/annotate, Breaks copy/paste, Blocked for some people, etc. See !pastebin.com",
					"new-value": "Don't use pastebin.com, Ads, Spamfilters, Captcha, Adds whitespace, Slow, Ugly, No comment/fork/annotate, Breaks copy/paste, Blocked for some people, etc. See !pastebin.com"
				},
				{
					"date": "2018-08-29T21:27:27.840Z",
					"editor": "graingert",
					"old-value": "Don't use pastebin.com, Ads, Spamfilters, Captcha, Adds whitespace, Slow, Ugly, No comment/fork/annotate, Breaks copy/paste, Blocked for some people, etc. See !pastebin.com",
					"new-value": "Don't use pastebin.com, Ads, Spamfilters, Captcha, Adds whitespace, Slow, Ugly, No comment/fork/annotate, Breaks copy/paste, Blocked for some people, etc. See !paste and !fiddle"
				}
			]
		},
		"transpiler": {
			"value": "You mean compiler.  https://twitter.com/mraleph/status/471756991527124993",
			"creator": "GreenJello",
			"date": "2015-01-07T14:36:43.901Z",
			"popularity": 21,
			"editors": [
				"hipsterslapfight",
				"GreenJello",
				"ashnur",
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-01-07T14:37:05.049Z",
					"editor": "hipsterslapfight",
					"old-value": "The term transpiler in the context of JavaScript refers to the compilation of an other programming language to JavaScript, but mostly !altjs languages.",
					"new-value": "this word is wrong use compiler instead"
				},
				{
					"date": "2015-01-07T14:37:14.270Z",
					"editor": "GreenJello",
					"old-value": "this word is wrong use compiler instead",
					"new-value": "The term transpiler in the context of JavaScript refers to the compilation of an other programming language to JavaScript, but mostly !altjs languages."
				},
				{
					"date": "2015-01-07T14:38:08.394Z",
					"editor": "GreenJello",
					"old-value": "The term transpiler in the context of JavaScript refers to the compilation of an other programming language to JavaScript, but mostly !altjs languages.",
					"new-value": "The term transpiler in the context of JavaScript refers to the compilation of an other programming language to JavaScript, but mostly !altjs languages.  There are regular arguments about whether it's word or not, which is probably preceding or following this factoid."
				},
				{
					"date": "2015-01-07T14:39:33.762Z",
					"editor": "ashnur",
					"old-value": "The term transpiler in the context of JavaScript refers to the compilation of an other programming language to JavaScript, but mostly !altjs languages.  There are regular arguments about whether it's word or not, which is probably preceding or following this factoid.",
					"new-value": "You mean compiler. "
				},
				{
					"date": "2015-01-07T14:45:26.155Z",
					"editor": "ashnur",
					"old-value": "You mean compiler. ",
					"new-value": "You mean compiler.  https://twitter.com/mraleph/status/471756991527124993"
				},
				{
					"date": "2015-01-07T18:05:53.480Z",
					"editor": "ljharb",
					"old-value": "You mean compiler.  https://twitter.com/mraleph/status/471756991527124993",
					"new-value": "The term transpiler in the context of JavaScript refers to the compilation of an other programming language to JavaScript, but mostly !altJS languages.  There are regular arguments about whether it's word or not, which probably precede or follow this very factoid."
				},
				{
					"date": "2015-01-10T01:39:45.921Z",
					"editor": "ljharb",
					"old-value": "The term transpiler in the context of JavaScript refers to the compilation of an other programming language to JavaScript, but mostly !altJS languages.  There are regular arguments about whether it's word or not, which probably precede or follow this very factoid.",
					"new-value": "The term transpiler in the context of JavaScript refers to the compilation of another programming language to JavaScript, but mostly !altJS languages.  There are regular arguments about whether it's a word or not, which probably precede or follow this very factoid."
				},
				{
					"date": "2015-01-22T11:21:38.796Z",
					"editor": "ashnur",
					"old-value": "The term transpiler in the context of JavaScript refers to the compilation of another programming language to JavaScript, but mostly !altJS languages.  There are regular arguments about whether it's a word or not, which probably precede or follow this very factoid.",
					"new-value": "You mean compiler.  https://twitter.com/mraleph/status/471756991527124993"
				}
			]
		},
		"pronouns heladodebrownie": {
			"value": "they/them/their",
			"creator": "HeladoDeBrownie",
			"date": "2015-01-08T04:43:00.130Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"pronouns nak": {
			"value": "a female-gendered human being person. \"she\", \"her\", or \"naomi\" are acceptable when referring to me in the third person.",
			"creator": "nak",
			"date": "2015-01-08T04:43:32.859Z",
			"popularity": 0,
			"editors": [
				"nak"
			],
			"changes": [
				{
					"date": "2015-01-08T04:46:40.645Z",
					"editor": "nak",
					"old-value": "a female-gendered human being person",
					"new-value": "a female-gendered human being person. \"she\", \"her\", or \"naomi\" are acceptable when referring to me in the third person."
				}
			]
		},
		"pronouns": {
			"value": "Unless told otherwise, default to \"they\" and \"their\".",
			"creator": "Havvy",
			"date": "2015-01-08T04:48:26.687Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"snip flatten": {
			"value": "|> var flatten = Function.apply.bind(Array.prototype.concat, []) // also see !snip flatten-alt",
			"creator": "GreenJello",
			"date": "2015-01-08T11:52:56.016Z",
			"popularity": 25,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2015-01-08T11:53:53.987Z",
					"editor": "GreenJello",
					"old-value": "|> var flatten = Function.apply.bind(Array.prototype.concat, [])",
					"new-value": "|> var flatten = Function.apply.bind(Array.prototype.concat, []) // also see !snip flatten-alt"
				}
			]
		},
		"snip flatten-alt": {
			"value": "|> var flatten = function(xs){ return xs.reduce(function(acc, x){ return acc.concat(x) }, []) } // also see !snip flatten-alt-v (veridic)",
			"creator": "GreenJello",
			"date": "2015-01-08T11:54:40.776Z",
			"popularity": 13,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2015-01-08T11:54:52.483Z",
					"editor": "GreenJello",
					"old-value": "|> var flatten = function(xs){ return Array.prototype.reduce.call(xs, function(acc, x){ return acc.concat(x) }, []) }",
					"new-value": "|> var flatten = function(xs){ return Array.prototype.reduce.call(xs, function(acc, x){ return acc.concat(x) }, []) } // also see !snip flatten-alt-v"
				},
				{
					"date": "2015-01-08T11:56:33.311Z",
					"editor": "GreenJello",
					"old-value": "|> var flatten = function(xs){ return Array.prototype.reduce.call(xs, function(acc, x){ return acc.concat(x) }, []) } // also see !snip flatten-alt-v",
					"new-value": "|> var flatten = function(xs){ return xs.reduce(function(acc, x){ return acc.concat(x) }, []) }"
				},
				{
					"date": "2015-01-08T11:56:57.894Z",
					"editor": "GreenJello",
					"old-value": "|> var flatten = function(xs){ return xs.reduce(function(acc, x){ return acc.concat(x) }, []) }",
					"new-value": "|> var flatten = function(xs){ return xs.reduce(function(acc, x){ return acc.concat(x) }, []) } // also see !snip flatten-alt-v (veridic)"
				}
			]
		},
		"snip values": {
			"value": "|> var values = function values(object) { return Object.keys(object).map(function (key) { return object[key]; }); };",
			"creator": "ljharb",
			"date": "2015-01-10T01:41:13.739Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"dark pattern": {
			"value": "Dark Patterns are User Interfaces that are designed to trick people.",
			"creator": "Havvy",
			"date": "2015-01-10T04:20:05.646Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"security by obscurity": {
			"value": "A bad form of security. You're unlikely to get help implementing it in here.",
			"creator": "Havvy",
			"date": "2015-01-11T18:57:41.455Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"npm update": {
			"value": "Use `npm install` instead. `update` updates all dependencies to the latest, even when they conflict.",
			"creator": "Havvy",
			"date": "2015-01-12T07:05:02.900Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"update npm": {
			"value": "Stable: `npm install -g npm@latest` | Canary: `npm install -g npm@next`",
			"creator": "gkatsev",
			"date": "2015-01-12T07:06:04.615Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"whoami": {
			"alias": "about",
			"creator": "Havvy",
			"date": "2015-01-13T02:22:53.862Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"oftnbot": {
			"alias": "about",
			"creator": "Havvy",
			"date": "2015-01-13T02:23:16.610Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"tone": {
			"value": "Learn about \"tone arguments\" <http://geekfeminism.wikia.com/wiki/Tone_argument>",
			"creator": "ljharb",
			"date": "2015-01-14T01:29:49.701Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"argument": {
			"value": "xkcd: The Sake of Argument <http://xkcd.com/1432/>",
			"creator": "ljharb",
			"date": "2015-01-16T21:18:03.389Z",
			"popularity": 3,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-01-16T21:18:16.743Z",
					"editor": "ljharb",
					"old-value": "!g xkcd the sake of argument",
					"new-value": "xkcd: The Sake of Argument <http://xkcd.com/1432/>"
				}
			]
		},
		"gj-policy": {
			"value": "\"Hi, I'm GreenJello.  Please don't ask if you can ask something, don't pm me with questions, and if you repeat symbols or characters – e.g. 'whyy' or 'why??? ?' – I'll probably ignore you.  I'll help if I see your question, have a minute, and am able to help.\"",
			"creator": "GreenJello",
			"date": "2015-01-19T15:13:44.356Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"snip shuffle": {
			"value": "|>function shuffle(r){for(var f,n,o=r.length;o;f=Math.floor(Math.random()*o),n=r[--o],r[o]=r[f],r[f]=n);return r}",
			"creator": "falafel",
			"date": "2015-01-26T06:37:44.048Z",
			"popularity": 15,
			"editors": [],
			"changes": []
		},
		"deobfuscate": {
			"value": "Obfuscated JavaScript is code that has been transformed into a difficult to read format. To deobfuscate it you need to evaluate parts of it until you end up with the minified code. Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys. Just write it yourself… it's always easier.",
			"creator": "GreenJello",
			"date": "2015-01-26T07:06:14.355Z",
			"popularity": 2,
			"editors": [
				"GreenJello",
				"Agamemnus",
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-01-26T07:06:59.393Z",
					"editor": "GreenJello",
					"old-value": "Obfuscated JavaScript has been transformed into a difficult to read format.  To deobfuscate it you need to evaluate parts of it until you end up with the minified code.  Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys.  Just write it your self... it's always easier.",
					"new-value": "obfuscated JavaScript has been transformed into a difficult to read format.  To deobfuscate it you need to evaluate parts of it until you end up with the minified code.  Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys.  Just write it your self... it's always easier."
				},
				{
					"date": "2015-01-26T07:08:42.313Z",
					"editor": "Agamemnus",
					"old-value": "obfuscated JavaScript has been transformed into a difficult to read format.  To deobfuscate it you need to evaluate parts of it until you end up with the minified code.  Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys.  Just write it your self... it's always easier.",
					"new-value": "Obfuscated JavaScript is code that has been transformed into a difficult to read format.  To deobfuscate it you need to evaluate parts of it until you end up with the minified code.  Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys. Just write it your self... it's always easier."
				},
				{
					"date": "2015-01-26T07:09:17.368Z",
					"editor": "Agamemnus",
					"old-value": "Obfuscated JavaScript is code that has been transformed into a difficult to read format.  To deobfuscate it you need to evaluate parts of it until you end up with the minified code.  Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys. Just write it your self... it's always easier.",
					"new-value": "Obfuscated JavaScript is code that has been transformed into a difficult-to-read format. To deobfuscate it you need to evaluate parts of it until you end up with the minified code.  Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys. Just write it your self... it's always easier."
				},
				{
					"date": "2015-01-26T07:09:30.022Z",
					"editor": "Agamemnus",
					"old-value": "Obfuscated JavaScript is code that has been transformed into a difficult-to-read format. To deobfuscate it you need to evaluate parts of it until you end up with the minified code.  Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys. Just write it your self... it's always easier.",
					"new-value": "Obfuscated JavaScript is code that has been transformed into a difficult-to-read format. To deobfuscate it you need to evaluate parts of it until you end up with the minified code. Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys. Just write it your self... it's always easier."
				},
				{
					"date": "2015-01-26T07:20:04.071Z",
					"editor": "ljharb",
					"old-value": "Obfuscated JavaScript is code that has been transformed into a difficult-to-read format. To deobfuscate it you need to evaluate parts of it until you end up with the minified code. Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys. Just write it your self... it's always easier.",
					"new-value": "Obfuscated JavaScript is code that has been transformed into a difficult to read format. To deobfuscate it you need to evaluate parts of it until you end up with the minified code. Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys. Just write it"
				},
				{
					"date": "2015-01-26T07:21:19.784Z",
					"editor": "ljharb",
					"old-value": "Obfuscated JavaScript is code that has been transformed into a difficult to read format. To deobfuscate it you need to evaluate parts of it until you end up with the minified code. Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys. Just write it",
					"new-value": "Obfuscated JavaScript is code that has been transformed into a difficult to read format. To deobfuscate it you need to evaluate parts of it until you end up with the minified code. Minified code is still difficult to read, so you need to deminify it by moving code around and renaming variables, functions, and object keys. Just write it yourself… it's always easier.",
					"regex": "s/Just write it/Just write it yourself… it's always easier./"
				}
			]
		},
		"weather": {
			"value": "In this channel, it's snowing.",
			"creator": "Havvy",
			"date": "2015-01-27T03:52:14.155Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"literals": {
			"value": "Literals refers to when an Object, String, or Array (etc) are constructed using a literal syntax, i.e. `var foo = []`. More information: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Values,_variables,_and_literals",
			"creator": "therealklanni",
			"date": "2015-01-27T17:04:51.264Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"gfw": {
			"value": "sites blocked in China: pastebin.com, gist.github.com, everything-google(angular), facebook(react on jsfiddle), and more.  avoid them if pasting to a Chinese.",
			"creator": "xecycle",
			"date": "2015-01-28T04:25:39.633Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"considered harmful": {
			"value": "Programming considered harmful.",
			"creator": "Havvy",
			"date": "2015-01-30T05:54:57.731Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"how to tell someone they sound racist": {
			"value": "I don't care about who you are, I care about what you did. https://www.youtube.com/watch?v=b0Ti-gkJiXc ",
			"creator": "ljharb",
			"date": "2015-01-31T21:02:34.006Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"racist": {
			"alias": "how to tell someone they sound racist",
			"creator": "ljharb",
			"date": "2015-01-31T21:02:41.528Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"asm.js": {
			"value": "http://asmjs.org/",
			"creator": "Havvy",
			"date": "2015-02-01T15:31:44.207Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"loops": {
			"alias": "iteration",
			"creator": "ljharb",
			"date": "2015-02-12T04:31:36.893Z",
			"popularity": 226,
			"editors": [],
			"changes": []
		},
		"proto chain": {
			"value": "|> function getPrototypeChain(obj) { var chain = []; var proto = Object(obj); while (proto) { proto = Object.getPrototypeOf(proto); if (proto) { chain.push(proto); } } return chain; }",
			"creator": "ljharb",
			"date": "2015-02-12T05:22:17.743Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"jsdoc": {
			"value": "http://blog.fusioncharts.com/2013/12/jsdoc-vs-yuidoc-vs-doxx-vs-docco-choosing-a-javascript-documentation-generator/",
			"creator": "xecycle",
			"date": "2015-02-13T09:03:15.873Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"learning": {
			"value": "http://conceptf1.blogspot.com/2013/11/best-resources-to-learn-javascript.html",
			"creator": "Havvy",
			"date": "2015-02-15T07:49:44.196Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"inheritance summary": {
			"value": "JavaScript inheritance in as few words - http://www.reddit.com/r/javascript/comments/2vvox8/as_someone_new_to_prototypal_inheritance_should_i/colu4h0",
			"creator": "ljharb",
			"date": "2015-02-15T21:11:00.073Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"iterations": {
			"alias": "iteration",
			"creator": "ljharb",
			"date": "2015-02-17T22:54:23.253Z",
			"popularity": 105,
			"editors": [],
			"changes": []
		},
		"hof": {
			"value": "A higher-order function is a function that takes one or more functions as input, and/or outputs a function. See http://eloquentjavascript.net/05_higher_order.html",
			"creator": "falafel",
			"date": "2015-02-28T23:23:22.669Z",
			"popularity": 10,
			"editors": [
				"falafel"
			],
			"changes": [
				{
					"date": "2015-02-28T23:24:22.206Z",
					"editor": "falafel",
					"old-value": "A higher-order function is a function that takes one or more functions as input, or outputs a function. See http://eloquentjavascript.net/05_higher_order.html",
					"new-value": "A higher-order function is a function that takes one or more functions as input, and/or outputs a function. See http://eloquentjavascript.net/05_higher_order.html"
				}
			]
		},
		"run php": {
			"value": "The JavaScript engine can run nothing but JavaScript.  You can NOT run PHP from JavaScript; you can, however, issue HTTP requests to your PHP server using !ajax, and work on responses from your server.",
			"creator": "xecycle",
			"date": "2015-03-03T02:22:36.714Z",
			"popularity": 1,
			"editors": [
				"xecycle"
			],
			"changes": [
				{
					"date": "2015-03-03T02:27:08.021Z",
					"editor": "xecycle",
					"old-value": "The JavaScript engine can run nothing but JavaScript.  You can NOT run PHP from JavaScript; you can, however, issue HTTP requests to your PHP server using !ajax, and work on its results.",
					"new-value": "The JavaScript engine can run nothing but JavaScript.  You can NOT run PHP from JavaScript; you can, however, issue HTTP requests to your PHP server using !ajax, and work on responses from your server.",
					"regex": "s/its results/responses from your server/"
				}
			]
		},
		"operator precedence": {
			"value": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence",
			"creator": "xecycle",
			"date": "2015-03-04T02:18:43.233Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"enterprise": {
			"value": "Enterprise: on a continuing mission to explore strange new worlds, to seek out new life and civilizations, and to boldly go where no one has gone before",
			"creator": "ljharb",
			"date": "2015-03-26T02:48:31.312Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"generator": {
			"value": "Somebody make me!",
			"creator": "Havvy",
			"date": "2015-03-28T02:36:41.902Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"function*": {
			"alias": "generator",
			"creator": "Havvy",
			"date": "2015-03-28T02:36:49.861Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"function *": {
			"alias": "generator",
			"creator": "Havvy",
			"date": "2015-03-28T02:36:59.425Z",
			"popularity": 1,
			"editors": [
				""
			],
			"changes": [
				{
					"date": "2015-03-28T02:38:20.828Z",
					"editor": "",
					"old-alias": "generator",
					"new-alias": "generator"
				}
			]
		},
		"thick skin": {
			"value": "http://twitter.com/GynoStar/status/583100951432544256/photo/1",
			"creator": "ljharb",
			"date": "2015-04-06T19:13:23.080Z",
			"popularity": 16,
			"editors": [],
			"changes": []
		},
		"htdp": {
			"value": "http://www.ccs.neu.edu/home/matthias/HtDP2e/",
			"creator": "Havvy",
			"date": "2015-04-08T17:02:59.203Z",
			"popularity": 11,
			"editors": [],
			"changes": []
		},
		"need jquery": {
			"value": "you might need jquery: https://docs.google.com/document/d/1LPaPA30bLUB_publLIMF0RlhdnPx_ePXm7oW02iiT6o/edit",
			"creator": "ljharb",
			"date": "2015-04-10T10:13:48.942Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"java-": {
			"value": "Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster.",
			"creator": "Havvy",
			"date": "2015-04-10T18:21:15.309Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"colors": {
			"value": "http://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/ && http://raganwald.com/2015/03/12/symmetry.html",
			"creator": "Havvy",
			"date": "2015-04-14T04:29:43.502Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"async/await": {
			"value": "ES2017 introduces C#'s async/await syntax for dealing with asynchronous concurrency in JS that builds on top of promises and fully integrates with existing syntactical control structures like for loops, try catch, etc. See http://jakearchibald.com/2014/es7-async-functions/",
			"creator": "Sorella",
			"date": "2015-04-14T21:40:17.434Z",
			"popularity": 17,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2016-05-04T22:53:49.878Z",
					"editor": "Sorella",
					"old-value": "ECMAScript 7 introduces C#'s async/await syntax for dealing with asynchronous concurrency in JS that fully integrates with existing syntactical control structures. See http://jakearchibald.com/2014/es7-async-functions/",
					"new-value": "There's a  proposal for future ECMAScript versions to introduce C#'s async/await syntax for dealing with asynchronous concurrency in JS that fully integrates with existing syntactical control structures. See http://jakearchibald.com/2014/es7-async-functions/",
					"regex": "s/ECMAScript 7 introduces/There's a  proposal for future ECMAScript versions to introduce/"
				},
				{
					"date": "2016-08-20T06:20:42.027Z",
					"editor": "Sorella",
					"old-value": "There's a  proposal for future ECMAScript versions to introduce C#'s async/await syntax for dealing with asynchronous concurrency in JS that fully integrates with existing syntactical control structures. See http://jakearchibald.com/2014/es7-async-functions/",
					"new-value": "ES2017 introduces C#'s async/await syntax for dealing with asynchronous concurrency in JS that builds on top of promises and fully integrates with existing syntactical control structures like for loops, try catch, etc. See http://jakearchibald.com/2014/es7-async-functions/"
				}
			]
		},
		"communicating sequential processes": {
			"value": "CSP is a formal model of concurrency based on channels, natural parallelism/non-determinism and no IoC. It's the major concurrency model in the Go language and Clojure's core.async, but can be implemented in JS. See: http://jlongster.com/Taming-the-Asynchronous-Beast-with-CSP-in-JavaScript",
			"creator": "Sorella",
			"date": "2015-04-14T21:41:45.583Z",
			"popularity": 19,
			"editors": [],
			"changes": []
		},
		"concurrency": {
			"value": "There are lots of different ways of tackling concurrency in single-threaded JS VMs. !cps is the most widely used, but !promises are becoming fairly popular too (and built-in support is in ES6). See also ES7's !async/await, and !communicating sequential processes.",
			"creator": "Sorella",
			"date": "2015-04-14T21:42:08.412Z",
			"popularity": 9,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2015-08-20T13:23:34.200Z",
					"editor": "Sorella",
					"old-value": "There are lots of different ways of tackling concurrency in single-threaded JS VMs. !cps is the most widely used, but !promises are becoming fairly popular too (and built-in support is in ES6). See also ES7's !async/await and !communicating sequential processes.",
					"new-value": "There are lots of different ways of tackling concurrency in single-threaded JS VMs. !cps is the most widely used, but !promises are becoming fairly popular too (and built-in support is in ES6). See also ES7's !async/await, and !communicating sequential processes."
				}
			]
		},
		"sexist": {
			"value": "Learn about ways you might be unintentionally sexist: http://notapattern.net/2014/10/14/ways-men-in-tech-are-unintentionally-sexist/",
			"creator": "ljharb",
			"date": "2015-04-14T22:29:50.393Z",
			"popularity": 39,
			"editors": [],
			"changes": []
		},
		"primitive": {
			"value": "undefined, boolean, number, string, symbol",
			"creator": "Havvy",
			"date": "2015-04-15T07:47:44.567Z",
			"popularity": 7,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-04-15T07:47:59.993Z",
					"editor": "ljharb",
					"old-value": "undefined, boolean, number, string",
					"new-value": "undefined, boolean, number, string, symbol"
				}
			]
		},
		"primitives": {
			"alias": "primitive",
			"creator": "ljharb",
			"date": "2015-04-15T08:02:54.877Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"iife variations": {
			"value": "An IIFE (see !iife) must be written so that the first token in the statement isn't `function`, otherwise it will be interpreted as a function declaration (see !fd). (function() { ... }()), void function() { ... }(), !function() { ... }(), and +function() {...}() are all ways of doing this.",
			"creator": "j201",
			"date": "2015-04-17T00:15:10.749Z",
			"popularity": 3,
			"editors": [
				"Maxdamantus"
			],
			"changes": [
				{
					"date": "2015-04-17T00:18:47.076Z",
					"editor": "Maxdamantus",
					"old-value": "An IIFE (see !iife) must be written so that the first token in the statement isn't `function`, otherwise it will be interpreted as a function declaration (see !fd). (function() { ... })(), void function() { ... }(), !function() { ... }(), and +function() {...}() are all ways of doing this.",
					"new-value": "An IIFE (see !iife) must be written so that the first token in the statement isn't `function`, otherwise it will be interpreted as a function declaration (see !fd). (function() { ... }\\(\\)\\), void function() { ... }(), !function() { ... }(), and +function() {...}() are all ways of doing this.",
					"regex": "s/\\)\\(\\)/\\(\\)\\)/"
				},
				{
					"date": "2015-04-17T00:19:14.513Z",
					"editor": "Maxdamantus",
					"old-value": "An IIFE (see !iife) must be written so that the first token in the statement isn't `function`, otherwise it will be interpreted as a function declaration (see !fd). (function() { ... }\\(\\)\\), void function() { ... }(), !function() { ... }(), and +function() {...}() are all ways of doing this.",
					"new-value": "An IIFE (see !iife) must be written so that the first token in the statement isn't `function`, otherwise it will be interpreted as a function declaration (see !fd). (function() { ... }()), void function() { ... }(), !function() { ... }(), and +function() {...}() are all ways of doing this.",
					"regex": "s/\\\\\\(\\\\\\)\\\\\\)/())/"
				}
			]
		},
		"channels": {
			"alias": "communicating sequential processes",
			"creator": "sacho",
			"date": "2015-04-17T02:45:22.520Z",
			"popularity": 9,
			"editors": [],
			"changes": []
		},
		"fetch": {
			"value": "window.fetch - a standard way to make HTTP requests and get a Promise http://mdn.io/Using_Fetch. For older browsers (IE*) see !polyfill",
			"creator": "ljharb",
			"date": "2015-04-19T01:39:06.472Z",
			"popularity": 291,
			"editors": [
				"Havvy",
				"qswz",
				"MaxLeiter",
				"MJCD"
			],
			"changes": [
				{
					"date": "2015-05-19T15:58:11.153Z",
					"editor": "Havvy",
					"old-value": "window.fetch - a standard way to make ajax requests and get a Promise. Polyfill it with https://github.com/github/fetch",
					"new-value": "window.fetch - a standard way to make HTTP requests and get a Promise. Polyfill it with https://github.com/github/fetch",
					"regex": "s/ajax/HTTP/"
				},
				{
					"date": "2017-07-22T02:57:43.294Z",
					"editor": "qswz",
					"old-value": "window.fetch - a standard way to make HTTP requests and get a Promise. Polyfill it with https://github.com/github/fetch",
					"new-value": "window.fetch - a standard way to make HTTP requests and get a Promise. https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"
				},
				{
					"date": "2017-07-22T03:03:08.033Z",
					"editor": "MaxLeiter",
					"old-value": "window.fetch - a standard way to make HTTP requests and get a Promise. https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",
					"new-value": "window.fetch - a standard way to make HTTP requests and get a Promise. http://mdn.io/Using_Fetch For older browsers you can Polyfill it with https://github.com/github/fetch See http://mdn.io/fetch for browser support."
				},
				{
					"date": "2017-09-06T06:05:35.867Z",
					"editor": "MJCD",
					"old-value": "window.fetch - a standard way to make HTTP requests and get a Promise. http://mdn.io/Using_Fetch For older browsers you can Polyfill it with https://github.com/github/fetch See http://mdn.io/fetch for browser support.",
					"new-value": "window.fetch - a standard way to make HTTP requests and get a Promise. http://mdn.io/Using_Fetch For older browsers (IE*) you must include a Polyfill - https://github.com/github/fetch See http://mdn.io/fetch for browser support."
				},
				{
					"date": "2018-11-08T16:59:40.277Z",
					"editor": "qswz",
					"old-value": "window.fetch - a standard way to make HTTP requests and get a Promise. http://mdn.io/Using_Fetch For older browsers (IE*) you must include a Polyfill - https://github.com/github/fetch See http://mdn.io/fetch for browser support.",
					"new-value": "window.fetch - a standard way to make HTTP requests and get a Promise http://mdn.io/Using_Fetch. For older browsers (IE*) you must include a Polyfill - see !polyfill"
				},
				{
					"date": "2018-11-10T11:40:36.505Z",
					"editor": "qswz",
					"old-value": "window.fetch - a standard way to make HTTP requests and get a Promise http://mdn.io/Using_Fetch. For older browsers (IE*) you must include a Polyfill - see !polyfill",
					"new-value": "window.fetch - a standard way to make HTTP requests and get a Promise http://mdn.io/Using_Fetch. For older browsers (IE*) see !polyfill"
				}
			]
		},
		"array#find": {
			"value": "|> Array.prototype.find = function (pred) { var receiver = arguments.length > 1 ? arguments[1] : null; var found; this.some(function (v, i, a) { if (pred.call(receiver, v, i, a)) { found = v; return true; } }); return found; };",
			"creator": "ljharb",
			"date": "2015-04-19T08:42:18.140Z",
			"popularity": 3,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-04-19T08:43:55.219Z",
					"editor": "ljharb",
					"old-value": "|> Array.prototype.find = function (pred) { var found; this.some(function (v, i, a) { if (pred(v, i, a)) { found = v; return true; } }); return found; };",
					"new-value": "|> Array.prototype.find = function (pred) { var receiver = arguments.length > 1 ? arguments[1] : null; var found; this.some(function (v, i, a) { if (pred.call(receiver, v, i, a)) { found = v; return true; } }); return found; };"
				}
			]
		},
		"intentions": {
			"value": "Your intentions, however good, are irrelevant. http://blog.izs.me/post/117057399388",
			"creator": "ljharb",
			"date": "2015-04-22T05:23:41.855Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"proposal": {
			"value": "Read about the TC-39 process for changes to JavaScript here https://docs.google.com/document/d/1QbEE0BsO4lvl7NFTn5WXWeiEIBfaVUF7Dk0hpPpPDzU/edit",
			"creator": "GreenJello_",
			"date": "2015-04-25T17:06:42.986Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"easy": {
			"value": "Don't say something is \"easy,\" it only makes the person you're explaining it to feel stupid. If it's easy for you, it doesn't mean it's going to be easy for everyone. See also: http://menotninja.com/how-to-actually-mentor-somone.html",
			"creator": "Sorella",
			"date": "2015-04-25T22:43:49.865Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"loops are evil": {
			"value": "Loops fail to clearly signal the intention of your code, and as such should be avoided whenever possible (prefer higher-order functions, such as .map, .reduce, .filter, ...). See also: http://qr.ae/RNMEGA and https://gist.github.com/robotlolita/7643014",
			"creator": "Sorella",
			"date": "2015-04-28T16:42:32.510Z",
			"popularity": 153,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2015-07-21T16:06:21.532Z",
					"editor": "Sorella",
					"old-value": "https://gist.github.com/robotlolita/7643014",
					"new-value": "Loops fail to clearly signal the intention of your code, and as such should be avoided whenever possible (prefer higher-order functions, such as .map, .reduce, .filter, ...). See also: http://qr.ae/RNMEGA and https://gist.github.com/robotlolita/7643014"
				}
			]
		},
		"loop": {
			"alias": "iteration",
			"creator": "",
			"date": "2015-04-28T17:16:37.785Z",
			"popularity": 42,
			"editors": [],
			"changes": []
		},
		"underscore": {
			"value": "Prefer `lodash` to `underscore`. The owner of `underscore` doesn't follow SemVer and has made backwards-incompatible changes to it before releasing without discussing with other maintainers.",
			"creator": "Havvy",
			"date": "2015-04-30T21:05:26.067Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"number": {
			"alias": "numbers",
			"creator": "ljharb",
			"date": "2015-05-10T16:21:19.518Z",
			"popularity": 12,
			"editors": [],
			"changes": []
		},
		"callback ~": {
			"value": "/the.*$/something interesting happens./",
			"creator": "Maxdamantus",
			"date": "2015-05-16T00:23:21.845Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"esp": {
			"value": "Thanks. Now I know what you did last night.",
			"creator": "Maxdamantus",
			"date": "2015-05-16T00:32:19.586Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"io merge": {
			"value": "http://venturebeat.com/2015/05/13/node-project-spinoff-io-js-is-moving-to-the-node-js-foundation-with-a-merge-in-progress/",
			"creator": "Havvy",
			"date": "2015-05-17T01:57:51.222Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"functional": {
			"value": "An introduction to map/filter/reduce in JS, a subset of functional programming: http://cryto.net/~joepie91/blog/2015/05/04/functional-programming-in-javascript-map-filter-reduce/",
			"creator": "joepie91",
			"date": "2015-05-18T03:31:08.408Z",
			"popularity": 101,
			"editors": [],
			"changes": []
		},
		"promises in express": {
			"value": "http://cryto.net/~joepie91/blog/2015/05/14/using-promises-bluebird-with-express/",
			"creator": "joepie91",
			"date": "2015-05-18T04:29:02.786Z",
			"popularity": 61,
			"editors": [],
			"changes": []
		},
		"eventloop": {
			"alias": "event loop",
			"creator": "Havvy",
			"date": "2015-05-19T08:14:24.695Z",
			"popularity": 11,
			"editors": [],
			"changes": []
		},
		"authbind": {
			"value": "Never run Node.js as root! Use this instead: https://thomashunter.name/blog/using-authbind-with-node-js/",
			"creator": "joepie91",
			"date": "2015-05-19T13:09:33.829Z",
			"popularity": 55,
			"editors": [],
			"changes": []
		},
		"settimeout": {
			"alias": "timeout",
			"creator": "Havvy",
			"date": "2015-05-19T15:28:02.203Z",
			"popularity": 12,
			"editors": [],
			"changes": []
		},
		"bluebird": {
			"value": "A recommended promises module is bluebird; it is faster (in Node.js / v8 browsers) than `async`, or other promises modules, and offers many more features. ES6 promises (with a shim) can be used as a compact alternative in browsers. Start here: https://gist.github.com/joepie91/791640557e3e5fd80861",
			"creator": "Havvy",
			"date": "2015-05-19T15:36:27.356Z",
			"popularity": 146,
			"editors": [
				"joepie91",
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-05-22T20:05:21.613Z",
					"editor": "joepie91",
					"old-value": "The recommended promises module is bluebird; it is faster (in Node.js / v8 browsers) than `async` and other promises modules, and offers many more features. ES6 promises (with a shim) can be used as a compact alternative in browsers. Start here: https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them",
					"new-value": "The recommended promises module is bluebird; it is faster (in Node.js / v8 browsers) than `async` and other promises modules, and offers many more features. ES6 promises (with a shim) can be used as a compact alternative in browsers. Start here: https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them"
				},
				{
					"date": "2015-06-13T16:45:16.073Z",
					"editor": "ljharb",
					"old-value": "The recommended promises module is bluebird; it is faster (in Node.js / v8 browsers) than `async` and other promises modules, and offers many more features. ES6 promises (with a shim) can be used as a compact alternative in browsers. Start here: https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them",
					"new-value": "A recommended promises module is bluebird; it is faster (in Node.js / v8 browsers) than `async`, or other promises modules, and offers many more features. ES6 promises (with a shim) can be used as a compact alternative in browsers. Start here: https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them"
				},
				{
					"date": "2015-09-05T23:07:46.567Z",
					"editor": "joepie91",
					"old-value": "A recommended promises module is bluebird; it is faster (in Node.js / v8 browsers) than `async`, or other promises modules, and offers many more features. ES6 promises (with a shim) can be used as a compact alternative in browsers. Start here: https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them",
					"new-value": "A recommended promises module is bluebird; it is faster (in Node.js / v8 browsers) than `async`, or other promises modules, and offers many more features. ES6 promises (with a shim) can be used as a compact alternative in browsers. Start here: https://gist.github.com/joepie91/791640557e3e5fd80861"
				}
			]
		},
		"promise": {
			"alias": "promises",
			"creator": "Havvy",
			"date": "2015-05-19T15:36:42.839Z",
			"popularity": 81,
			"editors": [],
			"changes": []
		},
		"fetch +": {
			"value": ". See https://npmjs.org/package/node-fetch for usage on Node.js.",
			"creator": "Havvy",
			"date": "2015-05-19T15:57:59.129Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"exists": {
			"value": "You should almost never use fs.exists or fs.existsSync - they're prone to race conditions, and will cause bugs. Just use readFile/createReadStream if you want to a read a file, and handle the error if it doesn't exist - or if you want to write to a file, use writeFile/createWriteStream with an 'x' mode. Read more here: https://gist.github.com/joepie91/bbf495e044da043de2ba",
			"creator": "joepie91",
			"date": "2015-05-20T08:40:19.006Z",
			"popularity": 12,
			"editors": [
				"joepie91"
			],
			"changes": [
				{
					"date": "2015-09-06T20:41:05.003Z",
					"editor": "joepie91",
					"old-value": "You should almost never use fs.exists or fs.existsSync - they're prone to race conditions, and will cause bugs. Just use readFile/createReadStream if you want to a read a file, and handle the error if it doesn't exist - or if you want to write to a file, use writeFile/createWriteStream with an 'x' mode: https://nodejs.org/api/fs.html#fs_fs_open_path_flags_mode_callback",
					"new-value": "You should almost never use fs.exists or fs.existsSync - they're prone to race conditions, and will cause bugs. Just use readFile/createReadStream if you want to a read a file, and handle the error if it doesn't exist - or if you want to write to a file, use writeFile/createWriteStream with an 'x' mode. Read more here: https://gist.github.com/joepie91/bbf495e044da043de2ba"
				}
			]
		},
		"graph": {
			"value": "There are many graphing libraries in JS. Three popular options in order from easy to flexible: chart.js, highcharts, d3",
			"creator": "GreenJello",
			"date": "2015-05-22T18:44:29.680Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"babel": {
			"value": "The compiler for next generation JavaScript. Babel is a JavaScript transpiler. Use next generation JavaScript, today. https://babeljs.io/",
			"creator": "Havvy",
			"date": "2015-05-24T16:16:02.462Z",
			"popularity": 102,
			"editors": [
				"ljharb",
				"graingert"
			],
			"changes": [
				{
					"date": "2015-11-15T21:55:11.638Z",
					"editor": "ljharb",
					"old-value": "https://babeljs.io/ - ES6/ES7/More to ES5 Compiler",
					"new-value": "https://babeljs.io/ - ES6/ES7/More to ES5 Compiler/Transpiler"
				},
				{
					"date": "2019-02-14T20:30:07.032Z",
					"editor": "graingert",
					"old-value": "https://babeljs.io/ - ES6/ES7/More to ES5 Compiler/Transpiler",
					"new-value": "The compiler for next generation JavaScript. Babel is a JavaScript compiler. Use next generation JavaScript, today."
				},
				{
					"date": "2019-02-14T20:30:21.403Z",
					"editor": "graingert",
					"old-value": "The compiler for next generation JavaScript. Babel is a JavaScript compiler. Use next generation JavaScript, today.",
					"new-value": "The compiler for next generation JavaScript. Babel is a JavaScript compiler. Use next generation JavaScript, today. https://babeljs.io/"
				},
				{
					"date": "2019-03-18T11:41:00.413Z",
					"editor": "ljharb",
					"old-value": "The compiler for next generation JavaScript. Babel is a JavaScript compiler. Use next generation JavaScript, today. https://babeljs.io/",
					"new-value": "The compiler for next generation JavaScript. Babel is a JavaScript transpiler. Use next generation JavaScript, today. https://babeljs.io/"
				}
			]
		},
		"skunk term": {
			"value": "A word that has different meanings to different people. You're liable to cause confusion if you use it.",
			"creator": "Havvy",
			"date": "2015-05-26T04:43:33.813Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"no coffeescript": {
			"value": "https://donatstudios.com/CoffeeScript-Madness",
			"creator": "Havvy",
			"date": "2015-05-27T15:15:06.061Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"kangax": {
			"value": "ES5,ES6/ES2015,ES2016-ES2020 (ES2015 was formerly known as ES6) and proposal support tables: http://kangax.github.io/compat-table/",
			"creator": "deltab",
			"date": "2015-05-29T06:32:46.551Z",
			"popularity": 66,
			"editors": [
				"samsch",
				"jaawerth"
			],
			"changes": [
				{
					"date": "2017-04-08T17:53:45.296Z",
					"editor": "samsch",
					"old-value": "ES5/6/7 support tables: http://kangax.github.io/compat-table/",
					"new-value": "ES5/ES2015/2016/2017 (ES2015 was formerly known as ES6) and proposal support tables: http://kangax.github.io/compat-table/"
				},
				{
					"date": "2019-09-07T22:48:32.360Z",
					"editor": "jaawerth",
					"old-value": "ES5/ES2015/2016/2017 (ES2015 was formerly known as ES6) and proposal support tables: http://kangax.github.io/compat-table/",
					"new-value": "ES5,ES6/ES2015,ES2016-ES2020 (ES2015 was formerly known as ES6) and proposal support tables: http://kangax.github.io/compat-table/"
				}
			]
		},
		"no onclick": {
			"alias": "inline",
			"creator": "",
			"date": "2015-05-29T07:34:58.415Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"no inline": {
			"alias": "inline",
			"creator": "Havvy",
			"date": "2015-05-29T07:35:18.853Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"no setinterval": {
			"alias": "setinterval",
			"creator": "Havvy",
			"date": "2015-05-29T07:36:21.872Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"mod": {
			"value": "JavaScript does not have a modulus operator. `%` is \"remainder\". https://web.archive.org/web/20171212212850/http://www.sitecrafting.com/blog/modulus-remainder/",
			"creator": "ljharb",
			"date": "2015-06-02T20:19:35.561Z",
			"popularity": 31,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2018-06-26T20:48:28.947Z",
					"editor": "ljharb",
					"old-value": "JavaScript does not have a modulus operator. `%` is \"remainder\". http://www.sitecrafting.com/blog/modulus-remainder/",
					"new-value": "JavaScript does not have a modulus operator. `%` is \"remainder\". https://web.archive.org/web/20171212212850/http://www.sitecrafting.com/blog/modulus-remainder/"
				}
			]
		},
		"modulo": {
			"alias": "mod",
			"creator": "ljharb",
			"date": "2015-06-02T20:19:41.012Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"modulus": {
			"alias": "mod",
			"creator": "ljharb",
			"date": "2015-06-02T20:19:42.989Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"%": {
			"alias": "mod",
			"creator": "ljharb",
			"date": "2015-06-02T20:19:50.619Z",
			"popularity": 5,
			"editors": [],
			"changes": []
		},
		"android slowness": {
			"value": "Use translateZ(0) in your CSS to avoid double-sided SLOW elements in a phone context.",
			"creator": "Agamemnus",
			"date": "2015-06-06T03:05:41.326Z",
			"popularity": 3,
			"editors": [
				"Agamemnus"
			],
			"changes": [
				{
					"date": "2015-06-06T03:15:34.708Z",
					"editor": "Agamemnus",
					"old-value": "translateZ(0)",
					"new-value": "Use translateZ(0) in your CSS to avoid double-sided SLOW elements in a phone context."
				}
			]
		},
		"slow android": {
			"alias": "android slowness",
			"creator": "Agamemnus",
			"date": "2015-06-06T03:10:15.408Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"android help": {
			"alias": "android slowness",
			"creator": "Agamemnus",
			"date": "2015-06-06T03:10:39.314Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"android": {
			"alias": "android slowness",
			"creator": "Agamemnus",
			"date": "2015-06-06T03:10:50.442Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"phones": {
			"alias": "android slowness",
			"creator": "Agamemnus",
			"date": "2015-06-06T03:10:59.943Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"phone": {
			"alias": "android slowness",
			"creator": "Agamemnus",
			"date": "2015-06-06T03:11:19.564Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"nexttick": {
			"value": "process.nextTick and setImmediate are not the same! This explains the difference: https://gist.github.com/danmactough/8190476",
			"creator": "joepie91",
			"date": "2015-06-06T08:01:20.745Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"setimmediate": {
			"alias": "nexttick",
			"creator": "joepie91",
			"date": "2015-06-06T08:02:21.470Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"sync": {
			"value": "Do not use any methods ending in *Sync! These will block your *entire* event loop, meaning your application can't do anything else in the meantime. Not just for the same request or user, but nothing at all!",
			"creator": "joepie91",
			"date": "2015-06-07T09:54:15.378Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"errno": {
			"value": "These are some of the common errors you may encounter when using the Node.js core library: http://man7.org/linux/man-pages/man3/errno.3.html - they're set as the 'name' property of the Error object.",
			"creator": "joepie91",
			"date": "2015-06-07T09:56:18.034Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"jquery vs javascript": {
			"value": "jQuery is a Javascript library.",
			"creator": "Agamemnus",
			"date": "2015-06-12T05:39:46.636Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"--harmony": {
			"value": "The `--harmony` node flag is for UNSTABLE, BROKEN features, and should never be used in production. Use `--es-staging` if you want to *test* the next batch of stable features, or !babel to transpile, for production.",
			"creator": "ljharb",
			"date": "2015-06-12T15:46:01.218Z",
			"popularity": 90,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-07-25T07:59:01.168Z",
					"editor": "ljharb",
					"old-value": "The `--harmony` node flag is for UNSTABLE, BROKEN features, and should never be used in production. Use `--es-staging` if you want the next batch of stable features, or !babel to transpile.",
					"new-value": "The `--harmony` node flag is for UNSTABLE, BROKEN features, and should never be used in production. Use `--es-staging` if you want to *test* the next batch of stable features, or !babel to transpile, for production."
				}
			]
		},
		"--es-staging": {
			"alias": "--harmony",
			"creator": "ljharb",
			"date": "2015-06-12T15:46:05.802Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"es6-paws": {
			"value": "Minimalist examples of ES6 functionalities http://git.io/es6-paws",
			"creator": "GreenJello",
			"date": "2015-06-14T05:37:53.119Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"es7-features": {
			"value": "http://git.io/es7",
			"creator": "howdoi",
			"date": "2015-06-14T05:39:26.114Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"es7": {
			"value": "Published in June 2016. For ES7/ES2016 features see http://www.ecma-international.org/ecma-262/7.0/ . To experiment with ES2016 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es2016plus/",
			"creator": "howdoi",
			"date": "2015-06-14T05:42:07.598Z",
			"popularity": 14,
			"editors": [
				"Havvy",
				"ljharb",
				"GreenJello",
				"graingert"
			],
			"changes": [
				{
					"date": "2016-05-10T23:24:11.186Z",
					"editor": "Havvy",
					"old-value": "http://git.io/es7",
					"new-value": "The only features added in ES7 are the exponentiation operator (**) and Array.prototype.includes"
				},
				{
					"date": "2016-07-06T04:44:32.864Z",
					"editor": "ljharb",
					"old-value": "The only features added in ES7 are the exponentiation operator (**) and Array.prototype.includes",
					"new-value": "The latest version of JavaScript, published in June 2016. For ES7/ES2016 features see http://www.ecma-international.org/ecma-262/7.0/ . To experiment with ES2016 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es2016plus/"
				},
				{
					"date": "2017-09-10T11:47:48.312Z",
					"editor": "GreenJello",
					"old-value": "The latest version of JavaScript, published in June 2016. For ES7/ES2016 features see http://www.ecma-international.org/ecma-262/7.0/ . To experiment with ES2016 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es2016plus/",
					"new-value": "The latest version of JavaScript, published in June 2016. For ES7/ES2016 features see http://www.ecma-international.org/ecma-262/7.0/ . To experiment with ES2016 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es2016plus/"
				},
				{
					"date": "2017-09-12T12:10:55.747Z",
					"editor": "graingert",
					"old-value": "The latest version of JavaScript, published in June 2016. For ES7/ES2016 features see http://www.ecma-international.org/ecma-262/7.0/ . To experiment with ES2016 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es2016plus/",
					"new-value": "Published in June 2016. For ES7/ES2016 features see http://www.ecma-international.org/ecma-262/7.0/ . To experiment with ES2016 now see http://babeljs.io/repl . For availability in browsers see http://kangax.github.io/compat-table/es2016plus/"
				}
			]
		},
		"es2015": {
			"alias": "es6",
			"creator": "ljharb",
			"date": "2015-06-17T18:35:38.670Z",
			"popularity": 7,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-07-06T04:44:42.099Z",
					"editor": "ljharb",
					"old-alias": "es6",
					"new-alias": "es6"
				}
			]
		},
		"vi vi vi": {
			"value": "6 6 6",
			"creator": "Maxdamantus",
			"date": "2015-06-18T03:05:35.581Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"wasm": {
			"value": "WebAssembly is a binary AST format that will allow efficient compilation to web. Will WebAssembly kill JS? No. It was never designed for that. For details, see: http://www.quora.com/Will-WebAssembly-make-JavaScript-skills-more-or-less-valuable-in-the-future/answer/Quildreen-Motta",
			"creator": "Sorella",
			"date": "2015-06-26T17:34:34.477Z",
			"popularity": 31,
			"editors": [
				"bradleymeck",
				"Sorella"
			],
			"changes": [
				{
					"date": "2015-06-26T17:36:49.994Z",
					"editor": "bradleymeck",
					"old-value": "WebAssembly is a binary bytecode format that will allow efficient compilation to web. Will WebAssembly kill JS? See: http://www.quora.com/Will-WebAssembly-make-JavaScript-skills-more-or-less-valuable-in-the-future/answer/Quildreen-Motta",
					"new-value": "WebAssembly is a binary AST format that will allow efficient compilation to web. Will WebAssembly kill JS? See: http://www.quora.com/Will-WebAssembly-make-JavaScript-skills-more-or-less-valuable-in-the-future/answer/Quildreen-Motta"
				},
				{
					"date": "2016-06-20T04:42:02.418Z",
					"editor": "Sorella",
					"old-value": "WebAssembly is a binary AST format that will allow efficient compilation to web. Will WebAssembly kill JS? See: http://www.quora.com/Will-WebAssembly-make-JavaScript-skills-more-or-less-valuable-in-the-future/answer/Quildreen-Motta",
					"new-value": "WebAssembly is a binary AST format that will allow efficient compilation to web. Will WebAssembly kill JS? No. It was never designed for that. For details, see: http://www.quora.com/Will-WebAssembly-make-JavaScript-skills-more-or-less-valuable-in-the-future/answer/Quildreen-Motta",
					"regex": "s/See:/No. It was never designed for that. For details, see:/"
				}
			]
		},
		"all the code": {
			"value": "When asking for help, provide all of your code; often the problem might not be where you think it is. http://shadow.cat/blog/matt-s-trout/show-us-the-whole-code/",
			"creator": "joepie91",
			"date": "2015-06-27T07:26:12.181Z",
			"popularity": 22,
			"editors": [],
			"changes": []
		},
		"ftp": {
			"value": "FTP is evil: http://mywiki.wooledge.org/FtpMustDie",
			"creator": "joepie91",
			"date": "2015-06-30T03:22:45.288Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"progressive enhancement": {
			"value": "Unless you're building a highly interactive webapp, your website shouldn't *rely* on JavaScript, it should just be *enhanced* by it. This is why: https://eev.ee/blog/2016/03/06/maybe-we-could-tone-down-the-javascript/ , with more technical details here: http://alistapart.com/article/understandingprogressiveenhancement",
			"creator": "joepie91",
			"date": "2015-06-30T10:00:27.374Z",
			"popularity": 33,
			"editors": [
				"ljharb",
				"joepie91"
			],
			"changes": [
				{
					"date": "2015-08-06T09:02:54.029Z",
					"editor": "ljharb",
					"old-value": "Unless you're building a highly interactive webapp, your website shouldn't *rely* on Javascript, it should just be *enhanced* by it. Read more here: http://alistapart.com/article/understandingprogressiveenhancement",
					"new-value": "Unless you're building a highly interactive webapp, your website shouldn't *rely* on JavaScript, it should just be *enhanced* by it. Read more here: http://alistapart.com/article/understandingprogressiveenhancement"
				},
				{
					"date": "2016-03-20T02:02:02.833Z",
					"editor": "joepie91",
					"old-value": "Unless you're building a highly interactive webapp, your website shouldn't *rely* on JavaScript, it should just be *enhanced* by it. Read more here: http://alistapart.com/article/understandingprogressiveenhancement",
					"new-value": "Unless you're building a highly interactive webapp, your website shouldn't *rely* on JavaScript, it should just be *enhanced* by it. This is why: https://eev.ee/blog/2016/03/06/maybe-we-could-tone-down-the-javascript/ , with more technical details here: http://alistapart.com/article/understandingprogressiveenhancement"
				}
			]
		},
		"cheers": {
			"value": "*clink*",
			"creator": "j201",
			"date": "2015-07-01T04:41:37.463Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"switch": {
			"value": "Do not use switch statements in JavaScript - use if/else chains, or a simple object/Map lookup. `switch` is more verbose, can suffer from unintentional case fallthrough and cause bugs. See: https://ericleads.wordpress.com/2012/12/11/switch-case-considered-harmful/",
			"creator": "ljharb",
			"date": "2015-07-01T23:14:16.321Z",
			"popularity": 24,
			"editors": [
				"jaawerth",
				"systemfault"
			],
			"changes": [
				{
					"date": "2015-10-01T21:51:52.994Z",
					"editor": "jaawerth",
					"old-value": "Do not use switch statements in JavaScript - use if/else chains, or a simple object/Map lookup. `switch` is more verbose, can suffer from unintentional case fallthrough and cause bugs, and does not express your intentions clearly.",
					"new-value": "Do not use switch statements in JavaScript - use if/else chains, or a simple object/Map lookup. `switch` is more verbose, can suffer from unintentional case fallthrough and cause bugs. See: http://ericleads.com/2012/12/switch-case-considered-harmful/"
				},
				{
					"date": "2017-09-03T22:21:21.372Z",
					"editor": "systemfault",
					"old-value": "Do not use switch statements in JavaScript - use if/else chains, or a simple object/Map lookup. `switch` is more verbose, can suffer from unintentional case fallthrough and cause bugs. See: http://ericleads.com/2012/12/switch-case-considered-harmful/",
					"new-value": "Do not use switch statements in JavaScript - use if/else chains, or a simple object/Map lookup. `switch` is more verbose, can suffer from unintentional case fallthrough and cause bugs. See: https://ericleads.wordpress.com/2012/12/11/switch-case-considered-harmful/"
				}
			]
		},
		"sscce": {
			"value": "SSCCE: Short, Self-Contained, and Correct Example: When asking for help, please provide a short but complete example which demonstrates the problem.  -> http://sscce.org/",
			"creator": "falafel",
			"date": "2015-07-06T01:14:57.234Z",
			"popularity": 5,
			"editors": [
				"falafel",
				"Havvy"
			],
			"changes": [
				{
					"date": "2015-07-06T01:15:15.732Z",
					"editor": "falafel",
					"old-value": "Short, Self Contained, Correct (Compilable), Example, http://sscce.org/",
					"new-value": "If you are having a problem with some code and seeking help, preparing a Short, Self Contained, Correct Example (SSCCE) is very useful. But what is an SSCCE?, http://sscce.org/"
				},
				{
					"date": "2016-08-05T10:48:38.984Z",
					"editor": "Havvy",
					"old-value": "If you are having a problem with some code and seeking help, preparing a Short, Self Contained, Correct Example (SSCCE) is very useful. But what is an SSCCE?, http://sscce.org/",
					"new-value": "SSCCE: Short, Self-Contained, and Correct Example: When asking for help, please provide a short but complete example which demonstrates the problem.  -> http://sscce.org/"
				}
			]
		},
		"mongo loses data": {
			"value": "Mongo's consistency model has some fundamental flaws which makes it impossible to have a CP system (under the CAP theorem) in a distributed setting. Latest Mongo + MAJORITY write concern lessens the problem, but is slower. See https://aphyr.com/posts/322-call-me-maybe-mongodb-stale-reads",
			"creator": "Sorella",
			"date": "2015-07-07T04:18:18.025Z",
			"popularity": 11,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2015-07-07T04:19:21.290Z",
					"editor": "Sorella",
					"old-value": "Mongo's consistency model has some fundamental flaws which makes it impossible to have a CP system (under the CAP theorem) in a distributed setting. Latest Mongo + MAJORITY write concern lessens the problem, with less perf. See https://aphyr.com/posts/322-call-me-maybe-mongodb-stale-reads",
					"new-value": "Mongo's consistency model has some fundamental flaws which makes it impossible to have a CP system (under the CAP theorem) in a distributed setting. Latest Mongo + MAJORITY write concern lessens the problem, but is slower. See https://aphyr.com/posts/322-call-me-maybe-mongodb-stale-reads"
				}
			]
		},
		"seppuku": {
			"value": "You can remove an HTMLElement by calling `element.parentNode.removeChild(element)`",
			"creator": "mmmveggies",
			"date": "2015-07-14T20:56:11.985Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"flex": {
			"value": "Flexbox is a powerful way to position elements based on their content and siblings. Browser support is IE10+. You can experiment with flexbox options here http://the-echoplex.net/flexyboxes  For a better experience, consider using the defaults mentioned here: https://github.com/facebook/css-layout#default-values",
			"creator": "GreenJello",
			"date": "2015-07-16T17:42:31.532Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"react": {
			"value": "React is a JavaScript library for building user interfaces https://facebook.github.io/react/. Also see http://jlongster.com/Removing-User-Interface-Complexity,-or-Why-React-is-Awesome",
			"creator": "falafel",
			"date": "2015-07-16T23:12:34.173Z",
			"popularity": 20,
			"editors": [
				"notchris",
				"ljharb",
				"Agamemnus",
				"DeltaHeavy"
			],
			"changes": [
				{
					"date": "2018-10-01T19:45:40.157Z",
					"editor": "notchris",
					"old-value": "React is a JavaScript library for building user interfaces https://facebook.github.io/react/. Also see http://jlongster.com/Removing-User-Interface-Complexity,-or-Why-React-is-Awesome",
					"new-value": "vue"
				},
				{
					"date": "2018-10-16T11:22:49.217Z",
					"editor": "ljharb",
					"old-value": "vue",
					"new-value": "React is a JavaScript library for building user interfaces https://facebook.github.io/react/. Also see http://jlongster.com/Removing-User-Interface-Complexity,-or-Why-React-is-Awesome"
				},
				{
					"date": "2019-02-05T05:34:30.941Z",
					"editor": "Agamemnus",
					"old-value": "React is a JavaScript library for building user interfaces https://facebook.github.io/react/. Also see http://jlongster.com/Removing-User-Interface-Complexity,-or-Why-React-is-Awesome",
					"new-value": "React is a JavaScript library for building user interfaces https://facebook.github.io/react/. Also see http://jlongster.com/Removing-User-Interface-Complexity,-or-Why-React-is-Awesome or https://overreacted.io/react-as-a-ui-runtime/"
				},
				{
					"date": "2019-02-05T05:40:36.078Z",
					"editor": "DeltaHeavy",
					"old-value": "React is a JavaScript library for building user interfaces https://facebook.github.io/react/. Also see http://jlongster.com/Removing-User-Interface-Complexity,-or-Why-React-is-Awesome or https://overreacted.io/react-as-a-ui-runtime/",
					"new-value": "React is a JavaScript library for building user interfaces https://facebook.github.io/react/. Also see http://jlongster.com/Removing-User-Interface-Complexity,-or-Why-React-is-Awesome"
				}
			]
		},
		"file": {
			"value": "Each browser implements different security rules for file:/// urls. This leads to weird errors that other people can't track down. Don't use file urls. Either host files with a daemon web server like apache, or run e.g. `python -m SimpleHttpServer 8080` in your project directory.",
			"creator": "GreenJello",
			"date": "2015-07-18T09:11:04.889Z",
			"popularity": 6,
			"editors": [
				"graingert",
				"ljharb"
			],
			"changes": [
				{
					"date": "2018-01-11T20:58:20.081Z",
					"editor": "graingert",
					"old-value": "Each browser implements different security rules for file:/// urls. This leads to weird errors that other people can't track down. Don't use file urls. Either host files with a daemon web server like apache, or run e.g. `python -m SimpleHttpServer 8080` in your project directory.",
					"new-value": "Each browser implements different security rules for file:/// urls. This leads to weird errors that other people can't track down. Don't use file urls. Either host files with a daemon web server like nginx, or run e.g. `python3 -m http.server` in your project directory."
				},
				{
					"date": "2018-01-16T07:48:17.471Z",
					"editor": "ljharb",
					"old-value": "Each browser implements different security rules for file:/// urls. This leads to weird errors that other people can't track down. Don't use file urls. Either host files with a daemon web server like nginx, or run e.g. `python3 -m http.server` in your project directory.",
					"new-value": "Each browser implements different security rules for file:/// urls. This leads to weird errors that other people can't track down. Don't use file urls. Either host files with a daemon web server like apache, or run e.g. `python -m SimpleHttpServer 8080` in your project directory."
				}
			]
		},
		"file://": {
			"value": "Each browser implements different security rules for file:/// urls. This leads to weird errors that other people can't track down. Don't use file urls. Either host files with a daemon web server like apache, or run e.g. `python -m SimpleHttpServer 8080` in your project directory.",
			"creator": "GreenJello",
			"date": "2015-07-18T09:11:22.702Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"file:///": {
			"value": "Each browser implements different security rules for file:/// urls. This leads to weird errors that other people can't track down. Don't use file urls. Either host files with a daemon web server like apache, or run e.g. `python -m SimpleHttpServer 8080` in your project directory.",
			"creator": "GreenJello",
			"date": "2015-07-18T09:11:52.247Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"file:": {
			"value": "Each browser implements different security rules for file:/// urls. This leads to weird errors that other people can't track down. Don't use file urls. Either host files with a daemon web server like apache, or run e.g. `python -m SimpleHttpServer 8080` in your project directory.",
			"creator": "GreenJello",
			"date": "2015-07-18T09:11:59.547Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"asdf foo": {
			"value": "bar",
			"creator": "ReginaldVanHelms",
			"date": "2015-07-19T11:52:29.210Z",
			"popularity": 1,
			"editors": [
				"ReginaldVanHelms"
			],
			"changes": [
				{
					"date": "2015-07-19T11:54:04.425Z",
					"editor": "ReginaldVanHelms",
					"old-value": "bar",
					"new-value": "bar"
				}
			]
		},
		"tstetsetsetsete": {
			"value": "bar",
			"creator": "ReginaldVanHelms",
			"date": "2015-07-19T11:54:21.154Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"how to use ecmabot": {
			"value": "bar",
			"creator": "ReginaldVanHelms",
			"date": "2015-07-19T11:54:38.660Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"event delegation": {
			"value": "http://davidwalsh.name/event-delegate",
			"creator": "cjohnson",
			"date": "2015-07-21T14:36:51.389Z",
			"popularity": 32,
			"editors": [],
			"changes": []
		},
		"sealion": {
			"value": "Please don't be a sea lion: http://simplikation.com/why-sealioning-is-bad/",
			"creator": "ljharb",
			"date": "2015-07-26T03:51:16.144Z",
			"popularity": 12,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-07-26T04:16:54.793Z",
					"editor": "ljharb",
					"old-value": "Why Sealioning is bad: http://simplikation.com/why-sealioning-is-bad/",
					"new-value": "Please don't be a sea lion: http://simplikation.com/why-sealioning-is-bad/"
				}
			]
		},
		"sea lion": {
			"alias": "sealion",
			"creator": "ljharb",
			"date": "2015-07-26T03:51:24.758Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"sealioning": {
			"alias": "sealion",
			"creator": "ljharb",
			"date": "2015-07-26T03:51:28.968Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"react-atom": {
			"value": "A base directory structure can be created like this: mkdir -p script src/{client,server,util}/__test__ src/client/{atoms,molecules,organisms,pages}",
			"creator": "GreenJello",
			"date": "2015-07-26T19:09:00.666Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"mvc": {
			"value": "You probably don't actually need MVC. http://aredridel.dinhe.net/2015/01/30/why-mvc-does-not-fit-the-web/",
			"creator": "joepie91",
			"date": "2015-08-05T07:53:11.876Z",
			"popularity": 27,
			"editors": [],
			"changes": []
		},
		"arrowmagic": {
			"value": "b> var two = f => x => f(f(x)); var three = f => x => f(two(f)(x)); var mult = m => n => f => m(n(f)); var pow = e => b => b(e); var toNumber = n => n(x => ~~x+1)(); toNumber(pow(mult(two)(three))(two))",
			"creator": "j201",
			"date": "2015-08-06T23:24:50.265Z",
			"popularity": 31,
			"editors": [
				"jaawerth"
			],
			"changes": [
				{
					"date": "2017-03-09T08:57:33.826Z",
					"editor": "jaawerth",
					"old-value": "b> var two = f => x => f(f(x)); var three = f => x => f(two(f)(x)); var mult = m => n => f => m(n(f)); var pow = e => b => b(e); var toNumber = n => n(x => x+1)(0); toNumber(pow(mult(two)(three))(two))",
					"new-value": "b> var two = f => x => f(f(x)); var three = f => x => f(two(f)(x)); var mult = m => n => f => m(n(f)); var pow = e => b => b(e); var toNumber = n => n(x => ~~x+1)(); toNumber(pow(mult(two)(three))(two))"
				}
			]
		},
		"verbose": {
			"value": "Too many words is better than too few. If somebody doesn't understand what you're trying to build, try to explain it again, with twice as many words as before. Even if you think you're saving somebody time by being brief, it's very possible that you're just making it harder and more time-consuming for the other person to understand.",
			"creator": "joepie91",
			"date": "2015-08-07T18:23:35.833Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"cryptography": {
			"value": "An introduction to different types of cryptography and what role each plays: https://paragonie.com/blog/2015/08/you-wouldnt-base64-a-password-cryptography-decoded  |  What cryptography libs to use: https://gist.github.com/tqbf/be58d2d39690c3b366ad  |  A thorough e-book on how cryptography works under the hood: https://www.crypto101.io/",
			"creator": "joepie91",
			"date": "2015-08-07T20:56:23.462Z",
			"popularity": 23,
			"editors": [
				"joepie91"
			],
			"changes": [
				{
					"date": "2015-08-27T15:58:02.177Z",
					"editor": "joepie91",
					"old-value": "An introduction to different types of cryptography and what role each plays: https://paragonie.com/blog/2015/08/you-wouldnt-base64-a-password-cryptography-decoded , and a more thorough e-book on how cryptography works under the hood: https://www.crypto101.io/",
					"new-value": "An introduction to different types of cryptography and what role each plays: https://paragonie.com/blog/2015/08/you-wouldnt-base64-a-password-cryptography-decoded  |  What cryptography libs to use: https://gist.github.com/tqbf/be58d2d39690c3b366ad  |  A thorough e-book on how cryptography works under the hood: https://www.crypto101.io/"
				}
			]
		},
		"module": {
			"alias": "modules",
			"creator": "Sorella",
			"date": "2015-08-08T01:46:55.716Z",
			"popularity": 15,
			"editors": [],
			"changes": []
		},
		"dedicated": {
			"value": "#angularjs - ##bootstrap - #browserify - #coffeescript - #css - #d3.js - #dojo - #emberjs  - #express - #grunt - #gulpjs - #jquery - #knockoutjs - #node.js - #reactjs (also tools used in react.js projects) - #requirejs - #socket.io - #three.js - #webgl - ##typescript",
			"creator": "Sorella",
			"date": "2015-08-08T16:04:54.273Z",
			"popularity": 232,
			"editors": [
				"j201",
				"deltab",
				"tcsc",
				"RedSquirrel",
				"GreenJello",
				"Havvy",
				"grr12314",
				"MJCD"
			],
			"changes": [
				{
					"date": "2015-08-08T16:05:53.572Z",
					"editor": "j201",
					"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype -",
					"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #yui",
					"regex": "s/$/ #reactjs - #requirejs - #socket.io - #three.js - #webgl - #yui/"
				},
				{
					"date": "2016-12-08T01:00:46.687Z",
					"editor": "deltab",
					"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #yui",
					"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #jsdom - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #yui",
					"regex": "s/#jquery/#jquery - #jsdom/"
				},
				{
					"date": "2016-12-13T02:09:25.777Z",
					"editor": "tcsc",
					"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #jsdom - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #yui",
					"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #jsdom - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #yui - #webpack",
					"regex": "s/$/ - #webpack/gi"
				},
				{
					"date": "2016-12-13T02:11:46.384Z",
					"editor": "RedSquirrel",
					"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #jsdom - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #yui - #webpack",
					"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #jsdom - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #webpack - #yui"
				},
				{
					"date": "2017-04-12T20:08:19.212Z",
					"editor": "tcsc",
					"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #jsdom - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #webpack - #yui",
					"new-value": "#angularjs - ##bootstrap - #browserify - #chaijs - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #jsdom - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap -"
				},
				{
					"date": "2017-04-12T20:12:52.865Z",
					"editor": "tcsc",
					"old-value": "#angularjs - ##bootstrap - #browserify - #chaijs - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #jsdom - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap -",
					"new-value": "#angularjs - ##bootstrap - #browserify - #chaijs - ##closure-tools - #cordova - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #jquery - #jsdom - #knockoutjs - #node.js - #phantomjs - #phaserio - #phonegap - #reactjs - #requirejs - #socket.io - #three.js"
				},
				{
					"date": "2017-04-12T20:13:20.818Z",
					"editor": "GreenJello",
					"old-value": "#angularjs - ##bootstrap - #browserify - #chaijs - ##closure-tools - #cordova - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #jquery - #jsdom - #knockoutjs - #node.js - #phantomjs - #phaserio - #phonegap - #reactjs - #requirejs - #socket.io - #three.js",
					"new-value": "#angularjs - ##bootstrap - #browserify - #coffeescript - #css - #d3.js - #dojo - #emberjs  - #express - #grunt - #gulpjs - #jquery - #knockoutjs - #mootools - #node.js - #reactjs (also tools used in react.js projects) - #requirejs - #socket.io - #three.js - #webgl"
				},
				{
					"date": "2017-04-12T20:13:21.935Z",
					"editor": "Havvy",
					"old-value": "#angularjs - ##bootstrap - #browserify - #coffeescript - #css - #d3.js - #dojo - #emberjs  - #express - #grunt - #gulpjs - #jquery - #knockoutjs - #mootools - #node.js - #reactjs (also tools used in react.js projects) - #requirejs - #socket.io - #three.js - #webgl",
					"new-value": "[alias] ded"
				},
				{
					"date": "2017-04-12T20:13:38.314Z",
					"editor": "GreenJello",
					"old-value": "[alias] ded",
					"new-value": "#angularjs - ##bootstrap - #browserify - #coffeescript - #css - #d3.js - #dojo - #emberjs  - #express - #grunt - #gulpjs - #jquery - #knockoutjs - #mootools - #node.js - #reactjs (also tools used in react.js projects) - #requirejs - #socket.io - #three.js - #webgl"
				},
				{
					"date": "2017-04-12T20:14:29.501Z",
					"editor": "GreenJello",
					"old-value": "#angularjs - ##bootstrap - #browserify - #coffeescript - #css - #d3.js - #dojo - #emberjs  - #express - #grunt - #gulpjs - #jquery - #knockoutjs - #mootools - #node.js - #reactjs (also tools used in react.js projects) - #requirejs - #socket.io - #three.js - #webgl",
					"new-value": "#angularjs - ##bootstrap - #browserify - #coffeescript - #css - #d3.js - #dojo - #emberjs  - #express - #grunt - #gulpjs - #jquery - #knockoutjs - #node.js - #reactjs (also tools used in react.js projects) - #requirejs - #socket.io - #three.js - #webgl"
				},
				{
					"date": "2017-04-12T20:14:53.375Z",
					"editor": "grr12314",
					"old-value": "#angularjs - ##bootstrap - #browserify - #coffeescript - #css - #d3.js - #dojo - #emberjs  - #express - #grunt - #gulpjs - #jquery - #knockoutjs - #node.js - #reactjs (also tools used in react.js projects) - #requirejs - #socket.io - #three.js - #webgl",
					"new-value": "#angularjs - ##bootstrap - #browserify - #chaijs - ##closure-tools - #cordova - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #jquery - #jsdom - #knockoutjs - #node.js - #phantomjs - #phaserio - #phonegap - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #webpack"
				},
				{
					"date": "2017-04-12T20:15:17.399Z",
					"editor": "GreenJello",
					"old-value": "#angularjs - ##bootstrap - #browserify - #chaijs - ##closure-tools - #cordova - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #jquery - #jsdom - #knockoutjs - #node.js - #phantomjs - #phaserio - #phonegap - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #webpack",
					"new-value": "#angularjs - ##bootstrap - #browserify - #coffeescript - #css - #d3.js - #dojo - #emberjs  - #express - #grunt - #gulpjs - #jquery - #knockoutjs - #node.js - #reactjs (also tools used in react.js projects) - #requirejs - #socket.io - #three.js - #webgl"
				},
				{
					"date": "2019-03-08T19:34:21.406Z",
					"editor": "MJCD",
					"old-value": "#angularjs - ##bootstrap - #browserify - #coffeescript - #css - #d3.js - #dojo - #emberjs  - #express - #grunt - #gulpjs - #jquery - #knockoutjs - #node.js - #reactjs (also tools used in react.js projects) - #requirejs - #socket.io - #three.js - #webgl",
					"new-value": "#angularjs - ##bootstrap - #browserify - #coffeescript - #css - #d3.js - #dojo - #emberjs  - #express - #grunt - #gulpjs - #jquery - #knockoutjs - #node.js - #reactjs (also tools used in react.js projects) - #requirejs - #socket.io - #three.js - #webgl - ##typescript"
				}
			]
		},
		"shoo": {
			"value": "please see !ded",
			"creator": "inimino",
			"date": "2015-08-09T05:16:20.969Z",
			"popularity": 9,
			"editors": [],
			"changes": []
		},
		"time": {
			"value": "Dealing with time? Do Date objects not work? Most likely you'll want to use moment.js/luxon/date-fns",
			"creator": "Havvy",
			"date": "2015-08-11T17:51:59.173Z",
			"popularity": 15,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2018-01-29T01:26:00.677Z",
					"editor": "qswz",
					"old-value": "Dealing with time? Do Date objects not work? Most likely you'll want to use moment.js.",
					"new-value": "Dealing with time? Do Date objects not work? Most likely you'll want to use moment.js/luxon/date-fns"
				}
			]
		},
		"jsfeatures": {
			"value": "jsfeatures.in",
			"creator": "howdoi",
			"date": "2015-08-17T12:48:19.524Z",
			"popularity": 9,
			"editors": [],
			"changes": []
		},
		"zero month": {
			"value": "The \"month\" in JS Dates starts at 0. This makes sense because in ['Jan', 'Feb', 'Mar', 'Apr', …] January is at index zero. Days and Years are 1-indexed, because nobody indexes into an array for those since they're just numbers.",
			"creator": "ljharb",
			"date": "2015-08-17T19:14:38.461Z",
			"popularity": 12,
			"editors": [],
			"changes": []
		},
		"no classes": {
			"value": "JavaScript does not have class-based OO (Java, C#, Python, etc.), instead it uses prototype-based OO, where objects dictate their own layout and behaviour (methods), and inherit directly from other objects (by cloning). See http://raganwald.com/2015/05/11/javascript-classes.html for details.",
			"creator": "Sorella",
			"date": "2015-08-17T23:37:14.914Z",
			"popularity": 43,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2015-09-25T19:16:05.265Z",
					"editor": "Sorella",
					"old-value": "JavaScript does not have class-based OO (Java, C#, Python, etc.), instead it uses prototype-based OO, where objects dictate their own behaviour (methods), and inherit directly from other objects (by cloning). See http://raganwald.com/2015/05/11/javascript-classes.html for details.",
					"new-value": "JavaScript does not have class-based OO (Java, C#, Python, etc.), instead it uses prototype-based OO, where objects dictate their own layout and behaviour (methods), and inherit directly from other objects (by cloning). See http://raganwald.com/2015/05/11/javascript-classes.html for details.",
					"regex": "s/own behaviour/own layout and behaviour/"
				}
			]
		},
		"devdocs": {
			"value": "http://devdocs.io is a web-based application that combines multiple documentations in a fast, organized, and searchable interface with offline capabilities. For a native cross-platform app, see https://zealdocs.org. For MacOS, see https://kapeli.com/dash",
			"creator": "jaawerth",
			"date": "2015-08-19T02:53:11.136Z",
			"popularity": 13,
			"editors": [
				"jaawerth"
			],
			"changes": [
				{
					"date": "2017-02-23T01:54:33.571Z",
					"editor": "jaawerth",
					"old-value": "DevDocs is a web-based application that combines multiple documentations in a fast, organized, and searchable interface with offline capabilities. http://devdocs.io",
					"new-value": "http://devdocs.io is a web-based application that combines multiple documentations in a fast, organized, and searchable interface with offline capabilities. For a native cross-platform app, see https://zealdocs.org. For MacOS, see https://kapeli.com/dash"
				}
			]
		},
		"fair vs equal": {
			"value": "Equality vs Fairness/Equity: http://twitter.com/haytibbs/status/634084533000896512/photo/1 and adding systemic oppression: https://twitter.com/constababble/status/730589497050587136/photo/1",
			"creator": "ljharb",
			"date": "2015-08-19T10:30:41.577Z",
			"popularity": 8,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-08-20T05:13:24.839Z",
					"editor": "ljharb",
					"old-value": "http://2.bp.blogspot.com/-oKnRwgCavKA/UdyYV-DeeiI/AAAAAAAAAkM/ms9g-JjLUcE/s1600/fair+isn't+equal.jpg",
					"new-value": "Equality vs Fairness/Equity: http://twitter.com/haytibbs/status/634084533000896512/photo/1"
				},
				{
					"date": "2016-08-17T01:08:48.726Z",
					"editor": "ljharb",
					"old-value": "Equality vs Fairness/Equity: http://twitter.com/haytibbs/status/634084533000896512/photo/1",
					"new-value": "Equality vs Fairness/Equity: http://twitter.com/haytibbs/status/634084533000896512/photo/1 and adding systemic oppression: https://twitter.com/constababble/status/730589497050587136/photo/1"
				}
			]
		},
		"socket.io performance": {
			"value": "https://bocoup.com/weblog/node-stress-test-analysis/",
			"creator": "joepie91",
			"date": "2015-08-23T17:57:11.734Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"window.fetch": {
			"value": "[alias] fetch",
			"creator": "Havvy",
			"date": "2015-08-25T06:59:41.397Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"modify prototypes": {
			"alias": "prototype modify",
			"creator": "ljharb",
			"date": "2015-08-27T21:38:18.061Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"parameter vs argument": {
			"value": "A parameter is a thing in a function signature. An argument is a thing in a function invocation.",
			"creator": "ljharb",
			"date": "2015-08-28T01:07:57.554Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"param vs argument": {
			"alias": "parameter vs argument",
			"creator": "ljharb",
			"date": "2015-08-28T01:08:02.995Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"argument vs param": {
			"alias": "parameter vs argument",
			"creator": "ljharb",
			"date": "2015-08-28T01:08:07.123Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"argument vs parameter": {
			"alias": "parameter vs argument",
			"creator": "ljharb",
			"date": "2015-08-28T01:08:09.252Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"arg vs parameter": {
			"alias": "parameter vs argument",
			"creator": "ljharb",
			"date": "2015-08-28T01:09:08.114Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"arg vs param": {
			"alias": "parameter vs argument",
			"creator": "ljharb",
			"date": "2015-08-28T01:09:10.191Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"param vs arg": {
			"alias": "parameter vs argument",
			"creator": "ljharb",
			"date": "2015-08-28T01:09:13.052Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"parameter vs arg": {
			"alias": "parameter vs argument",
			"creator": "ljharb",
			"date": "2015-08-28T01:09:15.651Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"comma operator": {
			"value": "The comma operator executes the left expression and then the right expression, evaluating to the value of the right expression.",
			"creator": "Havvy",
			"date": "2015-08-30T17:37:29.152Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"event queue": {
			"alias": "event loop",
			"creator": "Havvy",
			"date": "2015-09-02T21:09:03.406Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"es6 compatibility": {
			"value": "ES6 compatibility table: https://kangax.github.io/compat-table/es6/",
			"creator": "jaawerth",
			"date": "2015-09-04T03:14:40.102Z",
			"popularity": 28,
			"editors": [],
			"changes": []
		},
		"es6 compat": {
			"alias": "compat",
			"creator": "jaawerth",
			"date": "2015-09-04T03:15:31.174Z",
			"popularity": 27,
			"editors": [
				"jaawerth"
			],
			"changes": [
				{
					"date": "2019-01-27T00:50:59.839Z",
					"editor": "jaawerth",
					"old-alias": "es6 compatibility",
					"new-alias": "compat"
				}
			]
		},
		"koi": {
			"value": "https://twitter.com/ljharb/status/638887678512115712",
			"creator": "Havvy",
			"date": "2015-09-04T04:34:37.019Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"hard problems": {
			"value": "The two hardest problems in programming are cache invalidation, naming things, and off by one errors.",
			"creator": "Havvy",
			"date": "2015-09-08T00:56:39.367Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"no sails": {
			"value": "You probably don't want to use Sails. Here are the reasons why: https://gist.github.com/joepie91/cc8b0c9723cc2164660e",
			"creator": "joepie91",
			"date": "2015-09-11T21:44:11.520Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"es6 node": {
			"value": "https://nodejs.org/en/docs/es6/ - Notably missing is destructuring assignment. See `!es6 modules` for  `import` and `export`.",
			"creator": "Havvy",
			"date": "2015-09-14T05:05:27.882Z",
			"popularity": 2,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-10-01T16:46:52.700Z",
					"editor": "ljharb",
					"old-value": "https://nodejs.org/en/docs/es6/ - Notably missing is destructuring assignment, `import`, and `export`.",
					"new-value": "https://nodejs.org/en/docs/es6/ - Notably missing is destructuring assignment. See `!es6 modules` for  `import` and `export`."
				}
			]
		},
		"node es6": {
			"alias": "es6 node",
			"creator": "Havvy",
			"date": "2015-09-14T05:05:34.994Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"crypto": {
			"value": "Don't try to do encryption or cryptography in browser JavaScript. https://web.archive.org/web/20150512024954/http://matasano.com/articles/javascript-cryptography/",
			"creator": "ljharb",
			"date": "2015-09-19T06:52:08.583Z",
			"popularity": 50,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-10-17T18:07:28.468Z",
					"editor": "ljharb",
					"old-value": "Don't try to do encryption or cryptography in browser JavaScript. http://www.matasano.com/articles/javascript-cryptography/",
					"new-value": "Don't try to do encryption or cryptography in browser JavaScript. https://web.archive.org/web/20150512024954/http://matasano.com/articles/javascript-cryptography/"
				}
			]
		},
		"fine": {
			"value": "It's fine! https://whilstibloom.files.wordpress.com/2014/12/fine-dog-fine.jpg?w=620",
			"creator": "ljharb",
			"date": "2015-09-19T16:03:24.852Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"es6 modules": {
			"value": "ES2015 provides semantics for import/export (currently in modern browsers). node 8.5+, however, requires the --experimental-modules flag and .mjs files. !babel simply transpiles import/export to `require`. Use node-style CJS modules for now.",
			"creator": "ljharb",
			"date": "2015-09-22T14:25:53.057Z",
			"popularity": 429,
			"editors": [
				"Sorella",
				"Maxdamantus",
				"graingert",
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-10-01T20:41:50.003Z",
					"editor": "Sorella",
					"old-value": "While ES6 provides syntax for import/export, it currently *does nothing*, anywhere, because the loader spec is not finished ( https://github.com/whatwg/loader ). ES6 Modules are not yet a thing; they do not yet exist. !babel simply transpiles import/export to `require`.",
					"new-value": "While ES6 provides syntax for import/export, it currently *does nothing*, anywhere, because the loader spec is not finished ( https://github.com/whatwg/loader ). ES6 Modules are not yet a thing; they do not yet exist. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished.",
					"regex": "s/\\.$/, which is not guaranteed to work once the loader is finished./"
				},
				{
					"date": "2015-10-26T05:51:38.978Z",
					"editor": "Sorella",
					"old-value": "While ES6 provides syntax for import/export, it currently *does nothing*, anywhere, because the loader spec is not finished ( https://github.com/whatwg/loader ). ES6 Modules are not yet a thing; they do not yet exist. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished.",
					"new-value": "While ES6 provides syntax for import/export, it currently *does nothing*, anywhere, because the loader spec is not finished ( https://github.com/whatwg/loader ). ES6 Modules are not yet a thing; they do not yet exist. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished. Use CommonJS modules for now.",
					"regex": "s/$/ Use CommonJS modules for now./"
				},
				{
					"date": "2017-03-29T14:58:07.750Z",
					"editor": "Maxdamantus",
					"old-value": "While ES6 provides syntax for import/export, it currently *does nothing*, anywhere, because the loader spec is not finished ( https://github.com/whatwg/loader ). ES6 Modules are not yet a thing; they do not yet exist. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished. Use CommonJS modules for now.",
					"new-value": "While ES6 provides semantics for import/export, it currently *does nothing*, anywhere, because the loader spec is not finished ( https://github.com/whatwg/loader ). ES6 Modules are not yet a thing; they do not yet exist. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished. Use CommonJS modules for now.",
					"regex": "s/provides syntax for/provides semantics for/"
				},
				{
					"date": "2017-03-29T14:58:43.465Z",
					"editor": "Maxdamantus",
					"old-value": "While ES6 provides semantics for import/export, it currently *does nothing*, anywhere, because the loader spec is not finished ( https://github.com/whatwg/loader ). ES6 Modules are not yet a thing; they do not yet exist. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished. Use CommonJS modules for now.",
					"new-value": "While ES6 provides semantics for import/export, it currently *does nothing*, in web contexts, because the loader spec is not finished ( https://github.com/whatwg/loader ). ES6 Modules are not yet a thing; they do not yet exist. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished. Use CommonJS modules for now.",
					"regex": "s/anywhere/in web contexts/"
				},
				{
					"date": "2017-03-29T15:00:27.821Z",
					"editor": "Maxdamantus",
					"old-value": "While ES6 provides semantics for import/export, it currently *does nothing*, in web contexts, because the loader spec is not finished ( https://github.com/whatwg/loader ). ES6 Modules are not yet a thing; they do not yet exist. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished. Use CommonJS modules for now.",
					"new-value": "While ES6 provides semantics for import/export, it currently *does nothing*, in web contexts, because the loader spec is not finished ( https://github.com/whatwg/loader ). Node.js is still exploring how to incorporate ES6 modules. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished. Use CommonJS modules for now.",
					"regex": "s/ES6 Modules are not yet a thing; they do not yet exist/Node.js is still exploring how to incorporate ES6 modules/"
				},
				{
					"date": "2017-09-11T17:13:47.888Z",
					"editor": "graingert",
					"old-value": "While ES6 provides semantics for import/export, it currently *does nothing*, in web contexts, because the loader spec is not finished ( https://github.com/whatwg/loader ). Node.js is still exploring how to incorporate ES6 modules. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished. Use CommonJS modules for now.",
					"new-value": "ES2015 provides semantics for import/export, it is currently supported in Chrome 61 and Safari 10.1, because the loader spec is finished ( https://whatwg.github.io/loader/ ). Node.js, however, is still exploring how to incorporate ES6 modules. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished."
				},
				{
					"date": "2017-09-11T17:14:12.787Z",
					"editor": "graingert",
					"old-value": "ES2015 provides semantics for import/export, it is currently supported in Chrome 61 and Safari 10.1, because the loader spec is finished ( https://whatwg.github.io/loader/ ). Node.js, however, is still exploring how to incorporate ES6 modules. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished.",
					"new-value": "ES2015 provides semantics for import/export, it is currently supported in Chrome 61 and Safari 10.1, because the loader spec is finished ( https://whatwg.github.io/loader/ ). Node.js, however, is still exploring how to incorporate ES2015 modules. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished."
				},
				{
					"date": "2017-09-11T17:24:23.727Z",
					"editor": "graingert",
					"old-value": "ES2015 provides semantics for import/export, it is currently supported in Chrome 61 and Safari 10.1, because the loader spec is finished ( https://whatwg.github.io/loader/ ). Node.js, however, is still exploring how to incorporate ES2015 modules. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the loader is finished.",
					"new-value": "ES2015 provides semantics for import/export, it is currently supported in Chrome 61 and Safari 10.1, because the loader spec is finished ( https://html.spec.whatwg.org/multipage/scripting.html#script-type-module-example-1 ). Node.js, however, is still exploring how to incorporate ES2015 modules. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the"
				},
				{
					"date": "2017-09-11T20:30:16.527Z",
					"editor": "ljharb",
					"old-value": "ES2015 provides semantics for import/export, it is currently supported in Chrome 61 and Safari 10.1, because the loader spec is finished ( https://html.spec.whatwg.org/multipage/scripting.html#script-type-module-example-1 ). Node.js, however, is still exploring how to incorporate ES2015 modules. !babel simply transpiles import/export to `require`, which is not guaranteed to work once the",
					"new-value": "ES2015 provides semantics for import/export (currently in Chrome 61/Safari 10.1). node, however, has not yet finished supporting ESM. !babel simply transpiles import/export to `require`. Use CommonJS modules for now."
				},
				{
					"date": "2017-09-21T00:09:00.423Z",
					"editor": "graingert",
					"old-value": "ES2015 provides semantics for import/export (currently in Chrome 61/Safari 10.1). node, however, has not yet finished supporting ESM. !babel simply transpiles import/export to `require`. Use CommonJS modules for now.",
					"new-value": "ES2015 provides semantics for import/export (currently in Chrome 61/Safari 10.1). node 8.5, however, requires a flag and .mjs files. !babel simply transpiles import/export to `require`. Use CommonJS modules for now. But feel free to experiment with ESM!"
				},
				{
					"date": "2017-09-21T00:11:59.395Z",
					"editor": "ljharb",
					"old-value": "ES2015 provides semantics for import/export (currently in Chrome 61/Safari 10.1). node 8.5, however, requires a flag and .mjs files. !babel simply transpiles import/export to `require`. Use CommonJS modules for now. But feel free to experiment with ESM!",
					"new-value": "ES2015 provides semantics for import/export (currently in Chrome 61/Safari 10.1). node 8.5+, however, requires a flag and .mjs files. !babel simply transpiles import/export to `require`. Use CommonJS modules for now."
				},
				{
					"date": "2017-09-26T19:21:27.291Z",
					"editor": "graingert",
					"old-value": "ES2015 provides semantics for import/export (currently in Chrome 61/Safari 10.1). node 8.5+, however, requires a flag and .mjs files. !babel simply transpiles import/export to `require`. Use CommonJS modules for now.",
					"new-value": "ES2015 provides semantics for import/export (currently in Chrome 61/Safari 10.1). node 8.5+, however, requires the --experimental-modules flag and .mjs files. !babel simply transpiles import/export to `require`. Use CommonJS modules for now."
				},
				{
					"date": "2018-08-23T01:37:15.112Z",
					"editor": "ljharb",
					"old-value": "ES2015 provides semantics for import/export (currently in Chrome 61/Safari 10.1). node 8.5+, however, requires the --experimental-modules flag and .mjs files. !babel simply transpiles import/export to `require`. Use CommonJS modules for now.",
					"new-value": "ES2015 provides semantics for import/export (currently in Chrome 61/Safari 10.1). node 8.5+, however, requires the --experimental-modules flag and .mjs files. !babel simply transpiles import/export to `require`. Use node-style CJS modules for now."
				},
				{
					"date": "2018-08-23T01:37:46.736Z",
					"editor": "ljharb",
					"old-value": "ES2015 provides semantics for import/export (currently in Chrome 61/Safari 10.1). node 8.5+, however, requires the --experimental-modules flag and .mjs files. !babel simply transpiles import/export to `require`. Use node-style CJS modules for now.",
					"new-value": "ES2015 provides semantics for import/export (currently in modern browsers). node 8.5+, however, requires the --experimental-modules flag and .mjs files. !babel simply transpiles import/export to `require`. Use node-style CJS modules for now."
				}
			]
		},
		"random": {
			"value": "4",
			"creator": "GreenJello",
			"date": "2015-09-24T04:32:41.637Z",
			"popularity": 13,
			"editors": [],
			"changes": []
		},
		"reactvs": {
			"value": "If you want highly custom very maintainable code React is a good choice. If you want to quickly put together a CRUD application, angular and ember will let you move faster. React requires more decisions/research and stronger JS skills to be effective with.",
			"creator": "GreenJello",
			"date": "2015-09-25T19:30:03.116Z",
			"popularity": 2,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2015-09-25T19:31:12.419Z",
					"editor": "GreenJello",
					"old-value": "If you want highly custom very maintainable code React is a good choice. If you want to quickly put together a CRUD application, angular and ember will let you move faster.",
					"new-value": "If you want highly custom very maintainable code React is a good choice. If you want to quickly put together a CRUD application, angular and ember will let you move faster. React requires more decisions/research and stronger JS skills to be effective with."
				}
			]
		},
		"is it a transpiler": {
			"value": "Does it take high level source code and output JavaScript? Then yes. Otherwise, who cares?",
			"creator": "GreenJello",
			"date": "2015-09-26T00:31:11.242Z",
			"popularity": 4,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2015-09-26T00:31:21.466Z",
					"editor": "GreenJello",
					"old-value": "Does it take high level source code and output JavaScript? Then use. Otherwise, who cares?",
					"new-value": "Does it take high level source code and output JavaScript? Then yes. Otherwise, who cares?"
				}
			]
		},
		"call by sharing": {
			"alias": "pass by value",
			"creator": "",
			"date": "2015-09-26T18:54:03.453Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"specific": {
			"value": "Your question is likely too specific for this channel. If searching for a library: google. Otherwise asking on StackOverflow will give you a better chance of getting an answer.",
			"creator": "GreenJello",
			"date": "2015-09-28T06:58:48.810Z",
			"popularity": 8,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2015-09-28T07:00:09.310Z",
					"editor": "GreenJello",
					"old-value": "This question is likely too specific for this channel. If searching for a library: google. Otherwise asking on StackOverflow will give you a better chance of getting an answer.",
					"new-value": "Your question is likely too specific for this channel. If searching for a library: google. Otherwise asking on StackOverflow will give you a better chance of getting an answer."
				}
			]
		},
		"getters/setters": {
			"value": "Getters and Setters are incompatible with the reflective semantics of JS. Using them will result in code that interacts in awkward (and error-prone!) ways with idiomatic JS libraries. They're also usually harder to optimise and reason about. Since JS isn't a message-passing language, using plain properties is usually a better idea.",
			"creator": "Sorella",
			"date": "2015-09-28T19:30:58.152Z",
			"popularity": 30,
			"editors": [],
			"changes": []
		},
		"getters": {
			"alias": "getters/setters",
			"creator": "Sorella",
			"date": "2015-09-28T19:31:12.508Z",
			"popularity": 13,
			"editors": [],
			"changes": []
		},
		"setters": {
			"alias": "getters/setters",
			"creator": "Sorella",
			"date": "2015-09-28T19:31:21.222Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"ptc": {
			"value": "Proper Tail Calls are a guarantee that all calls in tail position will be executed using constant stack. ES6 mandates that implementations provide proper tail calls, which means they must optimise all calls in tail position (see !tco).",
			"creator": "Sorella",
			"date": "2015-09-29T19:12:22.840Z",
			"popularity": 4,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2015-09-29T19:15:01.630Z",
					"editor": "Sorella",
					"old-value": "Proper Tail Calls are a guarantee that all calls in tail position will be executed using constant stack. ES6 mandates that implementations provide proper tail calls, which means they must optimise all calls in tail position.",
					"new-value": "Proper Tail Calls are a guarantee that all calls in tail position will be executed using constant stack. ES6 mandates that implementations provide proper tail calls, which means they must optimise all calls in tail position (see !tco).",
					"regex": "s/\\.$/ (see !tco)./"
				}
			]
		},
		"plugin": {
			"value": "Questions about (jQuery) plugins tend to not get answered here. You can try asking in a more specific channel like #jquery or on StackOverflow. Be sure to include the minimal code to show your problem.",
			"creator": "GreenJello",
			"date": "2015-10-02T02:30:50.961Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"gtor": {
			"value": "https://github.com/kriskowal/gtor",
			"creator": "jaawerth",
			"date": "2015-10-03T19:02:38.390Z",
			"popularity": 20,
			"editors": [],
			"changes": []
		},
		"prototypes": {
			"value": "Prototypes are fully working example objects that you can clone and extend to make new objects. This is what Prototype-based OO is all about. JS's built-in prototypes are magical, but try to follow that philosophy to an extent, so String.prototype looks like an empty String, Array.prototype like an empty array, etc.",
			"creator": "Sorella",
			"date": "2015-10-04T14:41:37.686Z",
			"popularity": 14,
			"editors": [],
			"changes": []
		},
		"es6 resources": {
			"value": "ES6 Learning: https://github.com/ericdouglas/ES6-Learning - a resource guide for learning ES6 including books (free and otherwise), tutorials, videos, and more.",
			"creator": "jaawerth",
			"date": "2015-10-08T19:52:50.011Z",
			"popularity": 8,
			"editors": [],
			"changes": []
		},
		"async series": {
			"value": "Run promise-returning functions in series: https://gist.github.com/jaawerth/4bcc85f88cfa97d5d4b8",
			"creator": "jaawerth",
			"date": "2015-10-08T23:36:58.988Z",
			"popularity": 29,
			"editors": [],
			"changes": []
		},
		"promise series": {
			"alias": "async series",
			"creator": "jaawerth",
			"date": "2015-10-08T23:38:17.012Z",
			"popularity": 8,
			"editors": [
				"jaawerth"
			],
			"changes": [
				{
					"date": "2015-10-20T02:24:39.341Z",
					"editor": "jaawerth",
					"old-alias": "async series",
					"new-alias": "async series"
				}
			]
		},
		"infinite scroll": {
			"value": "The complete conceptual guide to building a properly functioning, accessible infinite scrolling implementation: http://tumbledry.org/2011/05/12/screw_hashbangs_building",
			"creator": "joepie91",
			"date": "2015-10-12T17:47:25.155Z",
			"popularity": 2,
			"editors": [
				"joepie91"
			],
			"changes": [
				{
					"date": "2015-10-12T17:47:53.564Z",
					"editor": "joepie91",
					"old-value": "The complete guide to building a properly functioning, accessible infinite scrolling implementation: http://tumbledry.org/2011/05/12/screw_hashbangs_building",
					"new-value": "The complete conceptual guide to building a properly functioning, accessible infinite scrolling implementation: http://tumbledry.org/2011/05/12/screw_hashbangs_building"
				}
			]
		},
		"whichnvm": {
			"value": "nvm ( http://nvm.sh / #nvm ) lets you change node versions per-user/per-shell. nave ( https://www.npmjs.com/package/nave ) is for per-user/per-SUBshell. n ( https://www.npmjs.com/package/n ) is for a single, global, system-wide node.",
			"creator": "ljharb",
			"date": "2015-10-13T22:25:25.927Z",
			"popularity": 133,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2015-10-13T22:26:18.329Z",
					"editor": "ljharb",
					"old-value": "nvm ( http://nvm.sh ) lets you change node versions per-user/per-shell. nave ( https://www.npmjs.com/package/nave ) is for per-user/per-SUBshell. n ( https://www.npmjs.com/package/n ) is for a single, global, system-wide node.",
					"new-value": "nvm ( http://nvm.sh / #nvm ) lets you change node versions per-user/per-shell. nave ( https://www.npmjs.com/package/nave ) is for per-user/per-SUBshell. n ( https://www.npmjs.com/package/n ) is for a single, global, system-wide node."
				}
			]
		},
		"es6 resource guide": {
			"alias": "es6 resources",
			"creator": "jaawerth",
			"date": "2015-10-16T15:54:31.062Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"getter/setter": {
			"alias": "getters/setters",
			"creator": "",
			"date": "2015-10-23T20:01:00.629Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"spawn": {
			"value": "ES6 generators can be used with a \"spawn\" functions to create mostly-identical behavior to ES2018's async/await. Spawn implementation & example: https://gist.github.com/jaawerth/91ec6f6e65583a1ddacf - See also: !async/await",
			"creator": "jaawerth",
			"date": "2015-10-23T21:47:42.318Z",
			"popularity": 33,
			"editors": [
				"jaawerth"
			],
			"changes": [
				{
					"date": "2017-04-08T18:11:30.204Z",
					"editor": "jaawerth",
					"old-value": "ES6 generators can be used with a \"spawn\" functions to create coroutines with identical behavior to ES7's async/await. Spawn implementation & example: https://gist.github.com/jaawerth/91ec6f6e65583a1ddacf - See also: !async/await",
					"new-value": "ES6 generators can be used with a \"spawn\" functions to create mostly-identical behavior to ES2018's async/await. Spawn implementation & example: https://gist.github.com/jaawerth/91ec6f6e65583a1ddacf - See also: !async/await"
				}
			]
		},
		"stop soap": {
			"value": "Stop SOAP! https://web.archive.org/web/20130708174927/http://stopsoap.com/",
			"creator": "ljharb",
			"date": "2015-10-27T01:44:28.860Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"mutability": {
			"value": "Exterior mutability is the ability to completely change what value a variable binding is pointing at. Interior mutability is the ability to change a value without changing the binding. Shared mutability is almost always bad.",
			"creator": "Havvy",
			"date": "2015-10-27T10:08:07.497Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"noclick": {
			"alias": "onfoo",
			"creator": "",
			"date": "2015-10-28T08:01:44.894Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"mongo only": {
			"value": "Mongo only pawn in game of life. http://i.imgur.com/O2qQl8a.png",
			"creator": "jaawerth",
			"date": "2015-10-28T08:58:11.757Z",
			"popularity": 38,
			"editors": [
				"jaawerth"
			],
			"changes": [
				{
					"date": "2015-10-28T08:58:33.999Z",
					"editor": "jaawerth",
					"old-value": "Mongo only pawn in game of life. https://www.youtube.com/watch?v=L7QF32mxftE",
					"new-value": "Mongo only pawn in game of life. http://i.imgur.com/O2qQl8a.png"
				}
			]
		},
		"throttle": {
			"value": "Throttle implementation: https://gist.github.com/jaawerth/1fdd3dee73ef8747def9",
			"creator": "jaawerth",
			"date": "2015-10-28T11:08:04.960Z",
			"popularity": 14,
			"editors": [
				"jaawerth"
			],
			"changes": [
				{
					"date": "2015-10-28T11:08:19.394Z",
					"editor": "jaawerth",
					"old-value": "https://gist.github.com/jaawerth/1fdd3dee73ef8747def9",
					"new-value": "Throttle implementation: https://gist.github.com/jaawerth/1fdd3dee73ef8747def9"
				}
			]
		},
		"soap": {
			"alias": "stop soap",
			"creator": "ljharb",
			"date": "2015-10-29T02:28:13.981Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"object.observe": {
			"value": "The Object.observe specification aimed to make it possible to write data-bindings that relied on changes to objects. It was a draft specification for 3 years and only implemented by Chrome/v8. As of November 2015 it has been removed from the standards track and won't become a standard anymore. Alternatives include Proxies, and getters & setters. See https://mail.mozilla.org/pipermail/es-discuss/2015-November/044684.html See https://mail.mozilla.org/pipermail/es-discuss/2015-November/044684.html",
			"creator": "Sorella",
			"date": "2015-11-03T23:55:55.065Z",
			"popularity": 6,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2015-11-03T23:57:04.043Z",
					"editor": "Sorella",
					"old-value": "The Object.observe specification aimed to make it possible to write data-bindings that relied on changes to objects. It was a draft specification for 3 years and only implemented by Chrome/v8. As of November 2015 it has been removed from the standards track and won't become a standard anymore. Alternatives include Proxies (spec draft)",
					"new-value": "The Object.observe specification aimed to make it possible to write data-bindings that relied on changes to objects. It was a draft specification for 3 years and only implemented by Chrome/v8. As of November 2015 it has been removed from the standards track and won't become a standard anymore. Alternatives include Proxies (spec draft), and getters & setters.",
					"regex": "s/$/, and getters & setters./"
				},
				{
					"date": "2015-11-06T20:02:42.355Z",
					"editor": "Sorella",
					"old-value": "The Object.observe specification aimed to make it possible to write data-bindings that relied on changes to objects. It was a draft specification for 3 years and only implemented by Chrome/v8. As of November 2015 it has been removed from the standards track and won't become a standard anymore. Alternatives include Proxies (spec draft), and getters & setters.",
					"new-value": "The Object.observe specification aimed to make it possible to write data-bindings that relied on changes to objects. It was a draft specification for 3 years and only implemented by Chrome/v8. As of November 2015 it has been removed from the standards track and won't become a standard anymore. Alternatives include Proxies (spec draft), and getters & setters. See https://mail.mozilla.org/pipermail/es-discuss/2015-November/044684.html",
					"regex": "s/$/ See https:\\/\\/mail.mozilla.org\\/pipermail\\/es-discuss\\/2015-November\\/044684.html/"
				},
				{
					"date": "2015-11-06T20:07:15.855Z",
					"editor": "Sorella",
					"old-value": "The Object.observe specification aimed to make it possible to write data-bindings that relied on changes to objects. It was a draft specification for 3 years and only implemented by Chrome/v8. As of November 2015 it has been removed from the standards track and won't become a standard anymore. Alternatives include Proxies (spec draft), and getters & setters. See https://mail.mozilla.org/pipermail/es-discuss/2015-November/044684.html",
					"new-value": "The Object.observe specification aimed to make it possible to write data-bindings that relied on changes to objects. It was a draft specification for 3 years and only implemented by Chrome/v8. As of November 2015 it has been removed from the standards track and won't become a standard anymore. Alternatives include Proxies (spec draft), and getters & setters. See https://mail.mozilla.org/pipermail/es-discuss/2015-November/044684.html See https://mail.mozilla.org/pipermail/es-discuss/2015-November/044684.html",
					"regex": "s/$/ See https:\\/\\/mail.mozilla.org\\/pipermail\\/es-discuss\\/2015-November\\/044684.html/"
				},
				{
					"date": "2016-01-24T04:59:06.265Z",
					"editor": "Sorella",
					"old-value": "The Object.observe specification aimed to make it possible to write data-bindings that relied on changes to objects. It was a draft specification for 3 years and only implemented by Chrome/v8. As of November 2015 it has been removed from the standards track and won't become a standard anymore. Alternatives include Proxies (spec draft), and getters & setters. See https://mail.mozilla.org/pipermail/es-discuss/2015-November/044684.html See https://mail.mozilla.org/pipermail/es-discuss/2015-November/044684.html",
					"new-value": "The Object.observe specification aimed to make it possible to write data-bindings that relied on changes to objects. It was a draft specification for 3 years and only implemented by Chrome/v8. As of November 2015 it has been removed from the standards track and won't become a standard anymore. Alternatives include Proxies, and getters & setters. See https://mail.mozilla.org/pipermail/es-discuss/2015-November/044684.html See https://mail.mozilla.org/pipermail/es-discuss/2015-November/044684.html",
					"regex": "s/ \\(spec draft\\)//"
				}
			]
		},
		"is iteration fast?": {
			"value": "Higher-order functions (map, reduce, etc) can be made as fast as their for loop counterparts. See https://www.quora.com/Are-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta for details.",
			"creator": "Sorella",
			"date": "2015-11-04T03:05:56.074Z",
			"popularity": 20,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2016-12-17T03:11:47.908Z",
					"editor": "Sorella",
					"old-value": "Higher-order functions (map, reduce, etc) can be made as fast as their for looop counterparts. See https://www.quora.com/Are-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta for details.",
					"new-value": "Higher-order functions (map, reduce, etc) can be made as fast as their for loop counterparts. See https://www.quora.com/Are-functions-like-map-reduce-and-filter-already-optimized-for-traversing-array/answer/Quildreen-Motta for details.",
					"regex": "s/looop/loop/"
				}
			]
		},
		"mongo pawn": {
			"alias": "mongo only",
			"creator": "jaawerth",
			"date": "2015-11-04T06:17:22.776Z",
			"popularity": 2,
			"editors": [
				"jaawerth"
			],
			"changes": [
				{
					"date": "2015-11-04T06:17:33.567Z",
					"editor": "jaawerth",
					"old-alias": "mongo only",
					"new-alias": "mongo only"
				}
			]
		},
		"javascript": {
			"value": "JavaScript, often abbreviated as JS, is a high-level, dynamic, weakly typed, object-based, multi-paradigm, and interpreted client-side programming language. Alongside HTML and CSS, JavaScript is one of the three core technologies of World Wide Web content production.",
			"creator": "ljharb",
			"date": "2015-11-04T20:31:04.390Z",
			"popularity": 47,
			"editors": [
				"ljharb",
				"Xinn",
				"notchris"
			],
			"changes": [
				{
					"date": "2015-12-23T02:17:37.579Z",
					"editor": "ljharb",
					"old-value": "JavaScript! Ask questions in ##js - read the !spec - read some !books - learn !node.js",
					"new-value": "JavaScript! Ask questions in #jshotline - read the !spec - read some !books - learn !node.js"
				},
				{
					"date": "2015-12-23T02:17:44.703Z",
					"editor": "ljharb",
					"old-value": "JavaScript! Ask questions in #jshotline - read the !spec - read some !books - learn !node.js",
					"new-value": "JavaScript! Ask questions in #jshotline - read the !spec - read some !books - learn !node.js and ask about it in #node.js"
				},
				{
					"date": "2015-12-24T04:44:30.528Z",
					"editor": "ljharb",
					"old-value": "JavaScript! Ask questions in #jshotline - read the !spec - read some !books - learn !node.js and ask about it in #node.js",
					"new-value": "JavaScript! Ask questions in #js-irc - read the !spec - read some !books - learn !node.js and ask about it in #node.js"
				},
				{
					"date": "2017-07-17T10:37:05.205Z",
					"editor": "Xinn",
					"old-value": "JavaScript! Ask questions in #js-irc - read the !spec - read some !books - learn !node.js and ask about it in #node.js",
					"new-value": "JavaScript, often abbreviated as JS, is a high-level, dynamic, weakly typed, object-based, multi-paradigm, and interpreted client-side programming language. Alongside HTML and CSS, JavaScript is one of the three core technologies of World Wide Web content production."
				},
				{
					"date": "2018-10-01T19:43:58.247Z",
					"editor": "notchris",
					"old-value": "JavaScript, often abbreviated as JS, is a high-level, dynamic, weakly typed, object-based, multi-paradigm, and interpreted client-side programming language. Alongside HTML and CSS, JavaScript is one of the three core technologies of World Wide Web content production.",
					"new-value": "JAVA"
				},
				{
					"date": "2018-10-16T11:23:07.237Z",
					"editor": "ljharb",
					"old-value": "JAVA",
					"new-value": "JavaScript, often abbreviated as JS, is a high-level, dynamic, weakly typed, object-based, multi-paradigm, and interpreted client-side programming language. Alongside HTML and CSS, JavaScript is one of the three core technologies of World Wide Web content production."
				}
			]
		},
		"nvm": {
			"alias": "whichnvm",
			"creator": "ljharb",
			"date": "2015-11-05T02:46:22.908Z",
			"popularity": 73,
			"editors": [],
			"changes": []
		},
		"zip": {
			"value": "|> function zip(xs, ys) { return xs.map(function (x, i) { return [x, ys[i]]; }); }",
			"creator": "ljharb",
			"date": "2015-11-09T02:59:50.974Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"server data": {
			"value": "There's 3 options to properly get data from the server to the client: 1) fetch request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\"application/json\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly. See also !fetch",
			"creator": "ljharb",
			"date": "2015-11-10T10:18:02.124Z",
			"popularity": 104,
			"editors": [
				"GreenJello",
				"graingert",
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-09-02T11:23:42.850Z",
					"editor": "GreenJello",
					"old-value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\"application/json\"></script>, read and parse it from JS",
					"new-value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\"application/json\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body"
				},
				{
					"date": "2018-01-11T15:26:26.068Z",
					"editor": "graingert",
					"old-value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\"application/json\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body",
					"new-value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\"application/json\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly."
				},
				{
					"date": "2018-01-15T23:10:47.580Z",
					"editor": "graingert",
					"old-value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\"application/json\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly.",
					"new-value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, either in the script and read with document.currentScript or on the relevent dom node. 3) <script type=\"application/json\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the"
				},
				{
					"date": "2018-01-16T07:49:06.042Z",
					"editor": "ljharb",
					"old-value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, either in the script and read with document.currentScript or on the relevent dom node. 3) <script type=\"application/json\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the",
					"new-value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\\\"application/json\\\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly."
				},
				{
					"date": "2018-01-25T07:08:16.038Z",
					"editor": "ljharb",
					"old-value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\\\"application/json\\\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly.",
					"new-value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\"application/json\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly."
				},
				{
					"date": "2019-01-06T18:19:20.306Z",
					"editor": "graingert",
					"old-value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\"application/json\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly.",
					"new-value": "There's 3 options to properly get data from the server to the client: 1) fetch request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\"application/json\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly. See also !fetch"
				}
			]
		},
		"import": {
			"alias": "es6 modules",
			"creator": "ljharb",
			"date": "2015-11-12T00:32:51.936Z",
			"popularity": 81,
			"editors": [],
			"changes": []
		},
		"esbin": {
			"value": "To create a working demo of your issue that relies on es6/es2015, use http://www.es6fiddle.net/ . If you need html as well, use https://jsfiddle.net/ and select \"babel\" under \"Languages\"",
			"creator": "diamonds",
			"date": "2015-11-12T21:36:23.988Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"proposals": {
			"value": "See https://github.com/tc39/ecma262 for a list of proposed ECMAScript features (don't forget to check the stage 0 proposals!)",
			"creator": "diamonds",
			"date": "2015-12-02T00:57:27.431Z",
			"popularity": 9,
			"editors": [],
			"changes": []
		},
		"boxing": {
			"value": "Why do these primitives have prototype methods?! http://www.jisaacks.com/javascript-boxing/",
			"creator": "jaawerth",
			"date": "2015-12-05T07:22:37.822Z",
			"popularity": 1,
			"editors": [
				"jaawerth"
			],
			"changes": [
				{
					"date": "2015-12-05T07:22:53.281Z",
					"editor": "jaawerth",
					"old-value": "Why do this primitives have prototype methods?! http://www.jisaacks.com/javascript-boxing/",
					"new-value": "Why do these primitives have prototype methods?! http://www.jisaacks.com/javascript-boxing/"
				}
			]
		},
		"poodle": {
			"value": "huh?",
			"creator": "GreenJello",
			"date": "2015-12-09T08:55:53.589Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"symbols": {
			"value": "See https://hacks.mozilla.org/2015/06/es6-in-depth-symbols/",
			"creator": "deltab",
			"date": "2015-12-13T09:55:16.424Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"for in": {
			"alias": "for..in",
			"creator": "Sorella",
			"date": "2015-12-20T02:10:23.612Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"sjw": {
			"value": "http://ebb.org/bkuhn/blog/2015/12/02/sjw.html",
			"creator": "ljharb",
			"date": "2015-12-23T02:40:54.416Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"concrete": {
			"value": "Here's a concrete example: http://static.squarespace.com/static/528d0207e4b090f62f2c12e6/t/52adef21e4b09af7f3ca6647/1387130657293/concrete.jpg",
			"creator": "ljharb",
			"date": "2016-01-03T06:06:08.105Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"concrete example": {
			"alias": "concrete",
			"creator": "ljharb",
			"date": "2016-01-03T06:06:13.810Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"spoon-fed": {
			"alias": "homework",
			"creator": "Sorella",
			"date": "2016-01-04T20:27:15.637Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"should i use nosql": {
			"value": "The rule of thumb is that unless you know exactly, perfectly why you *need* (super, extra, duper emphasis on *need*), use a relational DB.",
			"creator": "Sorella",
			"date": "2016-01-06T21:36:43.530Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"timezones": {
			"value": "Timezones are hard. https://upload.wikimedia.org/wikipedia/commons/c/c8/UTC_hue4map_ATA.png",
			"creator": "ljharb",
			"date": "2016-01-18T05:34:46.042Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"in": {
			"value": "in is not to detect if a value is in an array. Use Array#indexOf, or Array#includes in ES7. in checks if the property with that name is defined on the object or object's prototype",
			"creator": "bradleymeck",
			"date": "2016-01-20T02:38:25.162Z",
			"popularity": 2,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-03-09T23:50:05.900Z",
					"editor": "ljharb",
					"old-value": "in is not to detect if a value is in an array. Use Array#indexOf. in checks if the property with that name is defined on the object or object's prototype",
					"new-value": "in is not to detect if a value is in an array. Use Array#indexOf, or Array#includes in ES7. in checks if the property with that name is defined on the object or object's prototype",
					"regex": "s/indexOf/indexOf, or Array#includes in ES7/"
				}
			]
		},
		"request": {
			"value": "'request' on npm is an old outdated module, consider using whatwg-fetch or superagent instead",
			"creator": "GreenJello",
			"date": "2016-01-23T06:22:22.422Z",
			"popularity": 6,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2016-01-23T06:22:51.431Z",
					"editor": "GreenJello",
					"old-value": "'request' on npm is an old outdated module, consider using whateg-fetch or superagent instead                 ",
					"new-value": "'request' on npm is an old outdated module, consider using whatwg-fetch or superagent instead"
				}
			]
		},
		"states and fates": {
			"value": "https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md",
			"creator": "deltab",
			"date": "2016-01-24T00:06:54.386Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"fates and states": {
			"value": "https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md",
			"creator": "deltab",
			"date": "2016-01-24T00:07:10.176Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"variable variables": {
			"value": "JS doesn't have \"variable variables\" like PHP does (and that's a good thing!). Instead, create an object where the property names are the values you want to variate over. See \"!variable variables example\".",
			"creator": "Havvy",
			"date": "2016-02-03T14:08:36.027Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"variable variables example": {
			"value": "var variateOver = {foo: true, bar: false}; var variable = \"foo\"; console.log(variateOver[variable]);",
			"creator": "Havvy",
			"date": "2016-02-03T14:09:23.914Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"const": {
			"value": "When transpiling or on node 6+, always use `const`. If you can't avoid reassigning the variable (try!), use `let`. Never use `var` unless you are relying on !hoisting (which you shouldn't be).",
			"creator": "ljharb",
			"date": "2016-02-05T00:30:21.978Z",
			"popularity": 85,
			"editors": [
				"ljharb",
				"Agamemnus"
			],
			"changes": [
				{
					"date": "2017-03-31T02:37:21.402Z",
					"editor": "ljharb",
					"old-value": "When transpiling, always use `const`. If you can't avoid reassigning the variable (try!), use `let`. Never use `var` unless you are relying on !hoisting (which you shouldn't be).",
					"new-value": "When transpiling or on node 6+, always use `const`. If you can't avoid reassigning the variable (try!), use `let`. Never use `var` unless you are relying on !hoisting (which you shouldn't be)."
				},
				{
					"date": "2018-06-11T20:17:45.130Z",
					"editor": "Agamemnus",
					"old-value": "When transpiling or on node 6+, always use `const`. If you can't avoid reassigning the variable (try!), use `let`. Never use `var` unless you are relying on !hoisting (which you shouldn't be).",
					"new-value": "https://jamie.build/const / https://medium.com/@cherp/const-is-fucking-useful-8f2b4e6652ea / maybe just consider var sometimes"
				},
				{
					"date": "2018-06-11T21:01:28.456Z",
					"editor": "Agamemnus",
					"old-value": "https://jamie.build/const / https://medium.com/@cherp/const-is-fucking-useful-8f2b4e6652ea / maybe just consider var sometimes",
					"new-value": "A more stable code base might want to use const more often to indicate intent. If your code base is changing quickly, const could just confuse matters."
				},
				{
					"date": "2018-06-14T18:56:01.327Z",
					"editor": "ljharb",
					"old-value": "A more stable code base might want to use const more often to indicate intent. If your code base is changing quickly, const could just confuse matters.",
					"new-value": "When transpiling or on node 6+, always use `const`. If you can't avoid reassigning the variable (try!), use `let`. Never use `var` unless you are relying on !hoisting (which you shouldn't be)."
				}
			]
		},
		"arrow functions": {
			"value": "An arrow function expression (also known as fat arrow function) has a shorter syntax compared to function expressions and lexically binds the this value (does not bind its own this, arguments, super, or new.target). Arrow functions are always anonymous. — https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions",
			"creator": "deltab",
			"date": "2016-02-12T04:09:02.461Z",
			"popularity": 26,
			"editors": [],
			"changes": []
		},
		"flatmap": {
			"value": "http://bterlson.github.io/proposal-flatMap/",
			"creator": "Havvy",
			"date": "2016-02-17T06:46:04.187Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"histogram": {
			"value": "function histogram (array) { const histogram = new Map(); array.forEach(function (element) { if (Map.has(element) { Map.set(element, Map.get(element) + 1) } else { Map.set(element, 1); } }); return histogram; }",
			"creator": "Havvy",
			"date": "2016-02-24T16:27:57.873Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"es6-compat": {
			"alias": "es6 compatibility",
			"creator": "",
			"date": "2016-03-01T07:29:43.261Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"nodeback": {
			"value": "A \"nodeback\" (or \"Node.js callback\", \"error-first callback\", ...) is a special type of asynchronous callback that is widely used across the Node.js ecosystem. It takes the form of `function(err, result)` (with occasionally different argument names). They can be replaced with !promises",
			"creator": "joepie91",
			"date": "2016-03-02T18:02:36.368Z",
			"popularity": 5,
			"editors": [],
			"changes": []
		},
		"always use braces": {
			"value": "You should always use braces for code blocks (like conditionals and for-loops). Leaving them out can result in bugs and security issues later on: https://gist.github.com/joepie91/203aaa8e36e1eb958fe7",
			"creator": "joepie91",
			"date": "2016-03-06T02:15:04.099Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"nojs": {
			"value": "https://eev.ee/blog/2016/03/06/maybe-we-could-tone-down-the-javascript/ http://idlewords.com/talks/website_obesity.htm",
			"creator": "Havvy",
			"date": "2016-03-08T11:05:25.473Z",
			"popularity": 1,
			"editors": [
				"Havvy"
			],
			"changes": [
				{
					"date": "2016-03-08T11:08:56.846Z",
					"editor": "Havvy",
					"old-value": "https://eev.ee/blog/2016/03/06/maybe-we-could-tone-down-the-javascript/",
					"new-value": "https://eev.ee/blog/2016/03/06/maybe-we-could-tone-down-the-javascript/ http://idlewords.com/talks/website_obesity.htm"
				}
			]
		},
		"modifying natives": {
			"alias": "modifying prototypes",
			"creator": "jaawerth",
			"date": "2016-03-15T08:42:26.769Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"ide": {
			"value": "The only true JS IDE in common use is WebStorm (non-free). Many editors (such as atom and sublime) have IDE like features that integrate with editor-agnostic tools. These include linters, type systems, build tools, and git. For debuggers see !debuggers",
			"creator": "GreenJello",
			"date": "2016-03-15T09:00:22.819Z",
			"popularity": 9,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2016-03-15T09:03:06.322Z",
					"editor": "GreenJello",
					"old-value": "The only true JS IDE in common use is WebStorm (non-free). Many editors (such as atom and sublime) have IDE like features that integrate with editor agnostic tools. These include linters, type systems, build tools, and git. For debuggers use your browser's developer tools or node-inspector. ",
					"new-value": "The only true JS IDE in common use is WebStorm (non-free). Many editors (such as atom and sublime) have IDE like features that integrate with editor agnostic tools. These include linters, type systems, build tools, and git. For debuggers see !debuggers"
				},
				{
					"date": "2016-03-15T09:03:26.667Z",
					"editor": "GreenJello",
					"old-value": "The only true JS IDE in common use is WebStorm (non-free). Many editors (such as atom and sublime) have IDE like features that integrate with editor agnostic tools. These include linters, type systems, build tools, and git. For debuggers see !debuggers",
					"new-value": "The only true JS IDE in common use is WebStorm (non-free). Many editors (such as atom and sublime) have IDE like features that integrate with editor-agnostic tools. These include linters, type systems, build tools, and git. For debuggers see !debuggers"
				}
			]
		},
		"promisify": {
			"value": "For asynchronous functions with a known signature, use a promisify method rather than wrapping it manually. https://gist.github.com/jaawerth/23a38e1354d4e4e0f8df",
			"creator": "jaawerth",
			"date": "2016-03-16T08:41:43.221Z",
			"popularity": 15,
			"editors": [],
			"changes": []
		},
		"getting started": {
			"value": "A guide to getting started with JavaScript and Node.js: https://gist.github.com/joepie91/95ed77b71790442b7e61",
			"creator": "joepie91",
			"date": "2016-03-17T15:06:30.967Z",
			"popularity": 150,
			"editors": [],
			"changes": []
		},
		"delegation": {
			"alias": "event delegation",
			"creator": "ljharb",
			"date": "2016-03-20T07:04:36.502Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"church": {
			"alias": "arrowmagic",
			"creator": "jaawerth",
			"date": "2016-03-24T23:35:40.907Z",
			"popularity": 17,
			"editors": [],
			"changes": []
		},
		"call-by-value": {
			"alias": "pass by value",
			"creator": "",
			"date": "2016-03-25T00:43:09.741Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"is iteration fast": {
			"alias": "is iteration fast?",
			"creator": "Sorella",
			"date": "2016-03-28T23:27:48.156Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"is javascript oo?": {
			"value": "JavaScript supports writing programs with the Object Oriented model, with a prototype-based approach (see \"!oop\" and \"!no classes\"). For a definition of what OOP is, see http://wcook.blogspot.com.br/2012/07/proposal-for-simplified-modern.html",
			"creator": "Sorella",
			"date": "2016-03-30T17:52:28.133Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"mongodb": {
			"value": "MongoDB is a cross-platform document-based DB. It has many issues (in particular, the linearisation algorithm in distributed scenarios is inconsistent, and loses data), and probably isn't the right solution to your problem (see \"!no mongo\" for details).",
			"creator": "Sorella",
			"date": "2016-03-31T09:16:35.520Z",
			"popularity": 38,
			"editors": [
				"Sorella"
			],
			"changes": [
				{
					"date": "2016-03-31T09:19:16.847Z",
					"editor": "Sorella",
					"old-value": "MongoDB is a cross-platform document-based DB. It has many issues, and probably isn't the right solution to your problem. Issues: http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/ see also: http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/",
					"new-value": "MongoDB is a cross-platform document-based DB. It has many issues (in particular, the linearisation algorithm in distributed scenarios is inconsistent, and loses data), and probably isn't the right solution to your problem (see \"!no mongo\" for details)."
				}
			]
		},
		"zalgo": {
			"value": "Don't parse HTML with regex. http://stackoverflow.com/a/1732454",
			"creator": "mmmveggies",
			"date": "2016-05-04T02:55:06.884Z",
			"popularity": 12,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-05-13T20:00:53.869Z",
					"editor": "ljharb",
					"old-value": "http://stackoverflow.com/a/1732454 <-- Please don't do this.",
					"new-value": "Don't parse HTML with regex. http://stackoverflow.com/a/1732454"
				}
			]
		},
		"cthulhu": {
			"alias": "zalgo",
			"creator": "jaawerth",
			"date": "2016-05-04T04:06:48.871Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"promise.try": {
			"value": "What is Promise.try, and why does it matter? http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/",
			"creator": "joepie91",
			"date": "2016-05-11T08:58:16.249Z",
			"popularity": 98,
			"editors": [],
			"changes": []
		},
		"syntaxerror: unexpected token o in json at position 1": {
			"value": "Maybe JSON.parse is receiving an object converted to the string '[object Object]'",
			"creator": "deltab",
			"date": "2016-05-15T10:02:32.308Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"syntaxerror: unexpected token u in json at position 0": {
			"value": "Maybe JSON.parse is receiving 'undefined'",
			"creator": "deltab",
			"date": "2016-05-15T10:04:42.384Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"jwt security": {
			"value": "You shouldn't use JWT for sessions: http://blog.prevoty.com/does-jwt-put-your-web-app-at-risk",
			"creator": "joepie91",
			"date": "2016-05-19T19:06:21.214Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"npm introduction": {
			"value": "A whirlwind tour of how to get started with NPM (correctly): https://gist.github.com/joepie91/9b9dbd8c9ac3b55a65b2",
			"creator": "joepie91_to_go_",
			"date": "2016-05-25T19:22:11.265Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"hof emojis": {
			"value": "map([🌽, 🐮, 🐔], cook) => [🍿, 🍔, 🍳]  | filter([🍿, 🍔, 🍳], isVegetarian) => [🍿, 🍳]  |  reduce([🍿, 🍳], eat) => 💩",
			"creator": "jaawerth",
			"date": "2016-06-11T00:44:07.448Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"jwt sessions": {
			"value": "Don't use JWT for sessions. http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions -- JWT was never meant to be used for sessions, and its popularity happened purely because of marketing: https://youtu.be/GrLtOjCTB1s?t=1h2m44s  |  Instead, use session cookies: https://gist.github.com/joepie91/cf5fd6481a31477b12dc33af453f9a1d",
			"creator": "joepie91",
			"date": "2016-06-13T23:14:15.106Z",
			"popularity": 200,
			"editors": [
				"joepie91"
			],
			"changes": [
				{
					"date": "2018-01-06T01:16:06.535Z",
					"editor": "joepie91",
					"old-value": "Don't use JWT for sessions. http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions",
					"new-value": "Don't use JWT for sessions. http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions -- JWT was never meant to be used for sessions, and its popularity happened purely because of marketing: https://youtu.be/GrLtOjCTB1s?t=1h2m44s"
				},
				{
					"date": "2019-04-14T19:53:51.222Z",
					"editor": "joepie91",
					"old-value": "Don't use JWT for sessions. http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions -- JWT was never meant to be used for sessions, and its popularity happened purely because of marketing: https://youtu.be/GrLtOjCTB1s?t=1h2m44s",
					"new-value": "Don't use JWT for sessions. http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions -- JWT was never meant to be used for sessions, and its popularity happened purely because of marketing: https://youtu.be/GrLtOjCTB1s?t=1h2m44s  |  Instead, use session cookies: https://gist.github.com/joepie91/cf5fd6481a31477b12dc33af453f9a1d"
				}
			]
		},
		"localstorage": {
			"value": "https://developer.mozilla.org/en/docs/Web/API/Window/localStorage",
			"creator": "noethics",
			"date": "2016-06-26T07:22:55.561Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"adder": {
			"value": "function makeAdder (a) { return function (b) { return a + b; }; };  makeAdder(2)(3) === 5;",
			"creator": "Havvy",
			"date": "2016-06-27T11:59:41.973Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"browser crypto": {
			"alias": "crypto",
			"creator": "ljharb",
			"date": "2016-06-28T14:05:06.809Z",
			"popularity": 27,
			"editors": [],
			"changes": []
		},
		"scan": {
			"value": "const scan = (arr, b, f) => arr.reduce((a, b) => { const x = f(a.r, b); return { r: x, v: [...a.v, x] } }, { r: b, v: [] }).v ;",
			"creator": "systemfault",
			"date": "2016-07-02T00:00:27.555Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"mousetrap": {
			"value": "Mousetrap, a simple library for handling keyboard shortcuts in JavaScript. https://craig.is/killing/mice ",
			"creator": "deltab",
			"date": "2016-07-05T04:12:54.610Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"contains": {
			"value": "Method on strings and arrays. Renamed to \"includes\" when it was discovered that using \"contains\" broke the web. (This is why you don't add stringly keyed properties to builtins)",
			"creator": "Havvy",
			"date": "2016-07-05T16:49:38.478Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"next!": {
			"alias": "next",
			"creator": "ljharb",
			"date": "2016-07-06T03:45:44.160Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"es2016": {
			"alias": "es7",
			"creator": "ljharb",
			"date": "2016-07-06T04:44:36.396Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"nomads": {
			"value": "Like monads, but less burritoy and easier to understand.",
			"creator": "Havvy",
			"date": "2016-07-08T08:20:23.507Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"burrito": {
			"value": "https://www.cs.cmu.edu/~edmo/silliness/burrito_monads.pdf",
			"creator": "Havvy",
			"date": "2016-07-08T08:21:37.082Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"es modules": {
			"alias": "es6 modules",
			"creator": "ljharb",
			"date": "2016-07-10T01:24:04.802Z",
			"popularity": 90,
			"editors": [],
			"changes": []
		},
		"ocs": {
			"value": "Object Capability Security. Basically, allowing people to do only what you want them to do. Very important for running untrusted code, like thirdy-party libraries",
			"creator": "Havvy",
			"date": "2016-07-11T08:42:19.989Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"webrtc": {
			"value": "http://web-engineering.info/node/57",
			"creator": "qswz",
			"date": "2016-07-12T02:14:49.164Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"turing complete": {
			"value": "A language is \"Turing complete\" if it can compute all computable things (given infinite memory). It is really easy to be Turing Complete. One Turing Complete language can implement any other one, minus additional capabilities such as printing.",
			"creator": "Havvy",
			"date": "2016-07-15T03:09:10.757Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"install errors": {
			"value": "Paste your NPM install errors here to get a better explanation: http://cryto.net/why-is-npm-broken/",
			"creator": "joepie91",
			"date": "2016-07-18T10:59:16.849Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"mini-require": {
			"value": "https://gist.github.com/caub/cf82c451120373dc1568#file-main-js",
			"creator": "qswz",
			"date": "2016-07-18T12:15:47.147Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"block scoping": {
			"value": "A variable is only accessible until the end of the innermost block that contains it.",
			"creator": "Havvy",
			"date": "2016-07-26T09:43:08.615Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"flip table": {
			"value": "(╯°□°）╯︵ ┻━┻",
			"creator": "joepie91",
			"date": "2016-07-29T04:24:35.946Z",
			"popularity": 4,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-08-03T04:32:18.726Z",
					"editor": "ljharb",
					"old-value": "(╯°□°）╯︵ ┻━┻)",
					"new-value": "(╯°□°）╯︵ ┻━┻"
				}
			]
		},
		"lucky": {
			"value": ">> ducky('javascript mdn'); /*  <--13-- FEELING DUCKY? ---//-- */  function ducky(query) { return \" \" + query + \" => https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; }",
			"creator": "cake`",
			"date": "2016-08-02T04:04:06.026Z",
			"popularity": 7,
			"editors": [
				"cake`"
			],
			"changes": [
				{
					"date": "2016-08-02T04:07:14.642Z",
					"editor": "cake`",
					"old-value": ">> function ducky(query) { return \"https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))); };  /* || ====== FEELING DUCKY? ---> */   ducky(    )",
					"new-value": ">> function ducky(query) { return \"https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))); };  /* || ====== FEELING DUCKY? ---> */   ducky('javascript mdn')"
				},
				{
					"date": "2016-08-02T04:08:21.466Z",
					"editor": "cake`",
					"old-value": ">> function ducky(query) { return \"https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))); };  /* || ====== FEELING DUCKY? ---> */   ducky('javascript mdn')",
					"new-value": ">> function ducky(query) { return query + \" : \" https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; };  /* || ====== FEELING DUCKY? ---> */   ducky('javascript mdn')"
				},
				{
					"date": "2016-08-02T04:08:58.811Z",
					"editor": "cake`",
					"old-value": ">> function ducky(query) { return query + \" : \" https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; };  /* || ====== FEELING DUCKY? ---> */   ducky('javascript mdn')",
					"new-value": ">> function ducky(query) { return query + \" => https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; };  /* || ====== FEELING DUCKY? ---> */   ducky('javascript mdn')"
				},
				{
					"date": "2016-08-02T04:10:01.301Z",
					"editor": "cake`",
					"old-value": ">> function ducky(query) { return query + \" => https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; };  /* || ====== FEELING DUCKY? ---> */   ducky('javascript mdn')",
					"new-value": ">> function ducky(query) { return \" \" + query + \" => https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; };  /* || ====== FEELING DUCKY? ---> */   ducky('javascript mdn')"
				},
				{
					"date": "2016-08-02T04:16:21.744Z",
					"editor": "cake`",
					"old-value": ">> function ducky(query) { return \" \" + query + \" => https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; };  /* || ====== FEELING DUCKY? ---> */   ducky('javascript mdn')",
					"new-value": ">> ducky('javascript mdn'); /*  <--13-- FEELING DUCKY? ---//-- */  function ducky(query) { return \" \" + query + \" => https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; }"
				}
			]
		},
		"burritos": {
			"alias": "burrito",
			"creator": "ljharb",
			"date": "2016-08-03T04:29:36.907Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"authentication": {
			"value": "Please don't write your own auth. Read all of this: http://stackoverflow.com/questions/549/the-definitive-guide-to-form-based-website-authentication",
			"creator": "ljharb",
			"date": "2016-08-03T04:32:58.041Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"typescript": {
			"value": "TypeScript is a typed quasi-superset of JavaScript that compiles to plain JavaScript. http://www.typescriptlang.org/. Questions are best raised in ##typescript",
			"creator": "ljharb",
			"date": "2016-08-03T04:33:19.914Z",
			"popularity": 16,
			"editors": [
				"ljharb",
				"graingert"
			],
			"changes": [
				{
					"date": "2016-08-03T04:33:24.473Z",
					"editor": "ljharb",
					"old-value": "TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. http://www.typescriptlang.org/",
					"new-value": "TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. http://www.typescriptlang.org/ See !ts"
				},
				{
					"date": "2018-02-01T02:47:42.096Z",
					"editor": "graingert",
					"old-value": "TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. http://www.typescriptlang.org/ See !ts",
					"new-value": "TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. https://www.typescriptlang.org"
				},
				{
					"date": "2018-06-14T19:22:14.511Z",
					"editor": "ljharb",
					"old-value": "TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. https://www.typescriptlang.org",
					"new-value": "TypeScript is a typed quasi-superset of JavaScript that compiles to plain JavaScript. http://www.typescriptlang.org/"
				},
				{
					"date": "2018-11-17T19:01:20.620Z",
					"editor": "graingert",
					"old-value": "TypeScript is a typed quasi-superset of JavaScript that compiles to plain JavaScript. http://www.typescriptlang.org/",
					"new-value": "TypeScript is a typed quasi-superset of JavaScript that compiles to plain JavaScript. http://www.typescriptlang.org/. Questions are best raised in #typescript"
				},
				{
					"date": "2018-11-17T19:02:34.482Z",
					"editor": "graingert",
					"old-value": "TypeScript is a typed quasi-superset of JavaScript that compiles to plain JavaScript. http://www.typescriptlang.org/. Questions are best raised in #typescript",
					"new-value": "TypeScript is a typed quasi-superset of JavaScript that compiles to plain JavaScript. http://www.typescriptlang.org/. Questions are best raised in ##typescript"
				}
			]
		},
		"php_note": {
			"value": "associative array (php) == object (js)",
			"creator": "qswz",
			"date": "2016-08-06T12:37:49.228Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"fpguide": {
			"value": "Mostly adequate guide to FP https://drboolean.gitbooks.io/mostly-adequate-guide/content/",
			"creator": "falafel",
			"date": "2016-08-06T18:35:01.505Z",
			"popularity": 1,
			"editors": [
				"falafel"
			],
			"changes": [
				{
					"date": "2016-08-06T18:35:30.344Z",
					"editor": "falafel",
					"old-value": "\"Mostly adequate guide to FP https://drboolean.gitbooks.io/mostly-adequate-guide/content/\"",
					"new-value": "Mostly adequate guide to FP https://drboolean.gitbooks.io/mostly-adequate-guide/content/"
				}
			]
		},
		"js-engines": {
			"value": "https://github.com/a0viedo/demystifying-js-engines",
			"creator": "qswz",
			"date": "2016-08-09T03:26:05.702Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"gc": {
			"value": "Generally speaking - any value with exactly 0 references will be gc'd in the next gc cycle, which could be from now to infinity. However, there are some advanced optimizations that occur to ensure that over collection doesn't occur. Further reading; https://plumbr.eu/handbook/garbage-collection-algorithms",
			"creator": "Havvy",
			"date": "2016-08-11T08:46:19.849Z",
			"popularity": 8,
			"editors": [
				"XinPacking"
			],
			"changes": [
				{
					"date": "2017-01-12T19:34:25.807Z",
					"editor": "XinPacking",
					"old-value": "https://plumbr.eu/handbook/garbage-collection-algorithms",
					"new-value": "Generally speaking - any value with exactly 0 references will be gc'd in the next gc cycle, which could be from now to infinity. However, there are some advanced optimizations that occur to ensure that over collection doesn't occur. Further reading; https://plumbr.eu/handbook/garbage-collection-algorithms"
				}
			]
		},
		"promises faq": {
			"value": "Some frequently answered questions about Promises are answered here: https://gist.github.com/joepie91/4c3a10629a4263a522e3bc4839a28c83",
			"creator": "joepie91",
			"date": "2016-08-16T17:40:37.416Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"node-red": {
			"value": "node-red (http://nodered.org/) is a visual programming system primarily intended for the 'internet of things'..",
			"creator": "Xin",
			"date": "2016-08-17T05:27:38.596Z",
			"popularity": 30,
			"editors": [],
			"changes": []
		},
		"mit": {
			"value": "https://opensource.org/licenses/MIT",
			"creator": "Havvy",
			"date": "2016-08-20T09:57:41.874Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"range2": {
			"value": "(a, b, s=1)=>Array.from({length: (b-a)/s+1}, (_,i)=>a+i*s)",
			"creator": "qswz",
			"date": "2016-08-20T18:27:28.743Z",
			"popularity": 30,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2018-06-03T00:28:10.653Z",
					"editor": "qswz",
					"old-value": "var range=(start,end,step=1)=> Array.from({length:Math.floor((end-start)/step)}, (_,i)=>start+i*step)",
					"new-value": "(a, b, s=1)=>Array.from({length: Math.abs((b-a)/s+Math.sign(b-a))}, (_,i)=>a+i*Math.sign(b-a)*s)"
				},
				{
					"date": "2018-06-03T00:42:10.076Z",
					"editor": "qswz",
					"old-value": "(a, b, s=1)=>Array.from({length: Math.abs((b-a)/s+Math.sign(b-a))}, (_,i)=>a+i*Math.sign(b-a)*s)",
					"new-value": "(a, b, s=1)=>Array.from({length: (b-a)/s+1}, (_,i)=>a+i*s)"
				}
			]
		},
		"es-next": {
			"value": "https://git.io/es-next",
			"creator": "howdoi",
			"date": "2016-08-20T18:30:01.219Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"ffi": {
			"value": "Foreign Function Interface - Calling functions from another language (usually C).",
			"creator": "Havvy",
			"date": "2016-08-21T10:52:41.898Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"pastebin.com": {
			"value": "Don't use pastebin.com, Ads, Spamfilters, Captcha, Adds whitespace, Slow, Ugly, No comment/fork/annotate, Breaks copy/paste, Blocked for some people, etc. See !paste and !fiddle",
			"creator": "Havvy",
			"date": "2016-08-29T08:57:51.224Z",
			"popularity": 40,
			"editors": [
				"qswz",
				"ljharb",
				"MJCD"
			],
			"changes": [
				{
					"date": "2017-11-22T23:38:28.058Z",
					"editor": "qswz",
					"old-value": "Don't use it. Use some sane pastebin like bpaste.net gist.github.com, sprunge.us ix.io . Also see !badpastebin",
					"new-value": "Don't use pastebin.com. Use some sane pastebin like bpaste.net"
				},
				{
					"date": "2017-12-05T23:34:06.053Z",
					"editor": "ljharb",
					"old-value": "Don't use pastebin.com. Use some sane pastebin like bpaste.net",
					"new-value": "Don't use it. Use some sane pastebin like bpaste.net gist.github.com, sprunge.us ix.io . Also see !badpastebin"
				},
				{
					"date": "2019-09-19T22:43:08.460Z",
					"editor": "MJCD",
					"old-value": "Don't use it. Use some sane pastebin like bpaste.net gist.github.com, sprunge.us ix.io . Also see !badpastebin",
					"new-value": "Don't use pastebin.com, Ads, Spamfilters, Captcha, Adds whitespace, Slow, Ugly, No comment/fork/annotate, Breaks copy/paste, Blocked for some people, etc. See !paste and !fiddle"
				}
			]
		},
		"jsx": {
			"value": "JSX is a preprocessor step that adds XML syntax to JavaScript. You can definitely use React without JSX but JSX makes React a lot more elegant. Just like XML, JSX tags have a tag name, attributes, and children. If an attribute value is enclosed in quotes, the value is a string.",
			"creator": "Xin",
			"date": "2016-09-05T18:06:39.221Z",
			"popularity": 5,
			"editors": [],
			"changes": []
		},
		"md": {
			"value": "https://stackedit.io/editor | tags: learn markdown md editor editor tools",
			"creator": "earendel",
			"date": "2016-09-07T11:47:35.080Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"no mongodb": {
			"alias": "no mongo",
			"creator": "ljharb",
			"date": "2016-09-07T22:49:18.439Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"arrow function": {
			"value": "Arrow functions, new in ES2015, are not just shorter function syntax with optional implicit return. They do not bind this/super/arguments/new.target, they don't have a lexical name (for recursion), and can't be `new`ed. http://mdn.io/arrow+functions Examples: `x => x + 2`, `(x, y) => x + y`, `x => { return x * 2; }`",
			"creator": "ljharb",
			"date": "2016-09-15T03:58:03.374Z",
			"popularity": 42,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-09-15T03:58:39.719Z",
					"editor": "ljharb",
					"old-value": "Arrow functions, new in ES2015, are not just shorter function syntax. They do not bind this/super/arguments/new.target, they don't have a lexical name (for recursion), and can't be `new`ed. http://mdn.io/arrow+functions",
					"new-value": "Arrow functions, new in ES2015, are not just shorter function syntax with optional implicit return. They do not bind this/super/arguments/new.target, they don't have a lexical name (for recursion), and can't be `new`ed. http://mdn.io/arrow+functions Examples: `x => x + 2`, `(x, y) => x + y`, `x => { return x * 2; }`"
				}
			]
		},
		"haskell is useless": {
			"value": "https://www.youtube.com/watch?v=iSmkqocn0oQ",
			"creator": "jaawerth",
			"date": "2016-09-16T08:08:14.068Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"airbnb": {
			"value": "Airbnb's javascript style guide is an extremely comprehensive set of default style rules (which you can then customize as you see fit) - setup instructions can be found here: https://github.com/airbnb/javascript - see also !eslint and !airbnb-react",
			"creator": "XinzZz",
			"date": "2016-09-20T18:12:53.786Z",
			"popularity": 246,
			"editors": [
				"ljharb",
				"graingert",
				"MJCD",
				"niggler",
				"sinclair"
			],
			"changes": [
				{
					"date": "2016-09-24T22:00:43.769Z",
					"editor": "ljharb",
					"old-value": "We tend to support airbnb/ljharb's javascript styles guide - it can be found here; https://github.com/airbnb/javascript",
					"new-value": "We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript"
				},
				{
					"date": "2017-06-04T23:36:31.848Z",
					"editor": "graingert",
					"old-value": "We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript",
					"new-value": "We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with https://www.npmjs.com/package/eslint-config-airbnb-base"
				},
				{
					"date": "2017-06-06T20:05:57.414Z",
					"editor": "graingert",
					"old-value": "We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with https://www.npmjs.com/package/eslint-config-airbnb-base",
					"new-value": "We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with https://www.npmjs.com/package/eslint-config-airbnb-base see also !eslint"
				},
				{
					"date": "2019-03-06T23:04:32.467Z",
					"editor": "graingert",
					"old-value": "We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with https://www.npmjs.com/package/eslint-config-airbnb-base see also !eslint",
					"new-value": "We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{\"extends\": \"airbnb-base\"}' > .eslintrc` see also !eslint"
				},
				{
					"date": "2019-09-22T18:10:06.279Z",
					"editor": "graingert",
					"old-value": "We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{\"extends\": \"airbnb-base\"}' > .eslintrc` see also !eslint",
					"new-value": "We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{\"extends\": \"airbnb-base\"}' > .eslintrc` see also !eslint and !airbnb-react"
				},
				{
					"date": "2019-10-09T11:00:41.925Z",
					"editor": "MJCD",
					"old-value": "We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{\"extends\": \"airbnb-base\"}' > .eslintrc` see also !eslint and !airbnb-react",
					"new-value": "Airbnb's javascript style guide is an extremely comprehensive set of default style rules (which you can then customize as you see fit) - setup instructions can be found here: https://github.com/airbnb/javascript - see also !eslint and !airbnb-react"
				},
				{
					"date": "2019-10-09T11:02:30.331Z",
					"editor": "ljharb",
					"old-value": "Airbnb's javascript style guide is an extremely comprehensive set of default style rules (which you can then customize as you see fit) - setup instructions can be found here: https://github.com/airbnb/javascript - see also !eslint and !airbnb-react",
					"new-value": "The most used JS style guide and eslint config is airbnb's - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{\\\"extends\\\": \\\"airbnb-base\\\"}' > .eslintrc` see also !eslint and !airbnb-react"
				},
				{
					"date": "2019-10-09T11:46:29.091Z",
					"editor": "niggler",
					"old-value": "The most used JS style guide and eslint config is airbnb's - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{\\\"extends\\\": \\\"airbnb-base\\\"}' > .eslintrc` see also !eslint and !airbnb-react",
					"new-value": "Airbnb's javascript style guide is an extremely comprehensive set of default style rules (which you can then customize as you see fit) - setup instructions can be found here: https://github.com/airbnb/javascript - see also !eslint and !airbnb-react"
				},
				{
					"date": "2019-10-10T05:12:34.568Z",
					"editor": "graingert",
					"old-value": "Airbnb's javascript style guide is an extremely comprehensive set of default style rules (which you can then customize as you see fit) - setup instructions can be found here: https://github.com/airbnb/javascript - see also !eslint and !airbnb-react",
					"new-value": "Airbnb's javascript style guide is the only good set of default style rules and the official mandated preset of ##javascript (which you MUST NOT customize) - setup instructions can be found here: https://github.com/airbnb/javascript - see also !eslint and !airbnb-react"
				},
				{
					"date": "2019-10-10T05:14:33.022Z",
					"editor": "sinclair",
					"old-value": "Airbnb's javascript style guide is the only good set of default style rules and the official mandated preset of ##javascript (which you MUST NOT customize) - setup instructions can be found here: https://github.com/airbnb/javascript - see also !eslint and !airbnb-react",
					"new-value": "Airbnb's javascript style guide is an extremely comprehensive set of default style rules (which you can then customize as you see fit) - setup instructions can be found here: https://github.com/airbnb/javascript - see also !eslint and !airbnb-react"
				}
			]
		},
		"proxy": {
			"value": "\"Proxies are the only way to make a spec compliant DOM in JS\" ... In a land where getters and setters rain from the sky, objects are dynamically shaped at runtime due to side effects, interfaces may require breaking expected JS guarantees, and performance is secondary, Proxies are king.",
			"creator": "bradleymeck",
			"date": "2016-09-22T01:51:21.878Z",
			"popularity": 4,
			"editors": [
				"bradleymeck"
			],
			"changes": [
				{
					"date": "2016-09-22T01:51:37.820Z",
					"editor": "bradleymeck",
					"old-value": "\"Proxies are the only way to make a spec compliant DOM in JS\".. In a land where getters and setters rain from the sky and are dynamically shaped at runtime due to side effects and performance was secondary, Proxies are king.",
					"new-value": "\"Proxies are the only way to make a spec compliant DOM in JS\" ... In a land where getters and setters rain from the sky and are dynamically shaped at runtime due to side effects and performance was secondary, Proxies are king."
				},
				{
					"date": "2016-09-22T01:52:41.326Z",
					"editor": "bradleymeck",
					"old-value": "\"Proxies are the only way to make a spec compliant DOM in JS\" ... In a land where getters and setters rain from the sky and are dynamically shaped at runtime due to side effects and performance was secondary, Proxies are king.",
					"new-value": "\"Proxies are the only way to make a spec compliant DOM in JS\" ... In a land where getters and setters rain from the sky, objects are dynamically shaped at runtime due to side effects, interfaces may require breaking expected JS guarantees, and performance is secondary, Proxies are king."
				}
			]
		},
		"proxies": {
			"alias": "proxy",
			"creator": "bradleymeck",
			"date": "2016-09-22T01:53:36.621Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"programming sucks": {
			"value": "https://www.stilldrinking.org/programming-sucks",
			"creator": "jaawerth",
			"date": "2016-09-23T03:36:43.597Z",
			"popularity": 14,
			"editors": [],
			"changes": []
		},
		"nested-accessor": {
			"value": "var o={a:{b:2}}; 'a.b'.split('.').reduce((x,k)=>x[k], o)",
			"creator": "qswz",
			"date": "2016-09-26T12:46:24.102Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"jwt": {
			"alias": "jwt sessions",
			"creator": "gkatsev",
			"date": "2016-09-28T01:19:09.907Z",
			"popularity": 145,
			"editors": [],
			"changes": []
		},
		"range3": {
			"value": "const range = (length, cb=x=>x) => Array.from({length}, (_,i)=>cb(i))",
			"creator": "qswz",
			"date": "2016-09-28T17:40:47.869Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"stuck": {
			"value": "When stuck, 1) take a break/work on something else for 10-30 minutes, 2) google it, 3) if still stuck ask a clear question preferably with a copy of your problematic code in full or a jsfiddle with the line number(s) in question. See also; '!ask', '!code', '!doesnt work'",
			"creator": "Xin",
			"date": "2016-09-30T09:48:40.104Z",
			"popularity": 5,
			"editors": [
				"Xin"
			],
			"changes": [
				{
					"date": "2016-09-30T09:49:41.383Z",
					"editor": "Xin",
					"old-value": "When stuck, 1) take a break/work on something else for 10-30 minutes, 2) google it, 3) if still stuck ask a clear question preferably with a copy of your problematic code in full or a jsfiddle with the line number(s) in question",
					"new-value": "When stuck, 1) take a break/work on something else for 10-30 minutes, 2) google it, 3) if still stuck ask a clear question preferably with a copy of your problematic code in full or a jsfiddle with the line number(s) in question. See also; '!ask', '!code', '!doesnt work'"
				}
			]
		},
		"macro": {
			"value": "Asking about is X faster than Y? Is there an actual results based reason you are concerned about the performance of either X *OR* Y? If the answer is yes to all of these - have you generated a profile using your browsers dev tools running a simple test case? If so, you already have your result. End.",
			"creator": "ZhinZhao",
			"date": "2016-10-07T23:23:48.615Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"better": {
			"value": "Asking if X is better than Y? You are the best person to determine this for your exact needs. Ideally, read up on the features and drawbacks of X *AND* Y (google, mdn, stackoverflow, etc) and then if you have any specific points you would like explained - ask about that instead.",
			"creator": "ZhinZhao",
			"date": "2016-10-07T23:36:21.318Z",
			"popularity": 29,
			"editors": [
				"ZhinZhao"
			],
			"changes": [
				{
					"date": "2016-10-07T23:37:19.113Z",
					"editor": "ZhinZhao",
					"old-value": "Asking if X is better than Y? Without your exact project requirements it's really impossible to say. Ideally, read up on the features and drawbacks of X *AND* Y (google, mdn, stackoverflow, etc) and then if you have any specific points you would like explained ask about that instead.",
					"new-value": "Asking if X is better than Y? You are the best person to determine this for your exact needs. Ideally, read up on the features and drawbacks of X *AND* Y (google, mdn, stackoverflow, etc) and then if you have any specific points you would like explained - ask about that instead."
				}
			]
		},
		"faster": {
			"value": "Asking about is X faster than Y? Is there an actual results based reason you are concerned about the performance of either X *OR* Y? If the answer is yes to all of these - have you generated a profile using your browsers dev tools running a simple test case? If so, you already have your result. End.",
			"creator": "ZhinZhao",
			"date": "2016-10-08T00:05:57.160Z",
			"popularity": 58,
			"editors": [],
			"changes": []
		},
		"book2": {
			"value": "https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md#javascript",
			"creator": "qswz",
			"date": "2016-10-11T23:48:38.607Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"rgist": {
			"value": "Please share your react code on https://gist.github.com and name the file '.jsx' for proper syntax highlighting.",
			"creator": "GreenJello",
			"date": "2016-10-21T14:27:15.421Z",
			"popularity": 278,
			"editors": [],
			"changes": []
		},
		"descriptor flags": {
			"value": "JS's properties may be enumerable, writable, and/or configurable. Those flags govern how properties work across the language. For a detailed document on this see https://docs.google.com/document/d/1eEOko0rfQNqX2JwHg8YZj6cixiu9zNxqYJw1SWWBZgk/edit",
			"creator": "Sorella",
			"date": "2016-10-25T19:13:08.026Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"mutation observers": {
			"value": "Mutation observers MAY be applicable if you need to monitor the state of a non-input style HTML node. Ideally however try to consider that whatever logic this usually requires can be implemented in the code that actually does the DOM mutation! Actual use cases for a mutation observer are GREATLY OVERSTATED.",
			"creator": "ljharb",
			"date": "2016-10-26T00:44:52.367Z",
			"popularity": 2,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-10-26T00:45:40.969Z",
					"editor": "ljharb",
					"old-value": "Mutation observers MAY be applicable if you need to monitor the state of a non-input style HTML node. Ideally however try to consider that whatever logic this usually requires can be implemented in your XHR/other callback/Promise in order to perform whatever action you need when ADDING the node! Actual use cases for a mutation",
					"new-value": "Mutation observers MAY be applicable if you need to monitor the state of a non-input style HTML node. Ideally however try to consider that whatever logic this usually requires can be implemented in the code that actually does the DOM mutation! Actual use cases for a mutation observer are GREATLY OVERSTATED."
				}
			]
		},
		"let it go": {
			"value": "https://www.youtube.com/watch?v=moSFlvxnbgk",
			"creator": "qswz",
			"date": "2016-10-26T01:04:22.767Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"scale": {
			"value": "Scale=(a,b,A,B)=>x=> A+(B-A)*(x-a)/(b-a); var scale=Scale(0,1,-100,100); scale(.3)",
			"creator": "qswz_",
			"date": "2016-10-27T22:41:37.602Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"tabs vs spaces": {
			"value": "https://usercontent.irccloud-cdn.com/file/VbS0CciX/Screenshot%20from%202016-02-09%2019%3A22%3A05.png",
			"creator": "Sorella",
			"date": "2016-10-28T02:08:18.776Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"improve-performance speed up your javascript [including dom manipulation]: <http://www.youtube.com/watch?v": {
			"value": "mHtdZgou0qU#t=131s> (56 minutes)",
			"creator": "XinDayZ",
			"date": "2016-10-28T08:48:22.069Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"dynamic_accessor": {
			"value": "get=(o, ...k)=>k.reduce((x,i)=>x[i],o)",
			"creator": "qswz",
			"date": "2016-10-29T11:51:18.239Z",
			"popularity": 0,
			"editors": [
				"qswz",
				"qswz_"
			],
			"changes": [
				{
					"date": "2016-10-29T11:53:15.744Z",
					"editor": "qswz",
					"old-value": "get(o, ...k) => k.reduce( (x,i)=>x[i], o); get({a: { b:1}}, 'a', 'b'); get([[1,2],[3,4]], 1, 0)",
					"new-value": "get = (o, ...k) => k.reduce( (x,i)=>x[i], o); get({a: { b:1}}, 'a', 'b'); get([[1,2],[3,4]], 1, 0)"
				},
				{
					"date": "2016-10-30T21:08:05.249Z",
					"editor": "qswz_",
					"old-value": "get = (o, ...k) => k.reduce( (x,i)=>x[i], o); get({a: { b:1}}, 'a', 'b'); get([[1,2],[3,4]], 1, 0)",
					"new-value": "get=(o, ...k)=>k.reduce((x,i)=>x[i],o)"
				}
			]
		},
		"last2": {
			"value": "for (var i=0;i<3;i++) setTimeout(_=>console.log(i))",
			"creator": "qswz",
			"date": "2016-10-30T19:52:13.528Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"promises2": {
			"value": "http://jsbin.com/hokuruz/edit?js,console",
			"creator": "qswz",
			"date": "2016-10-31T19:05:51.222Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"libs": {
			"value": "This is a channel for help with JavaScript, the language, not for the APIs of some JavaScript library you found. You're going to have an easier time by just reading the documentation for your library, contacting the maintainer, or finding their IRC channel. We probably don't know how it works (see !ded for dedicated channels).",
			"creator": "Sorella",
			"date": "2016-10-31T19:26:37.457Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"rbind": {
			"value": "https://gist.github.com/samcf/c9cc1c7ab0b3c0a1f415dfd7d76cde80",
			"creator": "GreenJello",
			"date": "2016-11-02T20:39:02.103Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"new array()": {
			"value": "JavaScript has literal notation for arrays (`[]`), and you should always use it instead of the more verbose constructor.",
			"creator": "Havvy",
			"date": "2016-11-22T15:52:01.991Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"tdd": {
			"value": "A comprehensive guide to Test Driven Development is available here; https://github.com/dwyl/learn-tdd",
			"creator": "zomg",
			"date": "2016-11-24T18:22:49.476Z",
			"popularity": 8,
			"editors": [
				"SmellyHippy"
			],
			"changes": [
				{
					"date": "2016-12-22T16:35:40.158Z",
					"editor": "SmellyHippy",
					"old-value": "Unit testing with Mocha: https://www.sitepoint.com/unit-test-javascript-mocha-chai/ | Stubs and mocks: https://www.sitepoint.com/sinon-tutorial-javascript-testing-mocks-spies-stubs/",
					"new-value": "A comprehensive guide to Test Driven Development is available here; https://github.com/dwyl/learn-tdd"
				}
			]
		},
		"&&": {
			"value": "The && operator evaluates to the left side if it is !falsy. Otherwise is evaluates to the right side. See !truthy and maybe try `n> true && 4`.",
			"creator": "Havvy",
			"date": "2016-12-01T13:24:07.764Z",
			"popularity": 8,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2016-12-12T10:20:36.445Z",
					"editor": "ljharb",
					"old-value": "The && operator evaluates to the left side if it is falsey. Otherwise is evaluates to the right side. See !truthy and maybe try `n> true && 4`.",
					"new-value": "The && operator evaluates to the left side if it is !falsy. Otherwise is evaluates to the right side. See !truthy and maybe try `n> true && 4`."
				}
			]
		},
		"redux-form": {
			"value": "Should I put form state in Redux? Maybe: http://goshakkk.name/should-i-put-form-state-into-redux/",
			"creator": "samsch",
			"date": "2016-12-02T17:19:56.640Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"redux": {
			"value": "Redux is a predictable state container for JavaScript apps. You can use Redux together with React, or with any other view library. Visit http://redux.js.org & https://github.com/reactjs/react-redux for more info.",
			"creator": "Logicgate",
			"date": "2016-12-05T10:05:10.529Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"best-practices": {
			"value": "A comprehensive starting guide to best practices in Javascript is available from https://www.w3.org/wiki/JavaScript_best_practices",
			"creator": "XIIIIIN",
			"date": "2016-12-12T02:56:19.702Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"reversedxy": {
			"value": "the reversed XY problem: you didn't ask for X and also don't want Y. If you manage to describe your solution properly, we may find problems in it anyway, regardless of letters in the alphabet.",
			"creator": "kiki`",
			"date": "2016-12-12T09:21:50.104Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"spam": {
			"alias": "botabuse",
			"creator": "ljharb",
			"date": "2016-12-12T10:24:07.483Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"relational": {
			"value": "roses are red, violets are blue; your data is relational, no seriously your data is relational",
			"creator": "joepie91",
			"date": "2016-12-17T03:03:56.432Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"eval": {
			"value": "The `eval` function has two use cases: macro expansion, and evaluating dynamically generated programs. `eval` is probably not the answer for your problem. See https://blog.racket-lang.org/2011/10/on-eval-in-dynamic-languages-generally-and-in-racket-specifically.html for details. See unsafe-eval in !csp for security aspects.",
			"creator": "graingert",
			"date": "2016-12-19T05:11:28.207Z",
			"popularity": 24,
			"editors": [
				"Sorella",
				"graingert"
			],
			"changes": [
				{
					"date": "2016-12-19T05:12:17.328Z",
					"editor": "Sorella",
					"old-value": "eval is bad and should be disabled via a content security policy",
					"new-value": "The `eval` function (and its cousins) have two particular use cases: macro expansion, and evaluation of dynamically generated programs. If you don't know any of these terms, `eval` is not the answer for your problem."
				},
				{
					"date": "2016-12-19T05:13:38.714Z",
					"editor": "graingert",
					"old-value": "The `eval` function (and its cousins) have two particular use cases: macro expansion, and evaluation of dynamically generated programs. If you don't know any of these terms, `eval` is not the answer for your problem.",
					"new-value": "The `eval` function (and its cousins) have two particular use cases: macro expansion, and evaluation of dynamically generated programs. If you don't know any of these terms, `eval` is not the answer for your problem. It can be disabled and enabled with the content security policy directive unsafe-eval"
				},
				{
					"date": "2016-12-19T05:16:08.243Z",
					"editor": "Sorella",
					"old-value": "The `eval` function (and its cousins) have two particular use cases: macro expansion, and evaluation of dynamically generated programs. If you don't know any of these terms, `eval` is not the answer for your problem. It can be disabled and enabled with the content security policy directive unsafe-eval",
					"new-value": "The `eval` function has two use cases: macro expansion, and evaluating dynamically generated programs. `eval` is probably not the answer for your problem. See https://blog.racket-lang.org/2011/10/on-eval-in-dynamic-languages-generally-and-in-racket-specifically.html for details."
				},
				{
					"date": "2016-12-19T05:17:25.313Z",
					"editor": "graingert",
					"old-value": "The `eval` function has two use cases: macro expansion, and evaluating dynamically generated programs. `eval` is probably not the answer for your problem. See https://blog.racket-lang.org/2011/10/on-eval-in-dynamic-languages-generally-and-in-racket-specifically.html for details.",
					"new-value": "The `eval` function has two use cases: macro expansion, and evaluating dynamically generated programs. `eval` is probably not the answer for your problem. See https://blog.racket-lang.org/2011/10/on-eval-in-dynamic-languages-generally-and-in-racket-specifically.html for details. It can be disabled and enabled with the content security policy"
				},
				{
					"date": "2016-12-19T05:17:47.045Z",
					"editor": "Sorella",
					"old-value": "The `eval` function has two use cases: macro expansion, and evaluating dynamically generated programs. `eval` is probably not the answer for your problem. See https://blog.racket-lang.org/2011/10/on-eval-in-dynamic-languages-generally-and-in-racket-specifically.html for details. It can be disabled and enabled with the content security policy",
					"new-value": "The `eval` function has two use cases: macro expansion, and evaluating dynamically generated programs. `eval` is probably not the answer for your problem. See https://blog.racket-lang.org/2011/10/on-eval-in-dynamic-languages-generally-and-in-racket-specifically.html for details."
				},
				{
					"date": "2016-12-19T05:18:14.403Z",
					"editor": "Sorella",
					"old-value": "The `eval` function has two use cases: macro expansion, and evaluating dynamically generated programs. `eval` is probably not the answer for your problem. See https://blog.racket-lang.org/2011/10/on-eval-in-dynamic-languages-generally-and-in-racket-specifically.html for details.",
					"new-value": "The `eval` function has two use cases: macro expansion, and evaluating dynamically generated programs. `eval` is probably not the answer for your problem. See https://blog.racket-lang.org/2011/10/on-eval-in-dynamic-languages-generally-and-in-racket-specifically.html for details. See unsafe-eval in !csp for security aspects.",
					"regex": "s/$/ See unsafe-eval in !csp for security aspects./"
				}
			]
		},
		"flatten2": {
			"value": "var flatten = a => Array.isArray(a)?[].concat(...a.map(flatten)):a;",
			"creator": "qswz",
			"date": "2016-12-25T21:46:48.314Z",
			"popularity": 13,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2017-08-01T13:17:58.170Z",
					"editor": "qswz",
					"old-value": "https://gist.github.com/caub/da489a286b0098d0fcd799b66a252196#file-flatten-js",
					"new-value": "var flatten = a => Array.isArray(a)?[].concat(...a.map(flatten)):a;"
				}
			]
		},
		":p": {
			"value": "Thou shalt not type :p unless you are really sticking your tongue out.",
			"creator": "qswz",
			"date": "2016-12-26T00:51:55.271Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"vpaste": {
			"value": "http://vpaste.net",
			"creator": "qswz",
			"date": "2016-12-28T21:33:02.214Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"byreference": {
			"alias": "pass by value",
			"creator": "ljharb",
			"date": "2017-01-06T01:41:48.784Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"by reference": {
			"alias": "pass by value",
			"creator": "ljharb",
			"date": "2017-01-06T01:41:53.691Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"byvalue": {
			"alias": "pass by value",
			"creator": "ljharb",
			"date": "2017-01-06T01:41:56.777Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"by value": {
			"alias": "pass by value",
			"creator": "ljharb",
			"date": "2017-01-06T01:41:59.597Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"dnt": {
			"value": "do not track see https://www.eff.org/dnt-policy",
			"creator": "graingert",
			"date": "2017-01-10T04:13:37.469Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"testing": {
			"value": "Unit testing with Mocha: https://www.sitepoint.com/unit-test-javascript-mocha-chai/ | Spies/stubs/mocks with Sinon: https://www.sitepoint.com/sinon-tutorial-javascript-testing-mocks-spies-stubs/ | Sinon.js best practices: https://semaphoreci.com/community/tutorials/best-practices-for-spies-stubs-and-mocks-in-sinon-js | Testing promises: https://www.sitepoint.com/promises-in-javascript-unit-tests-the-definitive-guide/",
			"creator": "zomg",
			"date": "2017-01-11T20:34:57.705Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"http2": {
			"value": "a newer version of HTTP. See https://medium.com/webpack/webpack-http-2-7083ec3f3ce6 to optimise with webpack",
			"creator": "graingert",
			"date": "2017-01-11T23:17:36.941Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"guys": {
			"value": "The term \"guys\" may be a gender-neutral term to some people, but it is not to everybody. As such, please do not use it. Suggested alternatives: folks, people, team, y'all, everybody. https://subfictional.com/2012/07/02/language-matters-stop-using-guys-to-address-mix-gender-groups/ See !sexist",
			"creator": "ljharb",
			"date": "2017-01-12T22:15:18.746Z",
			"popularity": 12,
			"editors": [],
			"changes": []
		},
		"parsing html": {
			"alias": "html regex",
			"creator": "ljharb",
			"date": "2017-01-14T22:25:11.375Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"error handling": {
			"value": "Know the difference between operational errors and programming errors. The best way to recover from programmer errors is to crash immediately: https://www.joyent.com/node-js/production/design/errors",
			"creator": "zsoc",
			"date": "2017-01-18T04:12:25.688Z",
			"popularity": 15,
			"editors": [],
			"changes": []
		},
		"hsts": {
			"value": "HTTP Strict Transport Security (HSTS). Force all requests to your domain to go via HTTPS, also prevent click-through for TLS validation errors. see also https://hstspreload.org/",
			"creator": "graingert",
			"date": "2017-01-19T18:00:34.405Z",
			"popularity": 2,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2017-01-19T18:01:14.349Z",
					"editor": "graingert",
					"old-value": "HTTP Strict Transport Security (HSTS) see also https://hstspreload.org/",
					"new-value": "HTTP Strict Transport Security (HSTS). Force all requests to your domain to go via HTTPS, also prevent click-through for TLS validation errors. see also https://hstspreload.org/"
				}
			]
		},
		"systemjs": {
			"value": "Configurable module loader enabling dynamic ES module workflows in browsers and NodeJS. https://github.com/systemjs/systemjs",
			"creator": "graingert",
			"date": "2017-01-26T14:24:50.598Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"nooffset": {
			"value": "offset instructs the databases skip the first N results of a query. However, the database must still fetch these rows from the disk and bring them in order before it can send the following ones. http://use-the-index-luke.com/no-offset",
			"creator": "graingert",
			"date": "2017-01-27T00:40:58.293Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"mb": {
			"value": "millibar, see also http://www.convertunits.com/info/mb Did you mean Megabits (Mb), Megabytes (MB) or Mibibytes (MiB)?",
			"creator": "graingert",
			"date": "2017-02-02T21:25:01.094Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"gb": {
			"value": "grambits, This isn't even a real unit. Did you mean Gigabits (Gb), Gigabytes (GB) or Gibibytes (GiB)?",
			"creator": "graingert",
			"date": "2017-02-02T21:26:18.928Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"question": {
			"value": "Please don't ask to ask a question, simply ask the question (all on ONE line and in the channel, so that others can read and follow it easily). If anyone knows the answer they will most likely reply. :-) See also !patience",
			"creator": "graingert",
			"date": "2017-02-02T22:12:49.759Z",
			"popularity": 47,
			"editors": [],
			"changes": []
		},
		"patience": {
			"value": "Don't feel ignored and repeat your question quickly; if nobody knows your answer, nobody will answer you. While you wait, try searching https://developer.mozilla.org/",
			"creator": "graingert",
			"date": "2017-02-02T22:13:56.257Z",
			"popularity": 17,
			"editors": [],
			"changes": []
		},
		"module bundler": {
			"value": "a tool to combine a collection of JS modules into a smaller number of JS files. See !webpack, !rollup",
			"creator": "graingert",
			"date": "2017-02-16T13:00:47.643Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"zeal": {
			"alias": "devdocs",
			"creator": "jaawerth",
			"date": "2017-02-23T01:55:59.050Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"dash": {
			"alias": "devdocs",
			"creator": "jaawerth",
			"date": "2017-02-23T01:56:05.643Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"catastrophic backtracking": {
			"value": "Some regexes spell doom http://www.rexegg.com/regex-explosive-quantifiers.html",
			"creator": "jaawerth",
			"date": "2017-02-24T13:04:47.313Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"regex explosive quantifiers": {
			"alias": "catastrophic backtracking",
			"creator": "jaawerth",
			"date": "2017-02-24T13:06:00.148Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"statement": {
			"value": "Please don't ask to state a statement, simply state the statement (all on ONE line and in the channel, so that others can read and follow it easily). If anyone has comments on the statement they will most likely reply. :-) See also !patience",
			"creator": "graingert",
			"date": "2017-02-24T21:01:02.052Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"interview": {
			"value": "Front-End Developer Job Interview Questions | https://github.com/h5bp/Front-end-Developer-Interview-Questions",
			"creator": "kiki`",
			"date": "2017-02-24T21:24:35.773Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"rplates": {
			"value": "For a minimal project setup, try the official create-react-app project starter which requires 0 config to get up and running. Another is https://github.com/react-boilerplate/react-boilerplate which has more utilities built in without being over complicated.",
			"creator": "GreenJello",
			"date": "2017-03-09T19:14:07.709Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"rplate": {
			"alias": "rplates",
			"creator": "GreenJello",
			"date": "2017-03-09T19:14:18.741Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"facepalm": {
			"value": "(－‸ლ)",
			"creator": "Havvy",
			"date": "2017-03-22T04:02:33.340Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"debounce": {
			"value": "\"Debounce and throttle are two similar (but different!) techniques to control how many times we allow a function to be executed over time.\" More @ https://css-tricks.com/debouncing-throttling-explained-examples/",
			"creator": "deltab",
			"date": "2017-03-22T06:31:51.019Z",
			"popularity": 11,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2019-01-05T14:15:38.182Z",
					"editor": "MJCD",
					"old-value": "https://css-tricks.com/debouncing-throttling-explained-examples/",
					"new-value": "\"Debounce and throttle are two similar (but different!) techniques to control how many times we allow a function to be executed over time.\" More @ https://css-tricks.com/debouncing-throttling-explained-examples/"
				}
			]
		},
		"rfiddle": {
			"value": "Show your React problem or example in jsfiddle. You can fork from https://jsfiddle.net/boilerplate/react-jsx (replace the example code with your own).",
			"creator": "samsch",
			"date": "2017-03-23T17:17:25.159Z",
			"popularity": 28,
			"editors": [
				"samsch"
			],
			"changes": [
				{
					"date": "2018-06-15T19:06:39.663Z",
					"editor": "samsch",
					"old-value": "Show your React problem or example in jsfiddle. You can use https://jsfiddle.net/samsch/nxjd9ens/ as a template for fiddle config.",
					"new-value": "Show your React problem or example in jsfiddle. You can fork from https://jsfiddle.net/boilerplate/react-jsx (replace the example code with your own)."
				}
			]
		},
		"leftpad": {
			"value": "String.prototype.padStart is in the language as of ES2017. Use https://npmjs.com/string.prototype.padstart as a shim/polyfill.",
			"creator": "ljharb",
			"date": "2017-05-03T11:44:55.745Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"var scope": {
			"value": "for (var i=0;i<2;i++)setTimeout(()=>console.log(i)) // 2, 2",
			"creator": "qswz",
			"date": "2017-05-09T01:06:44.276Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"names": {
			"value": "Lies you believe about names: http://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/",
			"creator": "ljharb",
			"date": "2017-05-09T22:24:07.876Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"runkit": {
			"value": "Write code with Node.js that can respond to HTTP requests from anywhere in seconds, using complete npm library | exports.endpoint = function(req, resp) { resp.end(\"Hello world!\") } // | -> https://runkit.com/docs/endpoint",
			"creator": "earendel",
			"date": "2017-05-21T08:29:34.641Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"intro update": {
			"value": "Introduction To Immutable Updates in React https://medium.com/@f.bagnardi/introduction-to-immutable-updates-in-react-ede194dfc287",
			"creator": "GreenJello",
			"date": "2017-05-30T16:57:45.844Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"seq": {
			"value": "const seq = length => Array.from({ length }, (_ign, i) => i);",
			"creator": "StoneCypher",
			"date": "2017-05-31T03:04:28.717Z",
			"popularity": 3,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2017-05-31T03:06:27.085Z",
					"editor": "graingert",
					"old-value": "const seq = n => new Array(n).fill(false).map( (_ignored, i) => i );",
					"new-value": "const seq = n => Array.from(Array(n), (_ign, i) => i);"
				},
				{
					"date": "2017-05-31T03:09:44.818Z",
					"editor": "graingert",
					"old-value": "const seq = n => Array.from(Array(n), (_ign, i) => i);",
					"new-value": "const seq = length => Array.from({ length }, (_ign, i) => i);"
				}
			]
		},
		"eslint": {
			"value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process. http://eslint.org/docs/user-guide/getting-started",
			"creator": "graingert",
			"date": "2017-06-06T20:04:36.794Z",
			"popularity": 69,
			"editors": [
				"graingert",
				"cjohnson",
				"sacho1",
				"MJCD",
				"ljharb"
			],
			"changes": [
				{
					"date": "2017-06-06T20:07:07.471Z",
					"editor": "graingert",
					"old-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process.",
					"new-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process."
				},
				{
					"date": "2017-06-06T20:07:18.533Z",
					"editor": "graingert",
					"old-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process.",
					"new-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process."
				},
				{
					"date": "2017-06-06T20:07:26.522Z",
					"editor": "graingert",
					"old-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process.",
					"new-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation"
				},
				{
					"date": "2017-06-06T20:08:04.634Z",
					"editor": "cjohnson",
					"old-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation",
					"new-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process <http://eslint.org/docs/about/>"
				},
				{
					"date": "2017-06-06T20:08:59.919Z",
					"editor": "cjohnson",
					"old-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process <http://eslint.org/docs/about/>",
					"new-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process <http://eslint.org/docs/user-guide/get"
				},
				{
					"date": "2017-06-06T20:09:14.433Z",
					"editor": "cjohnson",
					"old-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process <http://eslint.org/docs/user-guide/get",
					"new-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process <http://eslint.org/docs/user-guide/get"
				},
				{
					"date": "2017-06-06T20:48:10.314Z",
					"editor": "sacho1",
					"old-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is frequently used to find problematic patterns or code that doesn’t adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process <http://eslint.org/docs/user-guide/get",
					"new-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process. <http://eslint.org/docs/user-guide/getting-started>"
				},
				{
					"date": "2017-06-06T20:50:12.246Z",
					"editor": "sacho1",
					"old-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process. <http://eslint.org/docs/user-guide/getting-started>",
					"new-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process. http://eslint.org/docs/user-guide/getting-started"
				},
				{
					"date": "2018-10-19T23:01:31.271Z",
					"editor": "MJCD",
					"old-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process. http://eslint.org/docs/user-guide/getting-started",
					"new-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There are code linters for most IDE's - or you can access it online @ http://eslint.org/demo/"
				},
				{
					"date": "2018-10-19T23:01:55.017Z",
					"editor": "MJCD",
					"old-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There are code linters for most IDE's - or you can access it online @ http://eslint.org/demo/",
					"new-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There eslint modules/extensions for most IDE's - or you can access it online @ http://eslint.org/demo/"
				},
				{
					"date": "2018-10-19T23:02:36.766Z",
					"editor": "MJCD",
					"old-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There eslint modules/extensions for most IDE's - or you can access it online @ http://eslint.org/demo/",
					"new-value": "ESLint is an open source JavaScript linting utility. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There eslint modules/extensions for most IDE's - or you can access it online @ http://eslint.org/demo/"
				},
				{
					"date": "2018-10-19T23:03:00.567Z",
					"editor": "MJCD",
					"old-value": "ESLint is an open source JavaScript linting utility. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There eslint modules/extensions for most IDE's - or you can access it online @ http://eslint.org/demo/",
					"new-value": "ESLint is an open source JavaScript linting utility. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There are eslint modules/extensions for most IDE's - or you can access it online @ http://eslint.org/demo/"
				},
				{
					"date": "2018-10-19T23:05:40.136Z",
					"editor": "MJCD",
					"old-value": "ESLint is an open source JavaScript linting utility. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There are eslint modules/extensions for most IDE's - or you can access it online @ http://eslint.org/demo/",
					"new-value": "ESLint is an open source JavaScript linting utility (See !lint). There are eslint modules/extensions for most IDE's and CLI's - or you can access it online @ http://eslint.org/demo/"
				},
				{
					"date": "2018-10-19T23:06:35.309Z",
					"editor": "MJCD",
					"old-value": "ESLint is an open source JavaScript linting utility (See !lint). There are eslint modules/extensions for most IDE's and CLI's - or you can access it online @ http://eslint.org/demo/",
					"new-value": "ESLint is an open source JavaScript linting utility (See !lint). There are eslint modules/extensions for most IDE's and CLI's - or you can access it online @ https://eslint.org/demo/"
				},
				{
					"date": "2018-10-19T23:36:33.976Z",
					"editor": "ljharb",
					"old-value": "ESLint is an open source JavaScript linting utility (See !lint). There are eslint modules/extensions for most IDE's and CLI's - or you can access it online @ https://eslint.org/demo/",
					"new-value": "ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process. http://eslint.org/docs/user-guide/getting-started"
				}
			]
		},
		"jscs": {
			"value": "see !eslint",
			"creator": "JoWie",
			"date": "2017-06-06T20:05:22.598Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"first contribution": {
			"value": "https://github.com/nodejs/node/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22",
			"creator": "zsoc",
			"date": "2017-06-13T19:14:25.528Z",
			"popularity": 6,
			"editors": [
				"devsnek"
			],
			"changes": [
				{
					"date": "2018-09-22T22:23:46.621Z",
					"editor": "devsnek",
					"old-value": "Looking to contribute to the Node.js project for the first time? The issue tracker has a tag for 'good first contribution' PRs: https://github.com/nodejs/node/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+contribution%22 - see also: !nodetodo",
					"new-value": "https://github.com/nodejs/node/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"
				}
			]
		},
		"good first contribution": {
			"alias": "first contribution",
			"creator": "zsoc",
			"date": "2017-06-13T19:14:45.927Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"nodetodo": {
			"value": "Node Todo is available via twitter and email to help guide you through your first contribution to the Node.js project. See http://nodetodo.org/ and http://nodetodo.org/getting-started/ - see also !first contribution",
			"creator": "zsoc",
			"date": "2017-06-13T19:16:13.236Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"moment": {
			"value": "Moment is an all purpose library for dealing with times and dates, the defacto standard in the JS ecosystem. Home: https://momentjs.com/",
			"creator": "WASM",
			"date": "2017-06-16T12:06:15.258Z",
			"popularity": 31,
			"editors": [
				"graingert",
				"ljharb"
			],
			"changes": [
				{
					"date": "2017-08-18T11:52:36.206Z",
					"editor": "graingert",
					"old-value": "Moment is a tiny all purpose library for dealing with time and date. Home: https://momentjs.com/",
					"new-value": "use date-fns: https://date-fns.org"
				},
				{
					"date": "2017-08-19T00:05:50.227Z",
					"editor": "ljharb",
					"old-value": "use date-fns: https://date-fns.org",
					"new-value": "Moment is a tiny all purpose library for dealing with time and date. Home: https://momentjs.com/"
				},
				{
					"date": "2017-08-19T00:10:07.249Z",
					"editor": "graingert",
					"old-value": "Moment is a tiny all purpose library for dealing with time and date. Home: https://momentjs.com/",
					"new-value": "Moment is a 50KB all purpose library for dealing with time and date. Home: https://momentjs.com/ see also !date-fns"
				},
				{
					"date": "2017-08-19T00:10:38.550Z",
					"editor": "ljharb",
					"old-value": "Moment is a 50KB all purpose library for dealing with time and date. Home: https://momentjs.com/ see also !date-fns",
					"new-value": "Moment is a tiny all purpose library for dealing with time and date. Home: https://momentjs.com/"
				},
				{
					"date": "2017-08-19T00:13:29.994Z",
					"editor": "graingert",
					"old-value": "Moment is a tiny all purpose library for dealing with time and date. Home: https://momentjs.com/",
					"new-value": "Moment is an all purpose library for dealing with time and date. Home: https://momentjs.com/"
				},
				{
					"date": "2017-08-19T00:14:32.038Z",
					"editor": "ljharb",
					"old-value": "Moment is an all purpose library for dealing with time and date. Home: https://momentjs.com/",
					"new-value": "Moment is an all purpose library for dealing with times and dates, the defacto standard in the JS ecosystem. Home: https://momentjs.com/"
				}
			]
		},
		"domcontentloaded": {
			"value": "The event that fires as soon as the DOM has loaded and is ready. This is not the same as the load event which waits for all assets to load as well. <https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded#Example>",
			"creator": "cjohnson",
			"date": "2017-06-23T21:21:39.413Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"load": {
			"value": "The event that fires once the page is completely loaded, to include all linked assets. <https://developer.mozilla.org/en-US/docs/Web/Events/load>",
			"creator": "cjohnson",
			"date": "2017-06-23T21:22:19.104Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"lodash/fp": {
			"value": "Check out https://gist.github.com/jfmengels/6b973b69c491375117dc or !rambda",
			"creator": "graingert",
			"date": "2017-07-03T21:50:48.742Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"mcve": {
			"value": "How to create a minimal, complete, and verifiable example https://stackoverflow.com/help/mcve see also !fiddle",
			"creator": "falafel",
			"date": "2017-07-04T22:54:53.347Z",
			"popularity": 59,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2018-01-16T15:28:11.520Z",
					"editor": "graingert",
					"old-value": "How to create a minimal, complete, and verifiable example https://stackoverflow.com/help/mcve",
					"new-value": "How to create a minimal, complete, and verifiable example https://stackoverflow.com/help/mcve see also !fiddle"
				}
			]
		},
		"is it a bug": {
			"value": "No, it's not a bug.",
			"creator": "Xinn",
			"date": "2017-07-13T13:05:07.718Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"murder": {
			"value": "Did somebody summon some crows?",
			"creator": "Havvy",
			"date": "2017-07-20T13:22:55.126Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"integers": {
			"value": "According to the ECMAScript specification, all numbers in JavaScript are floating-point. Yet, the notion of integer comes up occasionally. This blog post explains what it means. [ http://2ality.com/2014/02/javascript-integers.html ]",
			"creator": "Xinn",
			"date": "2017-07-20T21:05:25.627Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"email-regex": {
			"value": "https://www.w3.org/TR/html5/forms.html#e-mail-state-(type=email)",
			"creator": "qswz",
			"date": "2017-07-21T14:33:05.215Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"web3": {
			"value": "An API for dealing with Etherium within javascript - https://github.com/ethereum/web3.js/",
			"creator": "Xinn",
			"date": "2017-07-26T11:54:43.206Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"ipfs.js": {
			"value": "#ipfs , short for InterPlanetary File System is a peer-to-peer hypermedia protocol to remake the web faster, safer, and more open. https://www.youtube.com/watch?v=Fa4pckodM9g https://github.com/ipfs/js-ipfs",
			"creator": "gde33",
			"date": "2017-07-26T11:57:23.214Z",
			"popularity": 0,
			"editors": [
				"gde33"
			],
			"changes": [
				{
					"date": "2017-07-26T12:00:47.707Z",
					"editor": "gde33",
					"old-value": "The InterPlanetary File System is a peer-to-peer hypermedia protocol to remake the web faster, safer, and more open. https://www.youtube.com/watch?v=Fa4pckodM9g https://github.com/ipfs/js-ipfs",
					"new-value": "#ipfs , short for InterPlanetary File System is a peer-to-peer hypermedia protocol to remake the web faster, safer, and more open. https://www.youtube.com/watch?v=Fa4pckodM9g https://github.com/ipfs/js-ipfs"
				}
			]
		},
		"nodered": {
			"alias": "node-red",
			"creator": "Xinn",
			"date": "2017-07-26T12:04:01.748Z",
			"popularity": 10,
			"editors": [],
			"changes": []
		},
		"smart questions": {
			"alias": "smart",
			"creator": "Xinn",
			"date": "2017-07-26T14:23:28.312Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"raphael.js": {
			"value": "Raphael.js is a lightweight library for working with SVG to create interactive displays. http://dmitrybaranovskiy.github.io/raphael/",
			"creator": "Xinn",
			"date": "2017-07-27T00:23:51.971Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"raphael": {
			"alias": "raphael.js",
			"creator": "Xinn",
			"date": "2017-07-27T00:24:32.737Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"#npm": {
			"value": "http://blog.npmjs.org/post/163421115230/shutting-down-npm-irc",
			"creator": "isHavvy",
			"date": "2017-07-27T01:03:33.377Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"encryption": {
			"value": "No userspace encryption within a browser environment can be secure because you must give the client a full encryption suite to achieve it including your keys. SSL/TLS is your only true defense for any and all communications to/from the browser. See !browser crypto",
			"creator": "KendrickLamar",
			"date": "2017-07-28T10:16:52.719Z",
			"popularity": 3,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2017-07-28T22:56:41.097Z",
					"editor": "ljharb",
					"old-value": "No userspace encryption within a browser environment can be secure because you must give the client a full encryption suite to achieve it including your keys. SSL/TLS is your only true defense for any and all communications to/from the browser.",
					"new-value": "No userspace encryption within a browser environment can be secure because you must give the client a full encryption suite to achieve it including your keys. SSL/TLS is your only true defense for any and all communications to/from the browser. See !browser crypto"
				}
			]
		},
		"sarcasm": {
			"value": "Sarcasm [sɑːkaz(ə)m] - noun - the use of irony to mock or convey contempt.",
			"creator": "Xinn",
			"date": "2017-08-01T06:03:46.033Z",
			"popularity": 5,
			"editors": [
				"Xinn"
			],
			"changes": [
				{
					"date": "2017-08-01T06:04:23.480Z",
					"editor": "Xinn",
					"old-value": "Sarcasm",
					"new-value": "Sarcasm [sɑːkaz(ə)m] - noun - the use of irony to mock or convey contempt."
				}
			]
		},
		"snip str_repeat": {
			"alias": "str_repeat",
			"creator": "ljharb",
			"date": "2017-08-01T06:13:31.255Z",
			"popularity": 0,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2017-08-01T07:45:33.808Z",
					"editor": "ljharb",
					"old-alias": "str_repeat",
					"new-alias": "str_repeat"
				}
			]
		},
		"onload": {
			"value": "Information about the order and meaning of particular load lifecycle events - see; https://javascript.info/onload-ondomcontentloaded",
			"creator": "MJCD2",
			"date": "2017-08-03T21:47:31.506Z",
			"popularity": 21,
			"editors": [],
			"changes": []
		},
		"zombo": {
			"value": "This, is, zombocom. Welcome - to zombocom. http://www.zombo.com/",
			"creator": "MJCD",
			"date": "2017-08-04T13:12:47.434Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"zombo.com": {
			"alias": "zombo",
			"creator": "MJCD",
			"date": "2017-08-04T13:12:56.551Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"performant": {
			"alias": "performance",
			"creator": "MJCD",
			"date": "2017-08-07T01:49:41.892Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"arguments.callee": {
			"value": "A really good explanation of the `arguments.callee` object can be found here; https://stackoverflow.com/questions/103598/why-was-the-arguments-callee-caller-property-deprecated-in-javascript",
			"creator": "MJCD",
			"date": "2017-08-09T04:26:11.902Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"arguments.callee.caller": {
			"alias": "arguments.callee",
			"creator": "MJCD",
			"date": "2017-08-09T04:26:37.888Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"three.js": {
			"value": "Three.js is a cross-browser JavaScript library/API used to create and display animated 3D computer graphics in a web browser. More: https://threejs.org/",
			"creator": "MJCD",
			"date": "2017-08-09T15:48:38.725Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"three": {
			"alias": "three.js",
			"creator": "MJCD",
			"date": "2017-08-09T15:48:47.067Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"collision detection": {
			"value": "A simple introduction to box-based collision detection in JavaScript can be found here; https://developer.mozilla.org/en-US/docs/Games/Techniques/2D_collision_detection",
			"creator": "MJCD",
			"date": "2017-08-10T16:18:12.443Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"collision": {
			"alias": "collision detection",
			"creator": "MJCD",
			"date": "2017-08-10T16:18:27.758Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"inline events": {
			"alias": "inline",
			"creator": "MJCD",
			"date": "2017-08-11T20:30:23.214Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"compatability table": {
			"alias": "kangax",
			"creator": "MJCD",
			"date": "2017-08-11T20:40:53.903Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"compatability": {
			"alias": "kangax",
			"creator": "MJCD",
			"date": "2017-08-11T20:40:58.431Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"compat table": {
			"alias": "kangax",
			"creator": "MJCD",
			"date": "2017-08-11T20:41:14.800Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"slice": {
			"value": "\"substr\" is nonstandard/deprecated. \"substring\" can't handle negative indices, and weirdly sorts its arguments. \"slice\" works exactly as you'd expect, and identically to Array#slice. Always use slice on strings.",
			"creator": "ljharb",
			"date": "2017-08-12T12:14:53.859Z",
			"popularity": 24,
			"editors": [],
			"changes": []
		},
		"substr": {
			"alias": "slice",
			"creator": "ljharb",
			"date": "2017-08-12T12:15:16.603Z",
			"popularity": 8,
			"editors": [],
			"changes": []
		},
		"substring": {
			"alias": "slice",
			"creator": "ljharb",
			"date": "2017-08-12T12:15:20.641Z",
			"popularity": 8,
			"editors": [],
			"changes": []
		},
		"mongo": {
			"value": "MongoDB has many issues, and is essentially never the right solution to your problem. Here's a list of issues: http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/ and a more technical article at http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/",
			"creator": "MJCD",
			"date": "2017-08-13T03:26:48.612Z",
			"popularity": 28,
			"editors": [
				"ljharb",
				"MJCD"
			],
			"changes": [
				{
					"date": "2017-08-13T04:15:05.132Z",
					"editor": "ljharb",
					"old-value": "MongoDB is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. It is however not without its faults; http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/",
					"new-value": "MongoDB is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. It is however not without its faults; see !no mongo"
				},
				{
					"date": "2019-01-31T17:18:18.658Z",
					"editor": "MJCD",
					"old-value": "MongoDB is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. It is however not without its faults; see !no mongo",
					"new-value": "MongoDB has many issues, and is essentially never the right solution to your problem. Here's a list of issues: http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/ and a more technical article at http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/"
				}
			]
		},
		"no mongo": {
			"value": "Don't use MongoDB - it has many issues, and is essentially never the right solution to your problem. Here's a list of issues: http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/ and a more technical article at http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/",
			"creator": "samsch",
			"date": "2017-08-13T03:29:15.090Z",
			"popularity": 151,
			"editors": [],
			"changes": []
		},
		"legal": {
			"value": "Nobody here to our knowledge is a qualified lawyer. It would be extremely advisable to do your own research using the google machine, or contact free/paid legal services to answer your query. Hypothesizing endlessly, especially in a global market such as the internet is largely fruitless",
			"creator": "MJCD",
			"date": "2017-08-14T08:49:06.208Z",
			"popularity": 14,
			"editors": [],
			"changes": []
		},
		"legal advice": {
			"alias": "legal",
			"creator": "MJCD",
			"date": "2017-08-14T08:49:14.710Z",
			"popularity": 8,
			"editors": [],
			"changes": []
		},
		"enable-cors": {
			"value": "The web is all about accessible content. Make your content truly accessible by enabling cors for all http requests on your api. https://enable-cors.org/   See !cors as well.",
			"creator": "MJCD",
			"date": "2017-08-14T11:35:01.909Z",
			"popularity": 4,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2017-08-14T11:36:11.069Z",
					"editor": "ljharb",
					"old-value": "The web is all about accessible content. Make your content truly accessible by enabling cors for all http requests on your api. https://enable-cors.org/",
					"new-value": "The web is all about accessible content. Make your content truly accessible by enabling cors for all http requests on your api. https://enable-cors.org/   See !cors as well."
				}
			]
		},
		"enable cors": {
			"alias": "enable-cors",
			"creator": "MJCD",
			"date": "2017-08-14T11:35:16.188Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"xpath": {
			"value": "[2017] Use !querySelector instead. This technology is largely only for use with !XSLT",
			"creator": "MJCD",
			"date": "2017-08-14T12:50:13.743Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"xpath is dead": {
			"alias": "xpath",
			"creator": "MJCD",
			"date": "2017-08-14T12:50:17.076Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"xslt": {
			"value": "XSLT (Extensible Stylesheet Language Transformations) is a language for transforming XML documents into other XML documents, or other formats such as HTML for web pages, plain text or XSL Formatting Objects, which may subsequently be converted to other formats, such as PDF, PostScript and PNG.",
			"creator": "MJCD",
			"date": "2017-08-14T12:50:55.080Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"client render": {
			"alias": "clientside",
			"creator": "ljharb",
			"date": "2017-08-15T07:09:20.432Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"lexical scope": {
			"alias": "scoping",
			"creator": "",
			"date": "2017-08-17T05:27:57.100Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"http anatomy": {
			"value": "Anatomy of an HTTP Transaction https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/",
			"creator": "jaawerth",
			"date": "2017-08-18T04:04:45.880Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"anatomy of http": {
			"alias": "http anatomy",
			"creator": "jaawerth",
			"date": "2017-08-18T04:05:04.131Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"normalize": {
			"value": "http://www.fundza.com/vectors/normalize/index.html",
			"creator": "MJCD",
			"date": "2017-08-18T14:36:26.816Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"date-fns": {
			"value": "An up and coming moment alternative and all purpose library for dealing with time and date. (See also !moment) More @ https://github.com/date-fns/date-fns",
			"creator": "graingert",
			"date": "2017-08-19T00:11:11.770Z",
			"popularity": 27,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2019-01-04T12:04:55.721Z",
					"editor": "MJCD",
					"old-value": "An up and coming moment alternative and all purpose library for dealing with time and date. See also !moment",
					"new-value": "An up and coming moment alternative and all purpose library for dealing with time and date. (See also !moment) More @ https://github.com/date-fns/date-fns"
				}
			]
		},
		"size": {
			"alias": "bloat",
			"creator": "niggler",
			"date": "2017-08-19T00:11:27.221Z",
			"popularity": 8,
			"editors": [],
			"changes": []
		},
		"origin": {
			"alias": "sop",
			"creator": "MJCD",
			"date": "2017-08-20T07:13:10.539Z",
			"popularity": 7,
			"editors": [],
			"changes": []
		},
		"umd": {
			"value": "Before node-style CommonJS became the defacto module standard, UMD rose as a way to be a \"universal\" pattern to support both CJS and AMD (as well as legacy browser global patterns). UMD is no longer particularly useful. http://davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/",
			"creator": "MJCD",
			"date": "2017-08-31T13:10:28.991Z",
			"popularity": 7,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2017-09-01T20:27:55.153Z",
					"editor": "ljharb",
					"old-value": "Since CommonJS and AMD styles have both been equally popular, it seems there’s yet no consensus. This has brought about the push for a “universal” pattern that supports both styles, which brings us to none other than the Universal Module Definition. More: http://davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/",
					"new-value": "Before node-style CommonJS became the defacto module standard, UMD rose as a way to be a \"universal\" pattern to support both CJS and AMD (as well as legacy browser global patterns). UMD is no longer particularly useful. http://davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/"
				}
			]
		},
		"selectors": {
			"value": "Learn CSS selectors the fun way! http://flukeout.github.io/",
			"creator": "MJCD",
			"date": "2017-09-01T15:20:31.278Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"ieee754": {
			"alias": "numbers",
			"creator": "ljharb",
			"date": "2017-09-01T20:29:13.517Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"pastebin": {
			"alias": "paste",
			"creator": "ljharb",
			"date": "2017-09-01T20:29:31.066Z",
			"popularity": 95,
			"editors": [],
			"changes": []
		},
		"stackoverflow": {
			"value": "Please don't post your StackOverflow questions here.. If we wanted to be answering on such a forum then we would do so. It's also !cross-posting which is equally as discouraged. Ask us!",
			"creator": "MJCD",
			"date": "2017-09-04T13:48:53.023Z",
			"popularity": 30,
			"editors": [],
			"changes": []
		},
		"so": {
			"alias": "stackoverflow",
			"creator": "MJCD",
			"date": "2017-09-04T13:49:00.546Z",
			"popularity": 24,
			"editors": [],
			"changes": []
		},
		"deep2": {
			"value": "var deep = o => Object.assign({}, ...Object.entries(o).map(([k,v]) => ({[k]:typeof v==='object'?deep(v):v})))",
			"creator": "qswz",
			"date": "2017-09-04T20:42:56.938Z",
			"popularity": 1,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2017-09-04T20:43:58.469Z",
					"editor": "qswz",
					"old-value": "var deep = o => Object.assign({}, ...Object.entries(o).map(([k,v])  => ({[k]:typeof v==='object'?deep(v):v})))",
					"new-value": "var deep = o => Object.assign({}, ...Object.entries(o).map(([k,v]) => ({[k]:typeof v==='object'?deep(v):v})))"
				}
			]
		},
		"socket.io": {
			"value": "Use SockJS instead http://xsnippet.org/359042",
			"creator": "qswz",
			"date": "2017-09-05T20:58:54.300Z",
			"popularity": 6,
			"editors": [
				"holysheet"
			],
			"changes": [
				{
					"date": "2017-09-05T21:00:37.177Z",
					"editor": "holysheet",
					"old-value": "http://xsnippet.org/359042",
					"new-value": "Use SockJS instead http://xsnippet.org/359042"
				}
			]
		},
		"electron": {
			"value": "allows for the development of desktop GUI applications using front and back end components originally developed for web applications: Node.js runtime for the backend and Chromium for the frontend",
			"creator": "graingert",
			"date": "2017-09-06T04:42:13.396Z",
			"popularity": 2,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2017-09-06T04:43:42.492Z",
					"editor": "graingert",
					"old-value": "The electron is a subatomic particle, symbol e− or β−, with a negative elementary electric charge.",
					"new-value": "allows for the development of desktop GUI applications using front and back end components originally developed for web applications: Node.js runtime for the backend and Chromium for the frontend"
				}
			]
		},
		"react-tutorial": {
			"value": "https://facebook.github.io/react/tutorial/tutorial.html \"Tutorial: Intro To React\" covers lifting state up, and other useful things",
			"creator": "GreenJello",
			"date": "2017-09-07T06:15:18.741Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"rtut": {
			"alias": "react-tutorial",
			"creator": "ljharb",
			"date": "2017-09-07T08:01:47.839Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"rt": {
			"alias": "react-tutorial",
			"creator": "ljharb",
			"date": "2017-09-07T08:01:59.472Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"12 minute tutorial": {
			"value": "Make your first thing with JavaScript in 12 minutes - https://www.youtube.com/watch?v=Ukg_U3CnJWI",
			"creator": "MJCD",
			"date": "2017-09-07T13:42:49.027Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"12mt": {
			"alias": "12 minute tutorial",
			"creator": "MJCD",
			"date": "2017-09-07T13:43:15.089Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"jquery": {
			"value": "jQuery is a comprehensive monolithic JavaScript toolset that was originally designed to provide a more normalized environment than older browsers. As of 2018 a lot of these tools are no longer required, so please think long and hard before choosing jQuery for a NEW project. !ded : #jquery",
			"creator": "ljharb",
			"date": "2017-09-08T19:53:27.960Z",
			"popularity": 19,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2018-08-26T11:31:10.888Z",
					"editor": "MJCD",
					"old-value": "Please visit #jquery for questions related to jQuery. (by typing /join #jquery)",
					"new-value": "jQuery is a comprehensive monolithic JavaScript toolset that was originally designed to provide a more normalized environment than older browsers. As of 2018 a lot of these tools are no longer required, so please think long and hard before choosing jQuery for a NEW project. !ded : #jquery"
				}
			]
		},
		"snip flatten-alt-v": {
			"value": "|> var flatten = function(/* ...xs */){ return Array.prototype.reduce.call(arguments, function(acc, x){ return acc.concat(x) }, []) }",
			"creator": "ljharb",
			"date": "2017-09-08T19:55:05.001Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"thrashing": {
			"value": "What forces layout / reflow?  Overview:  https://gist.github.com/hagb4rd/36bef409c1bec0381a8e915c920fbb3b | FastDOM: minimal solution counter layout thrashing https://github.com/wilsonpage/fastdom",
			"creator": "earendel",
			"date": "2017-09-09T16:00:51.538Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"netdbg": {
			"value": "When network software behaves unexpectedly, first clarify whether the difference between behavior and expectation sits in the software or on the network: Intercept the connection and check what's really transmitted on the wire. For HTTP(S) and some other protocols, there are specialized man-in-the-middle (mitm) proxies.",
			"creator": "Sven_vB",
			"date": "2017-09-09T23:28:35.408Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"cojs": {
			"value": "Crockford on JavaScript: https://www.youtube.com/playlist?list=PL7664379246A246CB – 1st lecture is about learning from history, so some people prefer to skip that.",
			"creator": "Sven_vB",
			"date": "2017-09-11T01:47:13.051Z",
			"popularity": 23,
			"editors": [
				"Sven_vB"
			],
			"changes": [
				{
					"date": "2017-09-12T19:13:58.721Z",
					"editor": "Sven_vB",
					"old-value": "Crockford on JavaScript: https://www.youtube.com/playlist?list=PL7664379246A246CB – 1st lecture is about learning from history so some people like to skip that.",
					"new-value": "Crockford on JavaScript: https://www.youtube.com/playlist?list=PL7664379246A246CB – 1st lecture is about learning from history, so some people like to skip that."
				},
				{
					"date": "2017-09-14T16:19:55.789Z",
					"editor": "Sven_vB",
					"old-value": "Crockford on JavaScript: https://www.youtube.com/playlist?list=PL7664379246A246CB – 1st lecture is about learning from history, so some people like to skip that.",
					"new-value": "Crockford on JavaScript: https://www.youtube.com/playlist?list=PL7664379246A246CB – 1st lecture is about learning from history, so some people prefer to skip that."
				}
			]
		},
		"npm5": {
			"value": "A generic summary of the new stuff in NPM 5; https://blog.pusher.com/what-you-need-know-npm-5/",
			"creator": "MJCD",
			"date": "2017-09-17T11:08:54.632Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"indent": {
			"value": "For us humans, your code is just annoying and hard to read and that's probably also the reason why it's not working. Please go back and clean up your pastie. Either use 1 tab or 2 spaces for indentations. If it's a jsfiddle, please try the \"tidy\" button. Machines can easily find matching brackets, but if you want humans to help you, first you have to help them.",
			"creator": "sillyslux",
			"date": "2017-09-17T19:13:57.184Z",
			"popularity": 10,
			"editors": [
				"sillyslux"
			],
			"changes": [
				{
					"date": "2017-09-17T19:18:21.894Z",
					"editor": "sillyslux",
					"old-value": "for us humans, your code is just hard to read and annoying, because you don't indent your code. it's also probably the reason why it's not working. You should go back and format your pastie. Use either 1 tab or 2 spaces for indentations. Machines can easily find matching brackets, but if you want humans to help you, first you have to help them.",
					"new-value": "For us humans, your code is just annoying and hard to read. Also that's probably the reason why it's not working. Please go back and clean up your pastie. Either use 1 tab or 2 spaces for indentations. If it's a jsfiddle, please try the \"tidy\" button. Machines can easily find matching brackets, but if you want humans to help you, first you have to help them."
				},
				{
					"date": "2017-09-17T19:19:38.011Z",
					"editor": "sillyslux",
					"old-value": "For us humans, your code is just annoying and hard to read. Also that's probably the reason why it's not working. Please go back and clean up your pastie. Either use 1 tab or 2 spaces for indentations. If it's a jsfiddle, please try the \"tidy\" button. Machines can easily find matching brackets, but if you want humans to help you, first you have to help them.",
					"new-value": "For us humans, your code is just annoying and hard to read and that's probably also the reason why it's not working. Please go back and clean up your pastie. Either use 1 tab or 2 spaces for indentations. If it's a jsfiddle, please try the \"tidy\" button. Machines can easily find matching brackets, but if you want humans to help you, first you have to help them."
				}
			]
		},
		"weirderror": {
			"value": "https://xkcd.com/979/",
			"creator": "Donitzo",
			"date": "2017-09-18T13:25:44.111Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"jquery4": {
			"value": "https://gist.github.com/caub/437e5d98ee9260df811628f7900c1c84",
			"creator": "qswz",
			"date": "2017-09-20T21:35:25.819Z",
			"popularity": 12,
			"editors": [],
			"changes": []
		},
		"on": {
			"value": "Have you tried turning it off and on again?",
			"creator": "MJCD",
			"date": "2017-09-21T12:41:19.335Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"off": {
			"alias": "on",
			"creator": "MJCD",
			"date": "2017-09-21T12:41:24.306Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"webpack": {
			"value": "webpack is a module bundler for modern JS apps. It recursively builds your application into a dependency graph that includes every module your application needs, then packages all of those modules into a small number of bundles - often only one - to be loaded by the browser. More @ webpack.js.org/concepts. Config tool: webpack.jakoblind.no",
			"creator": "MJCD",
			"date": "2017-09-24T08:25:56.975Z",
			"popularity": 20,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2018-08-10T16:09:19.224Z",
					"editor": "qswz",
					"old-value": "webpack is a module bundler for modern JavaScript applications. When webpack processes your application, it recursively builds a dependency graph that includes every module your application needs, then packages all of those modules into a small number of bundles - often only one - to be loaded by the browser. More @ https://webpack.js.org/concepts/",
					"new-value": "webpack is a module bundler for modern JavaScript applications. When webpack processes your application, it recursively builds a dependency graph that includes every module your application needs, then packages all of those modules into a small number of bundles - often only one - to be loaded by the browser. More @ https://webpack.js.org/concepts/. config tool:"
				},
				{
					"date": "2018-08-10T16:09:30.779Z",
					"editor": "qswz",
					"old-value": "webpack is a module bundler for modern JavaScript applications. When webpack processes your application, it recursively builds a dependency graph that includes every module your application needs, then packages all of those modules into a small number of bundles - often only one - to be loaded by the browser. More @ https://webpack.js.org/concepts/. config tool:",
					"new-value": "webpack is a module bundler for modern JavaScript applications. When webpack processes your application, it recursively builds a dependency graph that includes every module your application needs, then packages all of those modules into a small number of bundles - often only one - to be loaded by the browser. More @ https://webpack.js.org/concepts/. config tool:"
				},
				{
					"date": "2018-08-10T16:11:23.116Z",
					"editor": "qswz",
					"old-value": "webpack is a module bundler for modern JavaScript applications. When webpack processes your application, it recursively builds a dependency graph that includes every module your application needs, then packages all of those modules into a small number of bundles - often only one - to be loaded by the browser. More @ https://webpack.js.org/concepts/. config tool:",
					"new-value": "webpack is a module bundler for modern JS apps. It recursively builds your application into a dependency graph that includes every module your application needs, then packages all of those modules into a small number of bundles - often only one - to be loaded by the browser. More @ https://webpack.js.org/concepts/. config tool: web.jakoblind.no/webpack-config"
				},
				{
					"date": "2018-11-06T20:47:50.956Z",
					"editor": "qswz",
					"old-value": "webpack is a module bundler for modern JS apps. It recursively builds your application into a dependency graph that includes every module your application needs, then packages all of those modules into a small number of bundles - often only one - to be loaded by the browser. More @ https://webpack.js.org/concepts/. config tool: web.jakoblind.no/webpack-config",
					"new-value": "webpack is a module bundler for modern JS apps. It recursively builds your application into a dependency graph that includes every module your application needs, then packages all of those modules into a small number of bundles - often only one - to be loaded by the browser. More @ webpack.js.org/concepts. Config tool: webpack.jakoblind.no"
				}
			]
		},
		"rust": {
			"value": "Rust is a systems programming language focused on safety, speed, and concurrency. https://rust-lang.org/",
			"creator": "Havvy",
			"date": "2017-09-26T10:03:00.523Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"cheatsheet": {
			"value": "https://github.com/mbeaudru/modern-js-cheatsheet",
			"creator": "qswz",
			"date": "2017-10-01T17:09:18.617Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"hoc": {
			"value": "Higher Order Components In Depth https://medium.com/@franleplant/react-higher-order-components-in-depth-cf9032ee6c3e",
			"creator": "jaawerth",
			"date": "2017-10-05T06:26:13.295Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"higher order components": {
			"alias": "hoc",
			"creator": "jaawerth",
			"date": "2017-10-05T06:27:05.342Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"destructuring": {
			"value": "The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables. An example; `{a, b, c} = require('thing')`; More @  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment",
			"creator": "MJCD",
			"date": "2017-10-09T12:11:39.865Z",
			"popularity": 17,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2019-08-23T20:21:18.968Z",
					"editor": "MJCD",
					"old-value": "The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.  More: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment",
					"new-value": "The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables. An example; `{a, b, c} = require('thing')`; More @  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"
				}
			]
		},
		"spread": {
			"value": "Spread syntax allows an iterable such as an array expression to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected, or an object expression to be expanded in places where zero or more key-value pairs (for object literals) are expected. More; https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator",
			"creator": "MJCD",
			"date": "2017-10-09T12:12:44.410Z",
			"popularity": 20,
			"editors": [],
			"changes": []
		},
		"...": {
			"alias": "spread",
			"creator": "MJCD",
			"date": "2017-10-09T12:12:55.908Z",
			"popularity": 7,
			"editors": [],
			"changes": []
		},
		"template literals": {
			"value": "Template literals are string literals allowing embedded expressions. You can use multi-line strings and string interpolation features with them. They were called \"template strings\" in prior editions of the ES2015 specification. More; https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals",
			"creator": "MJCD",
			"date": "2017-10-23T15:53:27.130Z",
			"popularity": 14,
			"editors": [],
			"changes": []
		},
		"template literal": {
			"alias": "template literals",
			"creator": "MJCD",
			"date": "2017-10-23T15:53:38.209Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"template": {
			"alias": "template literals",
			"creator": "MJCD",
			"date": "2017-10-23T15:53:52.621Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"``": {
			"alias": "template literals",
			"creator": "MJCD",
			"date": "2017-10-23T15:54:02.040Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"ask regex": {
			"value": "Give us 1. What you want to match, 2. Some sample data 3. Your attempt. http://regex101.com/ is useful!",
			"creator": "MJCD",
			"date": "2017-10-29T17:39:31.153Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"regex": {
			"value": "A regular expression, regex or regexp is a sequence of characters that define a search pattern ( More @ More; https://en.wikipedia.org/wiki/Regular_expression ). You can toy with them and learn the syntax @ https://regex101.com",
			"creator": "MJCD",
			"date": "2017-10-29T17:40:48.830Z",
			"popularity": 7,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2017-10-29T17:41:20.705Z",
					"editor": "MJCD",
					"old-value": "A regular expression, regex or regexp[1] (sometimes called a rational expression)[2][3] is, in theoretical computer science and formal language theory, a sequence of characters that define a search pattern. Usually this pattern is then used by string searching algorithms for \"find\" or \"find and replace\" operations on strings. More; https://en.wikipedia.org/wiki/Regular_expression",
					"new-value": "A regular expression, regex or regexp(sometimes called a rational expression) is, in theoretical computer science and formal language theory, a sequence of characters that define a search pattern. Usually this pattern is then used by string searching algorithms for \"find\" or \"find and replace\" operations on strings. More; https://en.wikipedia.org/wiki/Regular_expression"
				},
				{
					"date": "2018-10-19T23:25:41.745Z",
					"editor": "MJCD",
					"old-value": "A regular expression, regex or regexp(sometimes called a rational expression) is, in theoretical computer science and formal language theory, a sequence of characters that define a search pattern. Usually this pattern is then used by string searching algorithms for \"find\" or \"find and replace\" operations on strings. More; https://en.wikipedia.org/wiki/Regular_expression",
					"new-value": "A regular expression, regex or regexp is a sequence of characters that define a search pattern ( More @ More; https://en.wikipedia.org/wiki/Regular_expression ). You can toy with them and learn the syntax @ https://regex101.com"
				}
			]
		},
		"next": {
			"value": "Another satisfied customer! NEXT!!",
			"creator": "ljharb",
			"date": "2017-10-30T22:36:07.201Z",
			"popularity": 328,
			"editors": [],
			"changes": []
		},
		"bubbles": {
			"value": "In javascript events will bubble up to the first bound handler(s) it encounters. A great explanation can be found @ https://javascript.info/bubbling-and-capturing",
			"creator": "MJCD",
			"date": "2017-11-14T11:09:09.202Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"prev": {
			"value": "Customer was not satisfied! PREV!!",
			"creator": "graingert",
			"date": "2017-11-15T17:34:35.151Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"iteration methods": {
			"alias": "iteration",
			"creator": "ljharb",
			"date": "2017-11-21T21:07:56.326Z",
			"popularity": 13,
			"editors": [],
			"changes": []
		},
		"fiddle": {
			"value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, stackblitz.com, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !mcve and !paste",
			"creator": "graingert",
			"date": "2017-11-29T00:23:06.807Z",
			"popularity": 360,
			"editors": [
				"graingert",
				"cjohnson",
				"qswz"
			],
			"changes": [
				{
					"date": "2017-11-29T00:24:53.503Z",
					"editor": "graingert",
					"old-value": "Please create a running example of your code. For browsers: codepen.io, jsbin.com, jsfiddle.net for js+html or for node: repl.it, requirebin.com, runkit.com. See also !paste",
					"new-value": "Please create a running example of your code. For browsers: codepen.io, jsbin.com, jsfiddle.net or for node: repl.it, requirebin.com, runkit.com. See also !paste"
				},
				{
					"date": "2017-12-25T17:54:28.733Z",
					"editor": "graingert",
					"old-value": "Please create a running example of your code. For browsers: codepen.io, jsbin.com, jsfiddle.net or for node: repl.it, requirebin.com, runkit.com. See also !paste",
					"new-value": "Please create a running example of your code. For browsers:  codesandbox.io, codepen.io, jsbin.com, jsfiddle.net or for node: repl.it, requirebin.com, runkit.com. See also !paste"
				},
				{
					"date": "2018-01-13T20:51:49.697Z",
					"editor": "cjohnson",
					"old-value": "Please create a running example of your code. For browsers:  codesandbox.io, codepen.io, jsbin.com, jsfiddle.net or for node: repl.it, requirebin.com, runkit.com. See also !paste",
					"new-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com"
				},
				{
					"date": "2018-01-13T20:53:16.952Z",
					"editor": "cjohnson",
					"old-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com",
					"new-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !paste"
				},
				{
					"date": "2018-01-16T15:27:05.839Z",
					"editor": "graingert",
					"old-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !paste",
					"new-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: codesandbox.io, jsfiddle.net, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !paste"
				},
				{
					"date": "2018-01-16T15:28:56.526Z",
					"editor": "graingert",
					"old-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: codesandbox.io, jsfiddle.net, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !paste",
					"new-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: codesandbox.io, jsfiddle.net, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !paste and !mcve"
				},
				{
					"date": "2018-02-19T20:37:36.726Z",
					"editor": "graingert",
					"old-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: codesandbox.io, jsfiddle.net, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !paste and !mcve",
					"new-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: codesandbox.io, jsfiddle.net, codepen.io, jsbin.com  For node: repl.it, runkit.com. See also !paste and !mcve"
				},
				{
					"date": "2018-05-07T14:50:25.165Z",
					"editor": "qswz",
					"old-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: codesandbox.io, jsfiddle.net, codepen.io, jsbin.com  For node: repl.it, runkit.com. See also !paste and !mcve",
					"new-value": "Please paste your code (gist and other paste sites) or create a running example on codesandbox.io, jsfiddle.net, codepen.io, jsbin.com, repl.it (if there's no HTML output). See also !nopaste and !mcve"
				},
				{
					"date": "2018-05-09T22:24:09.677Z",
					"editor": "cjohnson",
					"old-value": "Please paste your code (gist and other paste sites) or create a running example on codesandbox.io, jsfiddle.net, codepen.io, jsbin.com, repl.it (if there's no HTML output). See also !nopaste and !mcve",
					"new-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !paste"
				},
				{
					"date": "2018-05-09T22:24:16.780Z",
					"editor": "cjohnson",
					"old-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !paste",
					"new-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !paste and !mcve"
				},
				{
					"date": "2018-05-09T22:24:22.315Z",
					"editor": "cjohnson",
					"old-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !paste and !mcve",
					"new-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !mcve and !paste"
				},
				{
					"date": "2018-05-30T23:00:13.687Z",
					"editor": "qswz",
					"old-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !mcve and !paste",
					"new-value": "Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, stackblitz.com, codepen.io, jsbin.com  For node: repl.it, runkit.com, gist.github.com. See also !mcve and !paste"
				}
			]
		},
		"beacon": {
			"value": "The keepalive option can be used to allow the request to outlive the page. Fetch with the keepalive flag is a replacement for the Navigator.sendBeacon() API.",
			"creator": "graingert",
			"date": "2017-12-05T22:59:20.129Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"pb": {
			"alias": "badpastebin",
			"creator": "graingert",
			"date": "2017-12-07T23:04:04.503Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"iiaafe": {
			"value": "immediately invoked async arrow function expression, see also !async and !iife",
			"creator": "graingert",
			"date": "2017-12-12T05:03:18.809Z",
			"popularity": 8,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2017-12-12T05:04:01.697Z",
					"editor": "graingert",
					"old-value": "immediately invoked async arrow function, see also !async and !iife",
					"new-value": "immediately invoked async arrow function expression, see also !async and !iife"
				}
			]
		},
		"badoo": {
			"value": "Stolen, Orcacle, Insecure, Old, Unsupported etc. Use LibreOffice",
			"creator": "graingert",
			"date": "2017-12-12T16:39:20.712Z",
			"popularity": 0,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2017-12-12T16:39:28.634Z",
					"editor": "graingert",
					"old-value": "Stolen, Orcacle, Insure, Old, Unsupported etc. Use LibreOffice",
					"new-value": "Stolen, Orcacle, Insecure, Old, Unsupported etc. Use LibreOffice"
				}
			]
		},
		"node_env what node_env": {
			"value": "production does: https://gist.github.com/antishok/bfc643079f98148e38d0260134c6dea8",
			"creator": "shoky_",
			"date": "2017-12-13T23:35:52.648Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"node_env": {
			"value": "What NODE_ENV=production does: https://gist.github.com/antishok/bfc643079f98148e38d0260134c6dea8",
			"creator": "shoky_",
			"date": "2017-12-13T23:36:12.819Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"esm": {
			"alias": "es6 modules",
			"creator": "",
			"date": "2017-12-14T00:15:40.705Z",
			"popularity": 15,
			"editors": [],
			"changes": []
		},
		"esmodules": {
			"alias": "es6 modules",
			"creator": "",
			"date": "2017-12-14T00:16:05.450Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"script": {
			"value": "don't use <script> without src=. See also !csp",
			"creator": "graingert",
			"date": "2017-12-20T20:37:36.166Z",
			"popularity": 42,
			"editors": [],
			"changes": []
		},
		"xss": {
			"value": "Cross-site scripting, or XSS, is a term for a category of security issues in which an attacker injects HTML tags or scripts into a target website. Defending against XSS attacks is typically the job of server-side web developers. However, client-side JavaScript programmers must also be aware of, and defend against, cross-site scripting.",
			"creator": "i_am_a_banana",
			"date": "2017-12-22T14:01:57.847Z",
			"popularity": 8,
			"editors": [],
			"changes": []
		},
		"feature testing": {
			"value": "Feature testing (sometimes called capability testing) is a powerful technique for coping with incompatibilities. If you want to use a feature or capability that may not be supported by all browsers, include code in your script that tests to see whether that feature is supported. If the desired feature is not supported on the current platform, either do not use it on that platform or provide alternati",
			"creator": "i_am_a_banana",
			"date": "2017-12-22T14:07:22.731Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"throttle2": {
			"value": "https://gist.github.com/caub/da489a286b0098d0fcd799b66a252196#file-debounce-throttle-js",
			"creator": "qswz",
			"date": "2017-12-23T06:03:58.459Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"marked": {
			"value": "use markdown-it",
			"creator": "qswz",
			"date": "2017-12-27T04:39:23.806Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"h": {
			"value": "const h=(tag, ...children) => { const el=document.createElement(tag); el.append(...children); return el}",
			"creator": "qswz",
			"date": "2017-12-28T00:30:49.685Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"what-iteration": {
			"value": "https://sdras.github.io/array-explorer/",
			"creator": "systemfault",
			"date": "2017-12-28T00:40:01.674Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"nick": {
			"value": "please set a nickname with /nick and register it with freenode with /msg NickServ register",
			"creator": "graingert",
			"date": "2018-01-03T01:26:23.750Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"mjs": {
			"alias": "es6 modules",
			"creator": "",
			"date": "2018-01-04T07:34:13.716Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"loadscript": {
			"value": "url=>new Promise(r => {var s=document.createElement('script'); s.async=true; s.src=url; s.onload=r; document.body.append(s)})",
			"creator": "qswz",
			"date": "2018-01-04T18:49:59.316Z",
			"popularity": 5,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2018-01-04T19:22:19.393Z",
					"editor": "qswz",
					"old-value": "url=>new Promise(r => {var s=document.createElement('script'); s.async=true; s.src=url; s.onload=r;})",
					"new-value": "url=>new Promise(r => {var s=document.createElement('script'); s.async=true; s.src=url; s.onload=r; document.body.append(s)})"
				}
			]
		},
		"bad pastebin": {
			"alias": "badpastebin",
			"creator": "graingert",
			"date": "2018-01-04T20:36:09.993Z",
			"popularity": 57,
			"editors": [
				"cjohnson"
			],
			"changes": [
				{
					"date": "2018-01-04T20:36:39.851Z",
					"editor": "cjohnson",
					"old-alias": "no pastebin",
					"new-alias": "badpastebin"
				}
			]
		},
		"no pastebin": {
			"alias": "badpastebin",
			"creator": "cjohnson",
			"date": "2018-01-04T20:36:52.223Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"gist.js": {
			"value": "remember the .js extension on your gist!",
			"creator": "graingert",
			"date": "2018-01-04T20:39:05.381Z",
			"popularity": 1,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2018-01-04T20:39:49.856Z",
					"editor": "graingert",
					"old-value": "remember the .js extension on you gist!",
					"new-value": "remember the .js extension on your gist!"
				}
			]
		},
		"gistjs": {
			"alias": "gist.js",
			"creator": "graingert",
			"date": "2018-01-04T20:39:18.849Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"tdz": {
			"value": "The variables are created when their containing Lexical Environment is instantiated [...] but may not be accessed in any way until the variable’s LexicalBinding is evaluated.",
			"creator": "graingert",
			"date": "2018-01-05T17:28:34.238Z",
			"popularity": 10,
			"editors": [],
			"changes": []
		},
		"nohello": {
			"value": "Do you have a question? also see http://nohello.com",
			"creator": "progysm",
			"date": "2018-01-05T21:59:59.438Z",
			"popularity": 58,
			"editors": [],
			"changes": []
		},
		"hi": {
			"alias": "hello",
			"creator": "MJCD",
			"date": "2018-01-05T22:24:59.103Z",
			"popularity": 25,
			"editors": [],
			"changes": []
		},
		"rest-spread": {
			"value": "rest vs spread: `a(...b)` is a spread param, `function (a, ...b) {` is a rest param, `[a, ...b]` is array spread, `const [a, ...b] = c;` is array rest, `const a = { ...b };` is object spread, `const { a, ...b } = c;` is object rest.",
			"creator": "ljharb",
			"date": "2018-01-06T02:58:34.624Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"react state callback": {
			"value": "If setState uses values from props or old state (e.g. `this.setState({ counter: this.state.counter + 1 })` ), then you must use the callback form to avoid race conditions in your code. Better yet, always default to the callback form. See https://goo.gl/Pv72xw",
			"creator": "dminuoso",
			"date": "2018-01-08T16:41:43.516Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"rsc": {
			"alias": "react state callback",
			"creator": "dminuoso",
			"date": "2018-01-08T16:41:56.986Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"private npm": {
			"value": "You can pay npm to host a registry where you can publish private packages, or use a tool like https://github.com/verdaccio/verdaccio ",
			"creator": "GreenJello",
			"date": "2018-01-08T19:41:34.433Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"neutrino": {
			"value": "Create and build modern JavaScript applications with zero initial configuration. https://neutrino.js.org/installation/create-new-project.html run: yarn create @neutrinojs/project <dirname>",
			"creator": "graingert",
			"date": "2018-01-08T21:52:27.377Z",
			"popularity": 25,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2018-01-11T21:30:43.031Z",
					"editor": "graingert",
					"old-value": "Create and build modern JavaScript applications with zero initial configuration. yarn create neutrinojs@project <dirname>",
					"new-value": "Create and build modern JavaScript applications with zero initial configuration. yarn create @neutrinojs/project <dirname>"
				},
				{
					"date": "2018-01-17T03:21:51.258Z",
					"editor": "graingert",
					"old-value": "Create and build modern JavaScript applications with zero initial configuration. yarn create @neutrinojs/project <dirname>",
					"new-value": "Create and build modern JavaScript applications with zero initial configuration. https://neutrino.js.org/installation/create-new-project.html run: yarn create @neutrinojs/project <dirname>"
				}
			]
		},
		"jsx spread": {
			"value": "In JSX syntax, you can use the JSX spread operator to take each property of an object and make the object key a prop's name, and the property value be the prop value. e.g. var obj = {x: 1, y: 2}; <Foo {...obj} z={3} /> is <Foo x={1} y={2} z={3} />. If a prop is specified multiple times, in any way, the last literal property (e.g. x={1}) or spread defining that prop will win.",
			"creator": "GreenJello",
			"date": "2018-01-10T17:16:14.598Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"apt": {
			"value": "If you are using a debian-based Linux distribution, please do not install node.js using its package manager, use !nvm instead",
			"creator": "systemfault",
			"date": "2018-01-11T01:13:43.377Z",
			"popularity": 3,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2018-01-16T07:51:11.197Z",
					"editor": "ljharb",
					"old-value": "If you are using a debian-based Linux distribution, please do not install NodeJS using its package manager, use NVM instead (!nvm for more information)",
					"new-value": "If you are using a debian-based Linux distribution, please do not install node.js using its package manager, use !nvm instead"
				}
			]
		},
		"data": {
			"alias": "server data",
			"creator": "graingert",
			"date": "2018-01-11T15:26:37.509Z",
			"popularity": 27,
			"editors": [],
			"changes": []
		},
		"nomongo": {
			"alias": "no mongo",
			"creator": "graingert",
			"date": "2018-01-12T05:39:56.287Z",
			"popularity": 32,
			"editors": [],
			"changes": []
		},
		"nomorning": {
			"value": "just ask, we don't care what time it is",
			"creator": "qswz",
			"date": "2018-01-13T20:53:03.624Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"no offset": {
			"alias": "nooffset",
			"creator": "graingert",
			"date": "2018-01-13T22:47:42.894Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"rest vs spread": {
			"alias": "rest-spread",
			"creator": "ljharb",
			"date": "2018-01-16T07:50:17.381Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"testcase": {
			"alias": "fiddle",
			"creator": "graingert",
			"date": "2018-01-16T15:28:30.711Z",
			"popularity": 8,
			"editors": [],
			"changes": []
		},
		"demo es2015": {
			"value": "n> (a=>b=>c=>d=>a<=b<=c<=d)(1)(2)(3)(4)",
			"creator": "MJCD",
			"date": "2018-01-16T21:01:10.800Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"cra": {
			"value": "create-react-app",
			"creator": "graingert",
			"date": "2018-01-17T03:23:28.702Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"promises tldr": {
			"value": "Promises are placeholders for values that'll be provided in the future. They allow composing asynchronous operations like synchronous ones. More; https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
			"creator": "MJCDoffice",
			"date": "2018-01-30T10:46:10.472Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"ts": {
			"alias": "typescript",
			"creator": "graingert",
			"date": "2018-02-01T02:48:29.820Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"suicide": {
			"value": "Please run `sudo npm install -g ransomware` to continue",
			"creator": "MJCDoffice",
			"date": "2018-02-01T14:23:44.507Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"random sort": {
			"value": "Do not use an inconsistent \"random\" comparator: https://gist.github.com/Maxdamantus/50c6bff80129f96671e7/raw/231eea3e3281bd699049158a2ee3887bcec38043/gistfile1.txt",
			"creator": "Maxdamantus",
			"date": "2018-02-11T13:48:16.439Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"token": {
			"value": "require('crypto').randomBytes(128 / 8).toString('base64');",
			"creator": "graingert",
			"date": "2018-02-13T16:03:55.255Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"eio": {
			"value": "Your question/problem may not be clear enough on its own. Please provide complete example(s) of inputs and outputs for the code you want, so we can help you. For example if you need to implement 'add', an example could be \"with inputs 2 and 3, I want the output 5\". Thanks!",
			"creator": "GreenJello",
			"date": "2018-02-13T17:07:13.794Z",
			"popularity": 1,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2018-02-13T17:07:41.869Z",
					"editor": "GreenJello",
					"old-value": "Your question/problem may not be clear enough on its own. Please provide complete example(s) of inputs and outputs for the code you want, so we can help you. For example if you need to implement 'add', an example could be \"with inputs 2 and 3, I want the output 5\".",
					"new-value": "Your question/problem may not be clear enough on its own. Please provide complete example(s) of inputs and outputs for the code you want, so we can help you. For example if you need to implement 'add', an example could be \"with inputs 2 and 3, I want the output 5\". Thanks!"
				}
			]
		},
		"topic": {
			"value": "Please try to keep conversation limited to web technologies and more specifically, JavaScript topics. For social talk please join #web-social",
			"creator": "graingert",
			"date": "2018-02-21T18:40:36.910Z",
			"popularity": 56,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2019-01-05T14:12:10.787Z",
					"editor": "MJCD",
					"old-value": "stay on topic: JavaScript",
					"new-value": "Please try to keep conversation limited to web technologies and more specifically, JavaScript topics. For social talk please join #web-social"
				}
			]
		},
		"src": {
			"value": "Always put relevant JavaScript codes in relevant source documents, and make the codes easier to read. Refactoring is key. Don't get caught up with Promises and callbacks, for they will have different states when debugging. Always use \"debugger\" when needed.",
			"creator": "wedr_",
			"date": "2018-02-21T20:22:30.219Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"go": {
			"value": "Remember, Go is to JavaScript as Pain is to Banana, or Ham is to Lungs. We don't know Go, and if you're trying to apply your Go knowledge to JavaScript, it probably won't work. - Try #go-nuts",
			"creator": "graingert",
			"date": "2018-02-22T22:17:23.356Z",
			"popularity": 1,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2018-02-22T22:30:34.285Z",
					"editor": "graingert",
					"old-value": "Remember, Go is to JavaScript as Pain is to Banana, or Ham is to Lungs. We don't know Go, and if you're trying to apply your Go knowledge to JavaScript, it probably won't work. - Try ##golang",
					"new-value": "Remember, Go is to JavaScript as Pain is to Banana, or Ham is to Lungs. We don't know Go, and if you're trying to apply your Go knowledge to JavaScript, it probably won't work. - Try #go-nuts"
				}
			]
		},
		"css-grid": {
			"value": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout, http://cssgridgarden.com",
			"creator": "qswz",
			"date": "2018-03-07T14:07:22.116Z",
			"popularity": 5,
			"editors": [],
			"changes": []
		},
		"jsperf": {
			"value": "JS engine optimizations are too complex for naive benchmarking; see https://youtu.be/g0ek4vV7nEA",
			"creator": "`slikts",
			"date": "2018-03-07T17:16:53.642Z",
			"popularity": 16,
			"editors": [],
			"changes": []
		},
		"defer-async": {
			"value": "http://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html",
			"creator": "qswz",
			"date": "2018-03-12T00:03:25.386Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"adequate": {
			"value": "https://mostly-adequate.gitbooks.io/mostly-adequate-guide",
			"creator": "systemfault",
			"date": "2018-03-16T08:27:19.794Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"cssinjs": {
			"value": "It's great! drop sass and use it: https://codesandbox.io/s/32mvjyjyxq",
			"creator": "qswz",
			"date": "2018-03-17T22:30:25.559Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"htmlcollection": {
			"value": "The getElementsBy* methods return HTMLCollections, which can be difficult to work with. Consider using querySelectorAll instead, which returns a static NodeList - unlike an HTMLCollection, it can be iterated over directly, it won't change while it's being iterated over, and it's much more flexible.",
			"creator": "Akinator",
			"date": "2018-03-18T00:12:37.124Z",
			"popularity": 23,
			"editors": [],
			"changes": []
		},
		"date.now": {
			"value": "Always use `Date.now()` instead of `new Date().getTime()` or `+new Date()`",
			"creator": "qswz",
			"date": "2018-03-22T16:38:54.720Z",
			"popularity": 5,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2018-04-28T01:20:13.239Z",
					"editor": "ljharb",
					"old-value": "use it instead of new Date().getTime()",
					"new-value": "Always use `Date.now()` instead of `new Date().getTime()` or `+new Date()`"
				}
			]
		},
		"innertext": {
			"value": "It is highly recommended to use `textContent` instead of `innerText` - see  https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent#Differences_from_innerText http://perfectionkills.com/the-poor-misunderstood-innerText",
			"creator": "qswz",
			"date": "2018-03-26T18:28:10.247Z",
			"popularity": 15,
			"editors": [
				"Akinator",
				"qswz"
			],
			"changes": [
				{
					"date": "2018-03-27T01:00:33.787Z",
					"editor": "Akinator",
					"old-value": "http://perfectionkills.com/the-poor-misunderstood-innerText",
					"new-value": "`innerText` is a quirky nonstandard property that IE introduced. It is highly recommended to instead use the standard, quicker, more reliable `textContent` instead - see http://perfectionkills.com/the-poor-misunderstood-innerText"
				},
				{
					"date": "2018-06-04T00:50:59.851Z",
					"editor": "qswz",
					"old-value": "`innerText` is a quirky nonstandard property that IE introduced. It is highly recommended to instead use the standard, quicker, more reliable `textContent` instead - see http://perfectionkills.com/the-poor-misunderstood-innerText",
					"new-value": "It is highly recommended to instead use `textContent` instead of `innerText` - see  https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent#Differences_from_innerText http://perfectionkills.com/the-poor-misunderstood-innerText"
				},
				{
					"date": "2018-06-04T00:51:57.722Z",
					"editor": "qswz",
					"old-value": "It is highly recommended to instead use `textContent` instead of `innerText` - see  https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent#Differences_from_innerText http://perfectionkills.com/the-poor-misunderstood-innerText",
					"new-value": "It is highly recommended to use `textContent` instead of `innerText` - see  https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent#Differences_from_innerText http://perfectionkills.com/the-poor-misunderstood-innerText"
				}
			]
		},
		"innerhtml text": {
			"value": "Only use `innerHTML` when you're deliberately using or inserting HTML markup (which can have security and encoding problems). When you're setting or retrieving text values, use `textContent` instead.",
			"creator": "Akinator",
			"date": "2018-03-27T01:12:20.651Z",
			"popularity": 9,
			"editors": [],
			"changes": []
		},
		"json what": {
			"value": "Don't say \"json object\", you can call it \"json string\", \"json data\" or just \"json\" instead. See !json object.",
			"creator": "sillyslux",
			"date": "2018-04-01T18:15:36.196Z",
			"popularity": 5,
			"editors": [
				"sillyslux"
			],
			"changes": [
				{
					"date": "2018-04-01T18:16:23.091Z",
					"editor": "sillyslux",
					"old-value": "Don't say \"json object\", call it \"json string\", \"json data\" or just \"json\" instead. See !json object.",
					"new-value": "Don't say \"json object\", you can call it \"json string\", \"json data\" or just \"json\" instead. See !json object."
				}
			]
		},
		"git linus": {
			"value": "https://www.mail-archive.com/dri-devel@lists.sourceforge.net/msg39091.html",
			"creator": "qswz",
			"date": "2018-04-02T02:56:09.098Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"react163": {
			"value": "Learn about the new APIs and changes in React 16.3.0 https://reactjs.org/blog/2018/03/29/react-v-16-3.html",
			"creator": "GreenJello",
			"date": "2018-04-03T23:00:54.625Z",
			"popularity": 2,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2018-04-28T01:22:33.791Z",
					"editor": "ljharb",
					"old-value": "https://reactjs.org/blog/2018/03/29/react-v-16-3.html",
					"new-value": "Learn about the new APIs and changes in React 16.3.0 https://reactjs.org/blog/2018/03/29/react-v-16-3.html"
				}
			]
		},
		"r163": {
			"alias": "react163",
			"creator": "GreenJello",
			"date": "2018-04-03T23:01:22.781Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"16.3": {
			"alias": "react-163",
			"creator": "GreenJello",
			"date": "2018-04-03T23:02:06.630Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"repl.it": {
			"alias": "replit",
			"creator": "jaawerth",
			"date": "2018-04-04T04:38:47.488Z",
			"popularity": 7,
			"editors": [],
			"changes": []
		},
		"unicode brackets": {
			"value": "http://xahlee.info/comp/unicode_matching_brackets.html",
			"creator": "qswz",
			"date": "2018-04-04T21:28:26.537Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"boilerplate": {
			"value": "Please avoid using boilerplates, 'template repositories', generators, or other such tools. They almost always end up generating code that you either don't need or won't understand, and it will cost you a lot of unnecessary time to debug problems with them. A much better approach is to just start simple, and add bits and pieces as you find yourself needing them.",
			"creator": "joepie91",
			"date": "2018-04-05T20:55:57.606Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"object sorting": {
			"value": "Objects are specifically supposed to always have their properties enumerable by insertion order. However, this is not a behavior you should rely on as that behaviour is likely to changed based on browser-specific optimizations. You should always treat objects as though they could be in ANY order and act accordingly. One way around it is to sort both at the time you inspect it.",
			"creator": "MJCDoffice",
			"date": "2018-04-13T14:00:37.224Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"sort objects": {
			"value": "cmp=(a,b)=>Number(a)-Number(b); cmp.locale=(a,b)=>String(a).localeCompare(String(b)); [{name:\"stefanie\",age:29},{name:\"marc\",age:29},{name:\"amy\",age:33}].sort((a,b)=>cmp.locale(a.name,b.name)||cmp(a.age||b.age)); //sort objects by name [, then age]",
			"creator": "AH4B",
			"date": "2018-04-13T20:24:02.166Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"iterate object": {
			"value": "{[Symbol.iterator](){return Object.entries(this)[Symbol.iterator]()}}",
			"creator": "qswz",
			"date": "2018-04-19T00:14:31.594Z",
			"popularity": 2,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2018-04-19T00:28:15.417Z",
					"editor": "qswz",
					"old-value": "{[Symbol.iterator](){return Array.prototype[Symbol.iterator].call(Object.entries(this))}}",
					"new-value": "{[Symbol.iterator](){return Object.entries(this)[Symbol.iterator]()}}"
				}
			]
		},
		"proprietary": {
			"value": "Proprietary systems and platforms, especially commercial ones, are not that commonly used by people in this channel. If nobody is able to answer your questions about one of them, you may get help faster by contacting their customer service for help.",
			"creator": "joepie91",
			"date": "2018-04-23T17:49:47.496Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"array iterations": {
			"alias": "iteration",
			"creator": "",
			"date": "2018-04-25T10:33:07.378Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"nopaste": {
			"value": "Show some code, but don't paste it to the channel. Use sites like gist.github.com or dpaste.com. Ideally it should be executable, see !paste",
			"creator": "systemfault",
			"date": "2018-04-28T01:17:51.504Z",
			"popularity": 42,
			"editors": [],
			"changes": []
		},
		"react-163": {
			"alias": "react163",
			"creator": "ljharb",
			"date": "2018-04-28T01:22:13.013Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"devicons cheatsheet": {
			"value": "< t4gs: icons | http://vorillaz.github.io/devicons/#/cheat >",
			"creator": "a11cake",
			"date": "2018-05-01T23:30:42.462Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"most legible": {
			"value": "\"most legible\" said the C programmer in ##javascript",
			"creator": "MJCD",
			"date": "2018-05-09T09:20:08.178Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"snip array-fill": {
			"value": "|> function fill (s,v) { return new Array(s||0).fill(v||undefined,0,s||0); }",
			"creator": "MJCD",
			"date": "2018-05-09T09:34:23.651Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"fill": {
			"alias": "snip array-fill",
			"creator": "MJCD",
			"date": "2018-05-09T09:34:58.089Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"mod2": {
			"value": "(x, value) => x>=0 ? x % value : value + x % value",
			"creator": "qswz",
			"date": "2018-05-31T16:09:52.832Z",
			"popularity": 0,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2018-05-31T16:10:14.059Z",
					"editor": "qswz",
					"old-value": "(x, value)=>x>=0 ? x%value : value+ x%value",
					"new-value": "(x, value) => x>=0 ? x % value : value + x % value"
				}
			]
		},
		"nobotspam": {
			"value": "Please, use the bot with /msg ecmabot <cmd>",
			"creator": "qswz",
			"date": "2018-05-31T18:20:13.143Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"promises intro": {
			"alias": "promises",
			"creator": "ljharb",
			"date": "2018-06-05T03:24:19.375Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"thoughts": {
			"value": "https://i.imgur.com/y8gdMVx.jpg",
			"creator": "slikts",
			"date": "2018-06-05T14:31:10.558Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"redux-promise": {
			"value": "https://gist.github.com/caub/d55d87751a096ef176d96507793b1b56",
			"creator": "qswz",
			"date": "2018-06-07T01:48:59.517Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"strong typing": {
			"value": "\"Strong typing\" probably doesn't mean what you think it means, and it doesn't magically result in bug-free code. See also: https://www.destroyallsoftware.com/compendium/types?share_key=baf6b67369843fa2",
			"creator": "joepie91",
			"date": "2018-06-15T10:07:56.061Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"const (correct definition)": {
			"value": "A more stable code base might want to use const more often to indicate intent. If your code base is changing quickly, const could just confuse matters.",
			"creator": "Agamemnus",
			"date": "2018-06-19T08:14:29.795Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"no loops": {
			"alias": "iteration",
			"creator": "",
			"date": "2018-06-26T19:58:00.776Z",
			"popularity": 48,
			"editors": [],
			"changes": []
		},
		"streams-handbook": {
			"value": "https://github.com/substack/stream-handbook",
			"creator": "jaawerth",
			"date": "2018-06-29T04:04:57.727Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"streams handbook": {
			"alias": "streams-handbook",
			"creator": "jaawerth",
			"date": "2018-06-29T04:05:11.210Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"stream-handbook": {
			"alias": "streams-handbook",
			"creator": "jaawerth",
			"date": "2018-06-29T04:05:37.760Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"precedence": {
			"value": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence",
			"creator": "qswz",
			"date": "2018-07-07T21:57:26.276Z",
			"popularity": 4,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2019-09-07T22:51:01.892Z",
					"editor": "qswz",
					"old-value": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence",
					"new-value": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence"
				}
			]
		},
		"fib": {
			"value": "var a=[1,1]; var fib=n=>a[n]||(a[n]=fib(n-1)+fib(n-2));",
			"creator": "qswz",
			"date": "2018-07-11T01:05:07.417Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"welcome": {
			"value": "Welcome! We're a community of friendly, helpful people who are happy to help any time 24/7/365. If you're new to IRC, it might seem rude that people often won't say hi. Most patrons are actively working, so please feel free to just ask questions! Where possible, someone will likely answer. For more help, check out !ask, !help, !nohello, !xy",
			"creator": "samsch",
			"date": "2018-07-13T16:30:30.830Z",
			"popularity": 9,
			"editors": [],
			"changes": []
		},
		"environment variables": {
			"value": "Don't use environment variables to store credentials like passwords and keys! They're too easy to leak, because many tools don't treat environment variables as private information. Use configuration files (eg. config.json) with strict permissions (0400) instead.",
			"creator": "joepie91",
			"date": "2018-07-14T18:48:39.632Z",
			"popularity": 18,
			"editors": [
				"joepie91"
			],
			"changes": [
				{
					"date": "2019-01-18T22:01:39.179Z",
					"editor": "joepie91",
					"old-value": "Don't use environment variables to store credentials like passwords and keys! They're too easy to leak, because many tools don't treat environment variables as private information. Use configuration files (eg. config.json) with strict permissions instead.",
					"new-value": "Don't use environment variables to store credentials like passwords and keys! They're too easy to leak, because many tools don't treat environment variables as private information. Use configuration files (eg. config.json) with strict permissions (0400) instead."
				}
			]
		},
		"temporal dead zone": {
			"alias": "tdz",
			"creator": "ljharb",
			"date": "2018-07-16T02:35:57.413Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"git dependencies": {
			"value": "It's not recommended to use Git repositories as your dependency source; they can't support all of npm's versioning features, and often fail in strange ways. For development, use `npm link`. For private modules, use something like Verdaccio: https://github.com/verdaccio/verdaccio",
			"creator": "joepie91",
			"date": "2018-07-17T13:55:16.545Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"ast explorer": {
			"value": "AST explorer https://astexplorer.net/ An online AST explorer",
			"creator": "graingert",
			"date": "2018-07-17T23:28:26.150Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"optimization rules": {
			"value": "\"Rule 1: Don't do it. Rule 2 (for experts only). Don't do it yet - that is, not until you have a perfectly clear and unoptimized solution.\" --Michael A. Jackson",
			"creator": "jaawerth",
			"date": "2018-07-23T00:32:04.281Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"opt rules": {
			"alias": "optimization rules",
			"creator": "jaawerth",
			"date": "2018-07-23T00:32:16.196Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"iife parens": {
			"value": "(function () {}()) > (function () {})() … https://www.youtube.com/watch?v=taaEzHI9xyY#t=34m33s (from YUIConf 2011)",
			"creator": "ljharb",
			"date": "2018-07-23T21:48:13.176Z",
			"popularity": 3,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2018-07-23T21:48:38.918Z",
					"editor": "ljharb",
					"old-value": "(function () {}()) > (function () {})() â€” https://www.youtube.com/watch?v=taaEzHI9xyY#t=34m33s (from YUIConf 2011)",
					"new-value": "(function () {}()) > (function () {})() … https://www.youtube.com/watch?v=taaEzHI9xyY#t=34m33s (from YUIConf 2011)"
				}
			]
		},
		"dog balls": {
			"alias": "iife parens",
			"creator": "ljharb",
			"date": "2018-07-23T21:48:21.262Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"roadmap": {
			"value": "How do you get to your goal of being a web developer? https://github.com/kamranahmedse/developer-roadmap",
			"creator": "GreenJello",
			"date": "2018-08-12T06:20:33.815Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"ie 11": {
			"alias": "ie11",
			"creator": "graingert",
			"date": "2018-08-12T13:40:52.957Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"hw": {
			"alias": "homework",
			"creator": "graingert",
			"date": "2018-08-12T15:32:51.194Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"no hastebin": {
			"value": "Please don't use Hastebin; it has extremely poor color contrast, making it difficult for others to read.",
			"creator": "joepie91",
			"date": "2018-08-13T20:32:28.230Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"noloops": {
			"alias": "iteration",
			"creator": "",
			"date": "2018-08-20T12:35:32.276Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"cjs": {
			"alias": "commonjs",
			"creator": "graingert",
			"date": "2018-08-23T02:07:04.565Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"env vars": {
			"alias": "environment variables",
			"creator": "joepie91",
			"date": "2018-08-23T17:14:19.115Z",
			"popularity": 15,
			"editors": [],
			"changes": []
		},
		"wfm": {
			"value": "works for me",
			"creator": "graingert",
			"date": "2018-08-28T23:03:36.541Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"lgtm": {
			"value": "looks good to me",
			"creator": "qswz",
			"date": "2018-08-28T23:04:02.150Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"react indepth": {
			"value": "A comprehensive guide to the display and operation model of React @ https://developmentarc.gitbooks.io/react-indepth/",
			"creator": "MJCD",
			"date": "2018-08-30T17:44:25.669Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"with": {
			"value": "The `with` statement breaks JS engines optimizations, is deprecated and unavailable in strict mode (eg ES modules).  Further reading: http://2ality.com/2011/06/with-statement.html",
			"creator": "niggler",
			"date": "2018-08-31T18:41:01.593Z",
			"popularity": 7,
			"editors": [
				"graingert"
			],
			"changes": [
				{
					"date": "2018-08-31T18:43:36.966Z",
					"editor": "graingert",
					"old-value": "`with` statement is slow and tricky to understand.  It should be avoided.  Further reading: http://2ality.com/2011/06/with-statement.html",
					"new-value": "The `with` statement breaks JS engines optimizations, is deprecated and unavailable in strict mode (eg ES modules).  Further reading: http://2ality.com/2011/06/with-statement.html"
				}
			]
		},
		"bom": {
			"value": "Unicode character U+FEFF \"byte order mark\" (BOM) can be used as the first character in a text stream to declare the encoding of the text. https://en.wikipedia.org/wiki/Byte_order_mark",
			"creator": "Sven_vB",
			"date": "2018-09-02T02:42:22.235Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"m": {
			"value": "You're doing good work!",
			"creator": "joepie91",
			"date": "2018-09-06T00:11:52.352Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"{}": {
			"value": "Is a block and not an object literal in most cases, wrap it in parens if you want the latter (it might work if the object has one entry, as it can't be interpreted as a label, but it's better practice to not rely on it).",
			"creator": "qswz",
			"date": "2018-09-08T13:22:57.425Z",
			"popularity": 2,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2018-09-08T13:29:56.944Z",
					"editor": "qswz",
					"old-value": "Is not an object litteral, but a block, wrap it in parens to get it to work (it might work if the object as one entry, as it can't be interpreted as a label, but it's better practice to not rely on it).",
					"new-value": "Is a block and not an object literal in most cases, wrap it in parens to get it to work (it might work if the object as one entry, as it can't be interpreted as a label, but it's better practice to not rely on it)."
				},
				{
					"date": "2018-09-08T13:30:43.960Z",
					"editor": "qswz",
					"old-value": "Is a block and not an object literal in most cases, wrap it in parens to get it to work (it might work if the object as one entry, as it can't be interpreted as a label, but it's better practice to not rely on it).",
					"new-value": "Is a block and not an object literal in most cases, wrap it in parens if you want the latter (it might work if the object as one entry, as it can't be interpreted as a label, but it's better practice to not rely on it)."
				},
				{
					"date": "2018-09-08T13:31:03.323Z",
					"editor": "qswz",
					"old-value": "Is a block and not an object literal in most cases, wrap it in parens if you want the latter (it might work if the object as one entry, as it can't be interpreted as a label, but it's better practice to not rely on it).",
					"new-value": "Is a block and not an object literal in most cases, wrap it in parens if you want the latter (it might work if the object has one entry, as it can't be interpreted as a label, but it's better practice to not rely on it)."
				}
			]
		},
		"seriously no loops": {
			"value": "you never need loops. You can do everything with .forEach or PTC recursion",
			"creator": "graingert",
			"date": "2018-09-11T00:43:18.332Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"axios": {
			"value": "Promise based HTTP client for the browser and node.js that offers a level of abstraction compared to the XMLHttpRequest or node 'http', 'https' or 'http2' APIs – https://www.npmjs.com/package/axios https://danlevy.net/you-may-not-need-axios/ see also !fetch",
			"creator": "qswz",
			"date": "2018-09-13T01:21:44.667Z",
			"popularity": 17,
			"editors": [
				"DeltaHeavy",
				"graingert"
			],
			"changes": [
				{
					"date": "2019-07-30T02:24:11.326Z",
					"editor": "DeltaHeavy",
					"old-value": "Do you know about fetch?",
					"new-value": "Promise based HTTP client for the browser and node.js that offers a far more useful level of abstraction compared to the Fetch API – https://www.npmjs.com/package/axios"
				},
				{
					"date": "2019-08-19T22:22:11.191Z",
					"editor": "graingert",
					"old-value": "Promise based HTTP client for the browser and node.js that offers a far more useful level of abstraction compared to the Fetch API – https://www.npmjs.com/package/axios",
					"new-value": "Promise based HTTP client for the browser and node.js that offers a far more useful level of abstraction compared to the XMLHttpRequest API – https://www.npmjs.com/package/axios See also !fetch"
				},
				{
					"date": "2019-08-19T22:23:55.565Z",
					"editor": "graingert",
					"old-value": "Promise based HTTP client for the browser and node.js that offers a far more useful level of abstraction compared to the XMLHttpRequest API – https://www.npmjs.com/package/axios See also !fetch",
					"new-value": "Promise based HTTP client for the browser and node.js that offers a far more useful level of abstraction compared to the XMLHttpRequest or node 'http', 'https' or 'http2' APIs – https://www.npmjs.com/package/axios See also !fetch"
				},
				{
					"date": "2019-08-19T22:24:52.950Z",
					"editor": "graingert",
					"old-value": "Promise based HTTP client for the browser and node.js that offers a far more useful level of abstraction compared to the XMLHttpRequest or node 'http', 'https' or 'http2' APIs – https://www.npmjs.com/package/axios See also !fetch",
					"new-value": "Promise based HTTP client for the browser and node.js that offers a level of abstraction compared to the XMLHttpRequest or node 'http', 'https' or 'http2' APIs – https://www.npmjs.com/package/axios See also !fetch"
				},
				{
					"date": "2019-08-19T22:28:19.078Z",
					"editor": "graingert",
					"old-value": "Promise based HTTP client for the browser and node.js that offers a level of abstraction compared to the XMLHttpRequest or node 'http', 'https' or 'http2' APIs – https://www.npmjs.com/package/axios See also !fetch",
					"new-value": "Promise based HTTP client for the browser and node.js that offers a level of abstraction compared to the XMLHttpRequest or node 'http', 'https' or 'http2' APIs – https://www.npmjs.com/package/axios https://danlevy.net/you-may-not-need-axios/ see also !fetch"
				}
			]
		},
		"load-order": {
			"value": "Either place script at the end of <body> or use <script defer src=..> or use DOMContentLoaded event",
			"creator": "qswz",
			"date": "2018-09-15T20:21:10.315Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"c++": {
			"value": "qswz is an idiot",
			"creator": "qswz",
			"date": "2018-09-20T18:12:02.430Z",
			"popularity": 1,
			"editors": [
				"gehn"
			],
			"changes": [
				{
					"date": "2018-09-20T18:18:55.712Z",
					"editor": "gehn",
					"old-value": "http://webhome.phy.duke.edu/~rgb/Beowulf/c++_interview/c++_interview.html",
					"new-value": "qswz is an idiot"
				}
			]
		},
		"snip splitat": {
			"value": "let splitAt = function (array, splitter) { return array.split(splitter).slice(1).join(splitter); }",
			"creator": "MJCD",
			"date": "2018-09-21T19:00:46.404Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"fetchy": {
			"value": "https://gist.github.com/caub/32952abb755ca84738507f1abd14f72b",
			"creator": "gehn",
			"date": "2018-09-25T20:21:04.307Z",
			"popularity": 3,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2018-10-07T22:08:35.719Z",
					"editor": "qswz",
					"old-value": "qswz plays Fortnite",
					"new-value": "https://gist.github.com/caub/32952abb755ca84738507f1abd14f72b"
				}
			]
		},
		"js-only-fiddle": {
			"value": "Use repl.it for a fiddle with only JS",
			"creator": "qswz",
			"date": "2018-10-01T21:33:31.596Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"hamster": {
			"alias": "java",
			"creator": "graingert",
			"date": "2018-10-04T17:48:19.070Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"hastebin": {
			"value": "https://hastebin.com/about.md",
			"creator": "howdoi",
			"date": "2018-10-05T12:27:45.480Z",
			"popularity": 31,
			"editors": [],
			"changes": []
		},
		"poo": {
			"value": "💩",
			"creator": "wedr",
			"date": "2018-10-11T17:38:12.963Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"💩": {
			"value": "poo",
			"creator": "qswz",
			"date": "2018-10-11T17:52:21.331Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"var": {
			"value": "`var` defines a variable in the current function-level scope, and should not be used when `const` or `let` are available (see !babel, !const, and !let). Always use a keyword to declare variables, otherwise you will pollute the global scope (a keyword is required in strict mode).",
			"creator": "graingert",
			"date": "2018-10-18T20:28:52.525Z",
			"popularity": 116,
			"editors": [
				"sillyslux",
				"graingert",
				"ljharb"
			],
			"changes": [
				{
					"date": "2018-11-23T15:49:45.318Z",
					"editor": "sillyslux",
					"old-value": "`var` defines a variable in the current function-level scope. Always use `const` to declare values and `let` to declare variables, otherwise you will pollute the global scope, and declaring variables is required in strict mode. Only use `var` when targeting IE11 without a transpiler",
					"new-value": "`var` defines a variable in the current function-level scope. If you're not targeting IE11 without a transpiler, use !const and !let instead."
				},
				{
					"date": "2018-11-23T19:25:33.654Z",
					"editor": "graingert",
					"old-value": "`var` defines a variable in the current function-level scope. If you're not targeting IE11 without a transpiler, use !const and !let instead.",
					"new-value": "Never use var - except when doing code-gen for IE11. `var` declares a variable in the current function-level scope. Use !const or !let instead."
				},
				{
					"date": "2018-12-03T11:09:41.213Z",
					"editor": "ljharb",
					"old-value": "Never use var - except when doing code-gen for IE11. `var` declares a variable in the current function-level scope. Use !const or !let instead.",
					"new-value": "`var` defines a variable in the current function-level scope. Always use `const`, `let`, or `var` to declare variables, otherwise you will pollute the global scope, and declaring variables is required in strict mode."
				},
				{
					"date": "2018-12-04T22:41:49.095Z",
					"editor": "graingert",
					"old-value": "`var` defines a variable in the current function-level scope. Always use `const`, `let`, or `var` to declare variables, otherwise you will pollute the global scope, and declaring variables is required in strict mode.",
					"new-value": "`var` defines a variable in the current function-level scope, and should not be used, except when writing code for IE11 without a transpiler. Always use `const` or `let` to declare variables, otherwise you will pollute the global scope, and declaring variables is required in strict mode."
				},
				{
					"date": "2018-12-04T22:48:16.735Z",
					"editor": "ljharb",
					"old-value": "`var` defines a variable in the current function-level scope, and should not be used, except when writing code for IE11 without a transpiler. Always use `const` or `let` to declare variables, otherwise you will pollute the global scope, and declaring variables is required in strict mode.",
					"new-value": "`var` defines a variable in the current function-level scope, and should not be used when `const` or `let` are available (see !babel, !const, and !let). Always use a keyword to declare variables, otherwise you will pollute the global scope (a keyword is required in strict mode)."
				}
			]
		},
		"react webpack": {
			"value": "A step-by-step, minimal guide to setting up a react+babel+webpack project  https://medium.freecodecamp.org/part-1-react-app-from-scratch-using-webpack-4-562b1d231e75",
			"creator": "GreenJello",
			"date": "2018-10-19T03:18:24.902Z",
			"popularity": 1,
			"editors": [
				"GreenJello"
			],
			"changes": [
				{
					"date": "2018-10-19T03:19:53.867Z",
					"editor": "GreenJello",
					"old-value": "https://medium.freecodecamp.org/part-1-react-app-from-scratch-using-webpack-4-562b1d231e75",
					"new-value": "A step-by-step, minimal guide to setting up a react+babel+webpack project  https://medium.freecodecamp.org/part-1-react-app-from-scratch-using-webpack-4-562b1d231e75"
				}
			]
		},
		"setup webpack": {
			"alias": "react webpack",
			"creator": "GreenJello",
			"date": "2018-10-19T03:18:44.996Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"keypress": {
			"value": "Detail on handling keyboard events can be found @ https://www.quirksmode.org/dom/events/keys.html",
			"creator": "MJCD",
			"date": "2018-10-19T20:56:16.112Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"keyup": {
			"alias": "keypress",
			"creator": "MJCD",
			"date": "2018-10-19T20:56:26.493Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"keydown": {
			"alias": "keypress",
			"creator": "MJCD",
			"date": "2018-10-19T20:56:33.309Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"lint": {
			"value": "Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. More: https://en.wikipedia.org/wiki/Lint_%28software%29",
			"creator": "MJCD",
			"date": "2018-10-19T23:04:22.073Z",
			"popularity": 5,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2018-10-19T23:04:33.084Z",
					"editor": "MJCD",
					"old-value": "Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. More: https://en.wikipedia.org/wiki/Lint_%28software%29",
					"new-value": "Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. More: https://en.wikipedia.org/wiki/Lint_%28software%29"
				}
			]
		},
		"linting": {
			"alias": "lint",
			"creator": "MJCD",
			"date": "2018-10-19T23:04:41.934Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"linter": {
			"alias": "lint",
			"creator": "MJCD",
			"date": "2018-10-19T23:04:47.350Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"centre": {
			"value": "There are many methods to horizontal and vertical centering in HTML/CSS. More @ https://stackoverflow.com/questions/19461521/how-to-center-an-element-horizontally-and-vertically",
			"creator": "MJCD",
			"date": "2018-10-19T23:08:37.190Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"center": {
			"alias": "centre",
			"creator": "MJCD",
			"date": "2018-10-19T23:08:50.538Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"css centre": {
			"alias": "centre",
			"creator": "MJCD",
			"date": "2018-10-19T23:09:35.386Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"css center": {
			"alias": "centre",
			"creator": "MJCD",
			"date": "2018-10-19T23:09:40.019Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"regex101": {
			"value": "https://regex101.com is a tool for playing with regular expressions of various engines against a given set of data to see the results live",
			"creator": "MJCD",
			"date": "2018-10-19T23:26:50.389Z",
			"popularity": 14,
			"editors": [],
			"changes": []
		},
		"offtopic": {
			"value": "Please try to avoid derailing people who need help with social conversation. Off-topic isn't against the rules, however can be annoying to other users. Please be considerate and consider joining #web-social",
			"creator": "MJCD",
			"date": "2018-10-19T23:32:00.192Z",
			"popularity": 7,
			"editors": [],
			"changes": []
		},
		"cookies": {
			"value": "An HTTP cookie (web cookie, browser cookie) is a small piece of data that a server sends to the user's web browser. The browser may store it and send it back with the next request to the same server. [ Recent: See !cookie disclaimer ] ~ More @ https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies",
			"creator": "MJCD",
			"date": "2018-10-19T23:34:07.114Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"js": {
			"alias": "javascript",
			"creator": "MJCD",
			"date": "2018-10-20T00:07:11.665Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"jsfiddle": {
			"alias": "fiddle",
			"creator": "MJCD",
			"date": "2018-10-20T00:54:01.823Z",
			"popularity": 15,
			"editors": [],
			"changes": []
		},
		"test": {
			"alias": "fiddle",
			"creator": "",
			"date": "2018-10-20T00:54:52.254Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"abuse": {
			"value": "Please be courteous to the other members of the channel. Please see !offtopic (...) for more information. If you think someone is behaving inappropriately please use !ops to signal for a lil' help. Enjoy your stay and treat others how you would wish to be treated.",
			"creator": "MJCD",
			"date": "2018-10-20T01:06:45.563Z",
			"popularity": 4,
			"editors": [],
			"changes": []
		},
		"languages": {
			"value": "[ See also !ded ] #python | #php | #gamedev & ##gamedev | ##programming [general multi-language] (ADD MORE HERE)",
			"creator": "MJCD",
			"date": "2018-10-20T01:24:46.332Z",
			"popularity": 0,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2018-10-20T01:25:44.659Z",
					"editor": "MJCD",
					"old-value": "[ See also !ded ] #python | #php | ##programming [general multi-language] (ADD MORE HERE)",
					"new-value": "[ See also !ded ] #python | #php | #gamedev & ##gamedev | ##programming [general multi-language] (ADD MORE HERE)"
				}
			]
		},
		"other languages": {
			"alias": "languages",
			"creator": "MJCD",
			"date": "2018-10-20T01:24:59.879Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"other channels": {
			"alias": "languages",
			"creator": "MJCD",
			"date": "2018-10-20T01:27:25.642Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"destroy me": {
			"value": "`BRRT-BRRT~~~",
			"creator": "MJCD",
			"date": "2018-10-20T20:58:35.685Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"cookie disclaimer": {
			"value": "In May 2011, a European Union (EU) Directive was adopted by all EU member countries to protect consumer privacy online. Why do these consent notices even exist and what is their purpose? More @ `!cookie disclaimer 2` & https://premium.wpmudev.org/blog/cookie-consent-notices/",
			"creator": "MJCD",
			"date": "2018-10-20T21:52:53.268Z",
			"popularity": 2,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2018-10-20T21:58:26.313Z",
					"editor": "MJCD",
					"old-value": "In May 2011, a European Union (EU) Directive was adopted by all EU member countries to protect consumer privacy online. Why do these consent notices even exist and what is their purpose? More @ https://premium.wpmudev.org/blog/cookie-consent-notices/",
					"new-value": "In May 2011, a European Union (EU) Directive was adopted by all EU member countries to protect consumer privacy online. Why do these consent notices even exist and what is their purpose? More @ `!cookie disclaimer 2` & https://premium.wpmudev.org/blog/cookie-consent-notices/"
				}
			]
		},
		"cookie disclaimer 2": {
			"value": "This piece of privacy legislation requires that covered websites: Let users know if they are using cookies; Explain what data is gathered through the use of cookies and how that data is used, and; Gather user consent to the use of cookies. More @ https://premium.wpmudev.org/blog/cookie-consent-notices/",
			"creator": "MJCD",
			"date": "2018-10-20T21:57:29.995Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"be nice": {
			"alias": "abuse",
			"creator": "MJCD",
			"date": "2018-10-22T22:28:54.198Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"behave!": {
			"alias": "abuse",
			"creator": "MJCD",
			"date": "2018-10-22T22:29:08.857Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"gettime": {
			"value": "pls use Date.parse(x) instead of new Date(x).getTime()",
			"creator": "qswz",
			"date": "2018-10-26T16:10:34.184Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"error": {
			"value": "What do you mean it errors? What error? What happens when you try to run it? What did you try to run? What's the output? What's the error message? What did you want or expect to happen? Can you post a screenshot or a fiddle? See also !Doesn't work",
			"creator": "graingert",
			"date": "2018-10-27T21:40:19.821Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"microservices": {
			"value": "https://news.ycombinator.com/item?id=18255500",
			"creator": "qswz",
			"date": "2018-10-27T23:40:40.264Z",
			"popularity": 0,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2018-10-27T23:50:15.036Z",
					"editor": "qswz",
					"old-value": "https://news.ycombinator.com/item?id=18255110",
					"new-value": "https://news.ycombinator.com/item?id=18255500"
				}
			]
		},
		"spread operator": {
			"alias": "spread",
			"creator": "MJCD",
			"date": "2018-10-31T17:45:21.954Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"eqeq": {
			"alias": "comparisons",
			"creator": "",
			"date": "2018-11-07T16:42:09.411Z",
			"popularity": 5,
			"editors": [],
			"changes": []
		},
		"cookie law": {
			"alias": "cookie disclaimer",
			"creator": "MJCD",
			"date": "2018-11-08T12:54:50.991Z",
			"popularity": 1,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2018-11-08T12:54:55.486Z",
					"editor": "MJCD",
					"old-alias": "cookie",
					"new-alias": "cookie disclaimer"
				}
			]
		},
		"gist your code": {
			"alias": "gist",
			"creator": "graingert",
			"date": "2018-11-17T19:08:51.209Z",
			"popularity": 7,
			"editors": [],
			"changes": []
		},
		"whyt": {
			"value": "What have you tried? make a jsfiddle or repl.it",
			"creator": "qswz",
			"date": "2018-11-20T14:20:52.512Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"standard": {
			"value": "it's not standard, and recommends bad practices, see !airbnb and !semicolons",
			"creator": "graingert",
			"date": "2018-11-20T15:39:23.439Z",
			"popularity": 9,
			"editors": [],
			"changes": []
		},
		"querystring": {
			"value": "window.URLSearchParams a standard way to create query strings http://mdn.io/URLSearchParams. For older browsers (IE*) see !polyfill",
			"creator": "globalThis",
			"date": "2018-11-20T21:12:05.557Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"no var": {
			"alias": "var",
			"creator": "graingert",
			"date": "2018-11-23T19:25:50.015Z",
			"popularity": 84,
			"editors": [],
			"changes": []
		},
		"declare": {
			"value": "always declare variables and values with !let and !const. Don't use implicitly created globals",
			"creator": "graingert",
			"date": "2018-11-27T13:51:49.329Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"csrf": {
			"value": "Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated. Applications that use cookies need to be carefully written to avoid this problem. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)",
			"creator": "graingert",
			"date": "2018-11-27T22:39:17.109Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"sparse": {
			"value": "A \"sparse\" array is one that has \"holes\" - in other words, an index between 0 and the length minus one that is not an own property of the array. `1 in [1,,3]` will return `false`, because it's sparse. The Array constructor should never be used, because with a single integer argument, it creates a sparse array.",
			"creator": "ljharb",
			"date": "2018-12-04T23:08:51.215Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"freecodecamp": {
			"value": "Free Code Camp is an excellent resource for learning javascript. Start your journey today @ https://www.freecodecamp.org/",
			"creator": "MJCD",
			"date": "2018-12-06T20:15:20.891Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"bezier": {
			"value": "[ A Primer on Bézier Curves - https://pomax.github.io/bezierinfo/ ]",
			"creator": "earendel",
			"date": "2018-12-22T02:08:12.051Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"self signed": {
			"value": "TL;TR | HTTPS with \"self signed\" certificates memo | https://gist.github.com/hagb4rd/a8fc133c37a14277738a53ca060bb3b4#file-self-signed-md",
			"creator": "earendel",
			"date": "2018-12-22T04:03:34.205Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"snip deg2rad": {
			"value": "|> function deg2rad(deg) { return deg * Math.PI / 180; }",
			"creator": "MJCD",
			"date": "2018-12-26T00:23:48.752Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"mutation observer": {
			"alias": "mutation observers",
			"creator": "MJCD",
			"date": "2019-01-02T09:49:46.346Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"iterators": {
			"alias": "iteration",
			"creator": "MJCD",
			"date": "2019-01-02T14:07:29.917Z",
			"popularity": 6,
			"editors": [],
			"changes": []
		},
		"iterator": {
			"alias": "iteration",
			"creator": "MJCD",
			"date": "2019-01-02T14:07:42.169Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"iterable": {
			"value": "The iterable protocol allows JavaScript objects to define or customize their iteration behavior, such as what values are looped over in a for..of construct. More @ https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols",
			"creator": "MJCD",
			"date": "2019-01-02T14:09:01.083Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"datefns": {
			"alias": "date-fns",
			"creator": "MJCD",
			"date": "2019-01-04T12:01:16.728Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"tc39": {
			"value": "TC39 are the standards body that moderate and have final say over all things ecma (see !ecma and !js). You can explore what they're upto over @ https://github.com/tc39/proposals",
			"creator": "MJCD",
			"date": "2019-01-05T14:21:27.340Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"ecma": {
			"value": "\"The development of this Standard started in November 1996. The first edition of this Ecma Standard was adopted by the Ecma General Assembly of June 1997.\" More background @ http://es5.github.io/#introduction",
			"creator": "MJCD",
			"date": "2019-01-05T14:22:57.423Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"reverse proxy": {
			"value": "In computer networks, a reverse proxy is a type of proxy server that retrieves resources on behalf of a client from one or more servers. These resources are then returned to the client, appearing as if they originated from the proxy server itself. More @ https://en.wikipedia.org/wiki/Reverse_proxy",
			"creator": "MJCD",
			"date": "2019-01-05T15:45:28.824Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"reverse proxies": {
			"alias": "reverse proxy",
			"creator": "MJCD",
			"date": "2019-01-05T15:46:06.731Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"recursive": {
			"value": "see recursive",
			"creator": "niggler",
			"date": "2019-01-06T03:56:42.953Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"async": {
			"alias": "promises",
			"creator": "MJCD",
			"date": "2019-01-06T14:31:04.440Z",
			"popularity": 8,
			"editors": [],
			"changes": []
		},
		"await": {
			"alias": "promises",
			"creator": "MJCD",
			"date": "2019-01-06T14:31:15.474Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"unexpected fiddle": {
			"value": "Why using jsfiddle if it's just a paste?",
			"creator": "qswz",
			"date": "2019-01-17T23:02:25.043Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"react tutorial": {
			"value": "The best way to get started with React is with the React Tutorial: https://reactjs.org/tutorial/tutorial.html If you are new to JavaScript as well, you should start learning that first (some resource for learning JavaScript can be found with !eloquent and !interactive).",
			"creator": "samsch",
			"date": "2019-01-21T21:56:23.420Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"subjective": {
			"value": "That question(s) appear to be too circumstantial and subjective to your exact needs to have any \"correct\" or \"best\" answer. You are the best person to determine what is \"!best\" for you (See also: !fastest)",
			"creator": "MJCD_",
			"date": "2019-01-25T16:06:56.405Z",
			"popularity": 5,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2019-09-30T15:37:42.527Z",
					"editor": "MJCD",
					"old-value": "Don't expect absolute answers to subjective questions. See also; !faster !better",
					"new-value": "That question(s) appear to be too circumstantial and subjective to your exact needs to have any \"correct\" or \"best\" answer. You are the best person to determine what is \"!best\" for you (See also: !fastest)"
				}
			]
		},
		"domain": {
			"value": "A domain is a field of study that defines a set of common requirements, terminology, and functionality for any software program constructed to solve a problem in the area of computer programming, known as domain engineering. A problem domain is the area of expertise or application that needs to be examined to solve a problem. Focusing on a problem domain is simply looking at only the topics of an individual's",
			"creator": "burzuk",
			"date": "2019-01-25T22:08:20.628Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"ordered data": {
			"value": "Arrays should be used for data that has an implied order. Note: JS does not have native support for sparse arrays as in many languages (ie PHP), however they can be emulated, see !snip sparse",
			"creator": "MJCD_",
			"date": "2019-01-25T23:08:43.281Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"object order": {
			"value": "Objects have a reliable implied order based on insertion order. This is not part of the specification for objects however, and thus objects should generally be treated as unordered datasets ~ however there are still easy ways to idiomatically iterate objects based on this implied order. See !snip iterateObject",
			"creator": "MJCD_",
			"date": "2019-01-25T23:17:24.619Z",
			"popularity": 0,
			"editors": [
				"MJCD_"
			],
			"changes": [
				{
					"date": "2019-01-25T23:17:42.241Z",
					"editor": "MJCD_",
					"old-value": "Objects have a realiable implied order based on insertion order. This is not part of the specification for objects however, and thus objects should generally be treated as unordered datasets ~ however there are still easy ways to idiomatically iterate objects based on this implied order. See !snip iterateObject",
					"new-value": "Objects have a reliable implied order based on insertion order. This is not part of the specification for objects however, and thus objects should generally be treated as unordered datasets ~ however there are still easy ways to idiomatically iterate objects based on this implied order. See !snip iterateObject"
				}
			]
		},
		"object ordering": {
			"alias": "object order",
			"creator": "MJCD_",
			"date": "2019-01-25T23:18:05.527Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"property order": {
			"alias": "object order",
			"creator": "MJCD_",
			"date": "2019-01-25T23:19:01.516Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"property ordering": {
			"alias": "object order",
			"creator": "MJCD_",
			"date": "2019-01-25T23:19:11.445Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"nan": {
			"value": "Not a Number is not a number, and is not equal to anything, including Not a Number. More @ https://stackoverflow.com/questions/19955898/why-is-nan-nan-false",
			"creator": "MJCD",
			"date": "2019-01-27T13:12:15.530Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"forget": {
			"value": "I don't remember.",
			"creator": "Cyp_",
			"date": "2019-01-28T12:41:04.549Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"classes": {
			"value": "Class hierarchies? Don't do that! http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)",
			"creator": "MJCD",
			"date": "2019-01-28T12:43:13.327Z",
			"popularity": 7,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2019-01-29T00:18:51.526Z",
					"editor": "ljharb",
					"old-value": "JavaScript classes, introduced in ECMAScript 2015, are primarily syntactical sugar over JavaScript's existing prototype-based inheritance. The class syntax does not introduce a new object-oriented inheritance model to JavaScript. More @ https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes",
					"new-value": "Class hierarchies? Don't do that! http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)"
				}
			]
		},
		"accessibility": {
			"value": "At its core, the Web is about people being able to find and access information. That information may be for education, entertainment, e-commerce, etc. But increasingly, access to online information is essential to our daily lives. For people with disabilities who have access to the Internet, independent access to information offers an unprecedented amount of freedom => https://soap.stanford.edu/getting-started/why-accessibility-matters",
			"creator": "MJCD",
			"date": "2019-01-30T22:25:07.204Z",
			"popularity": 3,
			"editors": [
				"MJCD"
			],
			"changes": [
				{
					"date": "2019-01-30T22:25:29.473Z",
					"editor": "MJCD",
					"old-value": "At its core, the Web is about people being able to find and access information. That information may be for education, entertainment, e-commerce, etc. But increasingly, access to online information is essential to our daily lives. For people with disabilities who have access to the Internet, independent access to information offers an unprecedented amount of freedom. More @ https://soap.stanford.edu/getting-started/why-accessibility-ma",
					"new-value": "At its core, the Web is about people being able to find and access information. That information may be for education, entertainment, e-commerce, etc. But increasingly, access to online information is essential to our daily lives. For people with disabilities who have access to the Internet, independent access to information offers an unprecedented amount of freedom => https://soap.stanford.edu/getting-started/why-accessibility-matters"
				}
			]
		},
		"scrolljacking": {
			"value": "https://blog.hubspot.com/marketing/scrolljacking-the-good-the-bad-the-ugly",
			"creator": "qswz",
			"date": "2019-02-18T11:06:59.976Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"didn't work": {
			"alias": "doesn't work",
			"creator": "MJCD",
			"date": "2019-02-22T17:40:25.686Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"throw": {
			"value": "Throwing an Error is ONLY for \"exception\"al difficulties. The main use case is when you need to break out of a chain of activities that you do not control. Ideally - handle the error if possible and keep going, log the error on the server and once again, keep going.",
			"creator": "MJCD",
			"date": "2019-02-25T22:17:15.786Z",
			"popularity": 1,
			"editors": [
				"MJCD",
				"ljharb"
			],
			"changes": [
				{
					"date": "2019-02-25T22:21:39.254Z",
					"editor": "MJCD",
					"old-value": "Throwing an error is ONLY for \"exception\"al difficulties with processing something. The main use case is when you need to break out of a chain of activities that you do not control. It is colloquially in JS referred to as 'throwing an error' where `error` is to be read as \"exception\" behaviour. Ideally - handle the error if possible and keep going, or at a bare minimum log the error and initiate any required actions such as (ie) sending",
					"new-value": "!learn throw=Throwing an Error is ONLY for \"exception\"al difficulties. The main use case is when you need to break out of a chain of activities that you do not control. Ideally - handle the error if possible and keep going, log the error on the server and once again, keep going."
				},
				{
					"date": "2019-02-26T02:11:59.947Z",
					"editor": "ljharb",
					"old-value": "!learn throw=Throwing an Error is ONLY for \"exception\"al difficulties. The main use case is when you need to break out of a chain of activities that you do not control. Ideally - handle the error if possible and keep going, log the error on the server and once again, keep going.",
					"new-value": "Throwing an Error is ONLY for \"exception\"al difficulties. The main use case is when you need to break out of a chain of activities that you do not control. Ideally - handle the error if possible and keep going, log the error on the server and once again, keep going."
				}
			]
		},
		"throw exception": {
			"alias": "throw",
			"creator": "MJCD",
			"date": "2019-02-25T22:22:20.786Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"throw error": {
			"alias": "throw",
			"creator": "MJCD",
			"date": "2019-02-25T22:22:29.152Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"show": {
			"alias": "paste",
			"creator": "niggler",
			"date": "2019-03-01T13:15:45.940Z",
			"popularity": 7,
			"editors": [],
			"changes": []
		},
		"alternatives": {
			"value": "When asking for alternatives for a library, always tell us exactly *why* you need an alternative. If you don't include that information, we can't know what problem you're running into, and so we can't give you any suggestions because we don't know if those alternatives have the same problem or not.",
			"creator": "joepie91",
			"date": "2019-03-07T19:26:54.031Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"length": {
			"value": "The number of lines of code isn't an issue - until it is. Don't !macro optimize when you don't know the way it will even be executed/used often.",
			"creator": "MJCD",
			"date": "2019-03-17T17:45:40.380Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"lines of code": {
			"alias": "length",
			"creator": "MJCD",
			"date": "2019-03-17T17:45:57.596Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"file size": {
			"alias": "length",
			"creator": "MJCD",
			"date": "2019-03-17T17:46:14.265Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"scottsterling": {
			"value": "THE MAN! THE MYTH! THE LEGEND!",
			"creator": "wedr",
			"date": "2019-03-19T17:55:13.637Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"npx": {
			"value": "Tool to run local node project binaries or, if not present, install/run from a tmp cache https://github.com/zkat/npx . Included in node >= 8",
			"creator": "jaawerth",
			"date": "2019-04-02T20:25:38.700Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"return await": {
			"value": "You might not need await https://jakearchibald.com/2017/await-vs-return-vs-return-await",
			"creator": "qswz",
			"date": "2019-04-04T13:52:50.936Z",
			"popularity": 0,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2019-04-04T13:53:28.309Z",
					"editor": "qswz",
					"old-value": "return await, and picking the right one is important.",
					"new-value": "You might not need await https://jakearchibald.com/2017/await-vs-return-vs-return-await"
				}
			]
		},
		"toothpaste": {
			"alias": "paste",
			"creator": "graingert",
			"date": "2019-04-04T14:30:28.427Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"yx": {
			"value": "You think you have a solution - but the problem does not (and probably never did) exist",
			"creator": "MJCD",
			"date": "2019-04-06T12:13:41.522Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"ctd": {
			"value": "You should consult the official documentation of X for [further] clarification",
			"creator": "MJCD",
			"date": "2019-04-07T19:56:40.757Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"rtfm": {
			"alias": "ctd",
			"creator": "MJCD",
			"date": "2019-04-07T19:56:58.613Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"consult the docs": {
			"alias": "ctd",
			"creator": "MJCD",
			"date": "2019-04-07T19:57:13.470Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"consult the documentation": {
			"alias": "ctd",
			"creator": "MJCD",
			"date": "2019-04-07T19:59:06.914Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"fliptable": {
			"value": "(╯°□°)╯︵ ┻━┻",
			"creator": "wedr",
			"date": "2019-04-16T20:03:50.960Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"o": {
			"value": "https://rob-bell.net/2009/06/a-beginners-guide-to-big-o-notation/",
			"creator": "devsnek",
			"date": "2019-04-18T23:20:37.070Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"cache": {
			"value": "If you experience caching issues there are many solutions. A very quick/simple solution is to add a querystring value that's just a timestamp (ie \"https://thing.com/?1556182887\") and/or for development purposes in the dev tools options of chrome/ff there is a checkbox to not cache the page while dev tools is open",
			"creator": "MJCD",
			"date": "2019-04-25T14:01:50.288Z",
			"popularity": 3,
			"editors": [],
			"changes": []
		},
		"cache buster": {
			"alias": "cache",
			"creator": "MJCD",
			"date": "2019-04-25T14:02:05.141Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"cachebuster": {
			"alias": "cache",
			"creator": "MJCD",
			"date": "2019-04-25T14:02:14.131Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"quote caraffi": {
			"value": "<caraffi_> not leaving any poo on desk, tho. I actually want to come back here tomorrow :D",
			"creator": "MJCD",
			"date": "2019-04-25T18:25:53.762Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"inline script": {
			"value": "You should never do inline scripts, JS goes in .js files",
			"creator": "qswz",
			"date": "2019-04-26T20:30:26.927Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"fetchjson": {
			"value": "https://gist.github.com/caub/e006d55b458322bafbc39ba32be34718",
			"creator": "qswz",
			"date": "2019-05-14T23:00:12.154Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"bin": {
			"alias": "gist",
			"creator": "graingert",
			"date": "2019-05-23T05:26:44.103Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"compose": {
			"value": "(...fns) => (x) => fns.reduceRight((v, f) => f(v), x)",
			"creator": "qswz",
			"date": "2019-05-28T20:28:31.306Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"compare": {
			"value": "=>Note that in MOST cases you will want the first answers second solution, and can be defined as a simple utility function as they have done. https://stackoverflow.com/questions/1068834/object-comparison-in-javascript",
			"creator": "MJCD",
			"date": "2019-05-29T16:10:54.143Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"comparing": {
			"alias": "compare",
			"creator": "MJCD",
			"date": "2019-05-29T16:11:10.291Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"comparing objects": {
			"alias": "compare",
			"creator": "MJCD",
			"date": "2019-05-29T16:11:22.714Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"compare objects": {
			"alias": "compare",
			"creator": "MJCD",
			"date": "2019-05-29T16:11:32.024Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"comparison": {
			"alias": "compare",
			"creator": "MJCD",
			"date": "2019-05-29T16:12:08.088Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"const hoisted": {
			"value": "n> const a = 3; { console.log(a); const a = 2; } /* if `const`/`let` was not hoisted, this would log `3`; if it had no TDZ, it would log `2` */",
			"creator": "ljharb",
			"date": "2019-06-01T02:04:05.815Z",
			"popularity": 4,
			"editors": [
				"ljharb"
			],
			"changes": [
				{
					"date": "2019-06-01T02:11:24.976Z",
					"editor": "ljharb",
					"old-value": "n> const a = 3; { console.log(a); const a = 2; } /* if const was not hoisted, this would log `2` */",
					"new-value": "n> const a = 3; { console.log(a); const a = 2; } /* if `const`/`let` was not hoisted, this would log `3`; if it had no TDZ, it would log `2` */"
				}
			]
		},
		"let hoisted": {
			"alias": "const hoisted",
			"creator": "ljharb",
			"date": "2019-06-01T02:04:17.027Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"const hoisting": {
			"alias": "const hoisted",
			"creator": "ljharb",
			"date": "2019-06-01T02:10:54.307Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"let hoisting": {
			"alias": "const hoisted",
			"creator": "ljharb",
			"date": "2019-06-01T02:10:56.856Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"js-paste": {
			"value": "For a paste with only JS code, avoid jsfiddle/codepen/jsbin",
			"creator": "qswz",
			"date": "2019-06-09T00:36:58.513Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"mutilation": {
			"value": "painful mutations",
			"creator": "qswz",
			"date": "2019-06-18T23:29:41.092Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"jsconf:react-hooks": {
			"value": "https://youtu.be/9jWwO7McMbU?t=9912",
			"creator": "qswz",
			"date": "2019-06-26T00:51:47.728Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"slepp": {
			"alias": "sleep",
			"creator": "graingert",
			"date": "2019-06-26T23:48:50.732Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"array(n)": {
			"value": "Don't use Array(n), prefer Array.from({length: n}, (_, i) => i)",
			"creator": "qswz",
			"date": "2019-07-12T12:20:11.644Z",
			"popularity": 1,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2019-07-12T12:20:44.600Z",
					"editor": "qswz",
					"old-value": "Don't use this, prefer Array.from({length: n}, (_, i) => i)",
					"new-value": "Don't use Array(n), prefer Array.from({length: n}, (_, i) => i)"
				},
				{
					"date": "2019-07-12T12:21:26.243Z",
					"editor": "qswz",
					"old-value": "Don't use Array(n), prefer Array.from({length: n}, (_, i) => i)",
					"new-value": "Don't use Array(n), prefer Array.from({length: n}, (_, i) => i) or string.repeat(n) if the result is a string"
				},
				{
					"date": "2019-07-12T12:27:18.324Z",
					"editor": "qswz",
					"old-value": "Don't use Array(n), prefer Array.from({length: n}, (_, i) => i) or string.repeat(n) if the result is a string",
					"new-value": "Don't use Array(n), prefer Array.from({length: n}, (_, i) => i)"
				}
			]
		},
		"patterns.join('')": {
			"value": "Use pattern.repeat(n)",
			"creator": "qswz",
			"date": "2019-07-12T12:27:10.395Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"gcd": {
			"value": "(a,b) => b === 0 ? a : gcd(b, a%b)",
			"creator": "qswz",
			"date": "2019-07-21T01:35:05.216Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"premop": {
			"alias": "premature optimization",
			"creator": "ljharb",
			"date": "2019-07-30T02:27:11.755Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"snip delay2": {
			"value": "let delay2 = (t, ...vs) => new Promise(r => setTimeout(r, t, ...vs)) or util.promisify(setTimeout)",
			"creator": "MJCD",
			"date": "2019-08-02T13:50:09.545Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"snip delay": {
			"value": "|> let delay2 = (t, ...vs) => new Promise(r => setTimeout(r, t, ...vs)) or util.promisify(setTimeout)",
			"creator": "MJCD",
			"date": "2019-08-02T13:50:48.300Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"fpjargon": {
			"value": "Jargon from the functional programming world in simple terms! http://git.io/fp-jargons",
			"creator": "howdoi",
			"date": "2019-08-04T15:59:13.312Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"delay": {
			"alias": "sleep",
			"creator": "qswz",
			"date": "2019-08-21T16:25:37.250Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"ie11": {
			"value": "All mainstream Windows users gained access to Edge on January 9th, 2018. All extended support ends October 14, 2025. https://web.archive.org/web/20180105110806/http://allyncs.com/docs/lifecyclesupport.html",
			"creator": "graingert",
			"date": "2019-08-23T02:12:03.481Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"array-replace-pure": {
			"value": "arr.map((ai, i) => i===index ? a : ai) or [...arr.slice(0,i), a, ...arr.slice(i+1)] or [...arr[0:i], a, ...arr[i+1:]] (with slice-notation proposal stage1)",
			"creator": "qswz",
			"date": "2019-08-23T19:27:13.434Z",
			"popularity": 0,
			"editors": [
				"qswz"
			],
			"changes": [
				{
					"date": "2019-08-23T19:27:55.774Z",
					"editor": "qswz",
					"old-value": "arr.map((ai, i) => i===index ? newAi : ai)",
					"new-value": "arr.map((ai, i) => i===index ? newAi : ai) or [...arr.slice(0,i), a, ...arr.slice(i+1)]"
				},
				{
					"date": "2019-08-23T19:28:30.876Z",
					"editor": "qswz",
					"old-value": "arr.map((ai, i) => i===index ? newAi : ai) or [...arr.slice(0,i), a, ...arr.slice(i+1)]",
					"new-value": "arr.map((ai, i) => i===index ? a : ai) or [...arr.slice(0,i), a, ...arr.slice(i+1)]"
				},
				{
					"date": "2019-08-23T19:29:20.306Z",
					"editor": "qswz",
					"old-value": "arr.map((ai, i) => i===index ? a : ai) or [...arr.slice(0,i), a, ...arr.slice(i+1)]",
					"new-value": "arr.map((ai, i) => i===index ? a : ai) or [...arr.slice(0,i), a, ...arr.slice(i+1)] or [...arr[0:i], a, ...arr[i+1:]] (with slice-notation proposal stage1)"
				}
			]
		},
		"destructuring assignment": {
			"alias": "destructuring",
			"creator": "MJCD",
			"date": "2019-08-23T20:21:37.459Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"polyfill.io": {
			"value": "This service is not recommended best practice over simply providing/bundling the polyfills required for the specified target standard. While easy to implement, you are relying on an external, free service with no responsibility to you, just to make your own site work. For what it's worth you can investigate their service further at http://polyfill.io",
			"creator": "qswz",
			"date": "2019-09-03T00:27:55.447Z",
			"popularity": 8,
			"editors": [
				"qswz",
				"ljharb"
			],
			"changes": [
				{
					"date": "2019-09-03T00:37:59.392Z",
					"editor": "qswz",
					"old-value": "<script nomodule src=\"https://polyfill.io/v3/polyfill.js?features=es5,es6,es7&flags=always\"></script>",
					"new-value": "<script nomodule src=\"https://polyfill.io/v3/polyfill.js?flags=always&features=default,fetch\"></script>"
				},
				{
					"date": "2019-09-28T04:06:13.084Z",
					"editor": "ljharb",
					"old-value": "<script nomodule src=\"https://polyfill.io/v3/polyfill.js?flags=always&features=default,fetch\"></script>",
					"new-value": "This service is not recommended best practice over simply providing/bundling the polyfills required for the specified target standard. While easy to implement, you are relying on an external, free service with no responsibility to you, just to make your own site work. For what it's worth you can investigate their service further at http://polyfill.io"
				}
			]
		},
		"brotli": {
			"value": "Brotli is a compression algorithm used in modern https encryption. See https://github.com/google/brotli",
			"creator": "MJCD",
			"date": "2019-09-07T14:53:15.169Z",
			"popularity": 4,
			"editors": [
				"niggler"
			],
			"changes": [
				{
					"date": "2019-10-09T12:06:43.467Z",
					"editor": "niggler",
					"old-value": "The current state of Brotli gives us some mixed impressions. There is no yes/no answer to the question \"Is Brotli better than gzip?\". It definitely looks like a big win for static content compression, but on the web where the content is dynamic we also need to consider on-the-fly compression. More @ https://blog.cloudflare.com/results-experimenting-brotli/",
					"new-value": "brotli is a compression algorithm used in modern https encryption. See https://github.com/google/brotli"
				},
				{
					"date": "2019-10-09T12:06:50.322Z",
					"editor": "niggler",
					"old-value": "brotli is a compression algorithm used in modern https encryption. See https://github.com/google/brotli",
					"new-value": "Brotli is a compression algorithm used in modern https encryption. See https://github.com/google/brotli"
				}
			]
		},
		"brotli compression": {
			"alias": "brotli",
			"creator": "MJCD",
			"date": "2019-09-07T14:53:26.351Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"cloudflare": {
			"value": "Cloudflare is a web infrastructure and website security company, providing content delivery network services, DDoS mitigation, Internet security, and distributed domain name server services. More @ https://support.cloudflare.com",
			"creator": "MJCD",
			"date": "2019-09-07T14:54:40.193Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"ttl": {
			"value": "Time To Live, a mechanism for setting an expiration time on content - especially where caching is involved",
			"creator": "MJCD",
			"date": "2019-09-07T14:55:38.421Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"amp": {
			"value": "Accelerated Mobile Pages (“AMP”) Project is an open source initiative that came out of discussions between publishers and technology companies about the need to improve the entire mobile content ecosystem for everyone. More @ https://amp.dev/",
			"creator": "MJCD",
			"date": "2019-09-07T15:03:59.160Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"http/2": {
			"alias": "http2",
			"creator": "MJCD",
			"date": "2019-09-07T15:11:23.939Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"http3": {
			"value": "HTTP/3 accelerates HTTP requests by using QUIC, which provides encryption and performance improvements compared to TCP and TLS.",
			"creator": "MJCD",
			"date": "2019-09-07T15:12:24.909Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"http/3": {
			"alias": "http3",
			"creator": "MJCD",
			"date": "2019-09-07T15:12:31.438Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"distraction-junkie": {
			"value": "http://www.componentowl.com/blog/index.html%3Fp=664.html",
			"creator": "qswz",
			"date": "2019-09-14T23:20:43.990Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"setintervel": {
			"alias": "setinterval",
			"creator": "graingert",
			"date": "2019-09-17T02:26:26.343Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"js sucks": {
			"value": "JS is a high level scripting language and as with most of its peers does have some quirks. However, we are acutely aware of literally any \"fault\" you can name. Stahp. Let's talk about something less asinine (:",
			"creator": "MJCDawy",
			"date": "2019-09-18T09:10:51.742Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"airbnb-react": {
			"value": "We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb && echo '{\"extends\": \"airbnb-base\"}' > .eslintrc` see also !eslint and !airbnb",
			"creator": "graingert",
			"date": "2019-09-22T18:09:50.907Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"qsa": {
			"alias": "queryselector",
			"creator": "MJCD",
			"date": "2019-09-26T13:19:45.701Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"qs": {
			"alias": "queryselector",
			"creator": "MJCD",
			"date": "2019-09-26T13:20:01.665Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		},
		"sleep": {
			"value": "JavaScript in the browser doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). Instead, use the setTimeout function. Example: `do_this(); window.setTimeout(do_this_in_after_at_least_2seconds, 2e3);`",
			"creator": "ljharb",
			"date": "2019-09-28T04:06:53.955Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"politics": {
			"alias": "offtopic",
			"creator": "MJCD",
			"date": "2019-09-29T06:22:33.025Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"search": {
			"value": "Have you checked if there is an existing module that meets your needs? Search '[npm/github] xyz javascript' first so we don't have to. Up your search game even further @ https://moz.com/learn/seo/search-operators",
			"creator": "MJCD",
			"date": "2019-09-30T16:42:38.755Z",
			"popularity": 2,
			"editors": [],
			"changes": []
		},
		"cart2": {
			"value": "(a,b) => a.flatMap(x => b.map(y=>[x,y]));",
			"creator": "qswz",
			"date": "2019-10-01T23:40:46.505Z",
			"popularity": 1,
			"editors": [],
			"changes": []
		},
		"w3fools": {
			"alias": "w3schools",
			"creator": "ljharb",
			"date": "2019-10-03T21:03:16.148Z",
			"popularity": 0,
			"editors": [],
			"changes": []
		}
	},
	"delete_log": [
		{
			"date": "2013-12-16T22:02:08.224Z",
			"editor": "dsamarin",
			"key": "callbacks",
			"value": {
				"value": "Callback hell is easily avoidable. Check out http://callbackhell.com , and look into Promises ( https://gist.github.com/domenic/3889970 )",
				"popularity": 19,
				"creator": "ljharb",
				"editors": []
			}
		},
		{
			"date": "2013-12-16T22:02:11.708Z",
			"editor": "dsamarin",
			"key": "callback",
			"value": {
				"alias": "callbacks",
				"popularity": 2
			}
		},
		{
			"date": "2013-12-28T04:01:20.053Z",
			"editor": "blackkbot",
			"key": "blackkbot",
			"value": {
				"value": "master",
				"creator": "blackkbot",
				"date": "2013-12-28T04:01:06.831Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2013-12-28T04:01:58.967Z",
			"editor": "blackkbot",
			"key": "blackkbot",
			"value": {
				"value": "function blackkbot(){return true;}",
				"creator": "blackkbot",
				"date": "2013-12-28T04:01:49.637Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2013-12-28T04:24:35.769Z",
			"editor": "blackkbot",
			"key": "blackkbot",
			"value": {
				"value": "(boolean) true;",
				"creator": "blackkbot",
				"date": "2013-12-28T04:02:19.575Z",
				"popularity": 4,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-01-08T22:44:19.058Z",
			"editor": "blackkbot",
			"key": "sigh",
			"value": {
				"value": "s/expression/replace/gi",
				"creator": "blackkbot",
				"date": "2014-01-08T22:44:06.487Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-01-13T21:06:52.323Z",
			"editor": "Sorella",
			"key": "add es6compat",
			"value": {
				"value": "http://kangax.github.io/es5-compat-table/es6/#For..of_loops",
				"creator": "Havvy",
				"date": "2014-01-13T21:04:59.947Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-01-16T07:26:11.682Z",
			"editor": "ljharb",
			"key": "include",
			"value": {
				"value": "Include another JavaScript file programmatically with JavaScript: http://www.phpied.com/javascript-include/",
				"popularity": 6
			}
		},
		{
			"date": "2014-02-05T06:25:45.475Z",
			"editor": "ImBcmDth",
			"key": "unemployment gitmo",
			"value": {
				"value": "http://www.cracked.com/article_20322_6-ways-companies-are-secretly-screwing-job-applicants_p2.html",
				"creator": "Agamemnus",
				"date": "2014-02-05T06:25:13.376Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-02-08T05:36:35.655Z",
			"editor": "ImBcmDth",
			"key": "lmgtfy",
			"value": {
				"value": "http://bit.ly/v8vx4A",
				"creator": "blackkbot",
				"date": "2014-01-07T18:16:13.527Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-02-13T06:39:59.127Z",
			"editor": "ashnur",
			"key": "thisgonnabreak@iamuser",
			"value": {
				"value": "iwonder",
				"creator": "ashnur",
				"date": "2014-02-13T06:39:24.872Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-02-23T06:05:55.300Z",
			"editor": "gkatsev",
			"key": "imbcmdth",
			"value": {
				"value": "A real sport. In the figurative sense, not related to physical activity.",
				"creator": "dwcook",
				"date": "2013-12-16T02:52:45.199Z",
				"popularity": 1,
				"editors": [
					"dwcook"
				],
				"changes": [
					{
						"date": "2013-12-16T02:53:17.636Z",
						"editor": "dwcook",
						"old-value": "A real sport.",
						"new-value": "A real sport. In the figurative sense, not related to physical activity."
					}
				]
			}
		},
		{
			"date": "2014-03-16T21:53:49.128Z",
			"editor": "ashnur",
			"key": "gd",
			"value": {
				"value": "part of php",
				"creator": "Agamemnus",
				"date": "2014-03-16T21:53:17.920Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-03-22T04:30:31.212Z",
			"editor": "ljharb",
			"key": "test factoid",
			"value": {
				"value": ">> 'roar'",
				"creator": "dwcook",
				"date": "2014-03-05T21:37:18.530Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-03-22T19:42:42.749Z",
			"editor": "ImBcmDth",
			"key": "!>> ~",
			"value": {
				"value": "s/^/To run code use /",
				"creator": "ImBcmDth",
				"date": "2014-03-22T19:42:04.828Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-03-23T23:17:59.269Z",
			"editor": "dwcook",
			"key": "=",
			"value": {
				"value": "= testing",
				"creator": "dwcook",
				"date": "2014-03-23T23:17:47.977Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-03-23T23:20:14.718Z",
			"editor": "ImBcmDth",
			"key": "\\x3d",
			"value": {
				"value": "test",
				"creator": "ImBcmDth",
				"date": "2014-03-23T23:20:04.587Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-03-23T23:44:44.033Z",
			"editor": "dwcook",
			"key": "==",
			"value": {
				"value": "wait a minute.. testing",
				"creator": "ImBcmDth",
				"date": "2014-03-23T23:43:11.526Z",
				"popularity": 2,
				"editors": [
					"ImBcmDth"
				],
				"changes": [
					{
						"date": "2014-03-23T23:43:45.587Z",
						"editor": "ImBcmDth",
						"old-value": "test",
						"new-value": "wait a minute.. testing"
					}
				]
			}
		},
		{
			"date": "2014-03-23T23:49:06.279Z",
			"editor": "FireFly",
			"key": "=",
			"value": {
				"value": "loose inequality is kinda bad",
				"creator": "FireFly",
				"date": "2014-03-23T23:41:27.443Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-03-26T02:31:09.639Z",
			"editor": "dwcook",
			"key": "async",
			"value": {
				"value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\".  Instead you need to use callbacks.  See http://jsfiddle.net/8Y5qe/ for an example. jQuery and many other libraries support promises, e.g. http://jsfiddle.net/4n9Gu/.  Also take a look at https://github.com/caolan/async https://github.com/petkaantonov/bluebird https://github.com/kriskowal/q when you have a lot of callbacks.",
				"popularity": 14,
				"creator": "GreenJello",
				"editors": []
			}
		},
		{
			"date": "2014-04-03T02:35:46.056Z",
			"editor": "Agamemnus",
			"key": "nohints",
			"value": {
				"value": "Hints are forbidden!",
				"creator": "Agamemnus",
				"date": "2014-04-03T02:35:34.637Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-04-03T02:36:36.226Z",
			"editor": "Agamemnus",
			"key": "nohints",
			"value": {
				"value": "Hints are forbidden!",
				"creator": "Agamemnus",
				"date": "2014-04-03T02:36:23.990Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-04-03T02:37:24.528Z",
			"editor": "Agamemnus",
			"key": "hint",
			"value": {
				"value": "i am clueless",
				"creator": "blackkbot",
				"date": "2014-04-03T02:36:46.560Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-04-03T02:38:00.957Z",
			"editor": "Agamemnus",
			"key": "sentient",
			"value": {
				"value": "Johnny Depp? I'm not sure. I prefer him as a pirate.",
				"creator": "Agamemnus",
				"date": "2014-04-03T02:37:11.417Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-04-03T02:41:09.252Z",
			"editor": "Agamemnus",
			"key": "racist",
			"value": {
				"value": "No",
				"creator": "Agamemnus",
				"date": "2014-04-03T02:40:46.092Z",
				"popularity": 3,
				"editors": [
					"Agamemnus"
				],
				"changes": [
					{
						"date": "2014-04-03T02:40:53.950Z",
						"editor": "Agamemnus",
						"old-value": "Yes",
						"new-value": "No"
					}
				]
			}
		},
		{
			"date": "2014-04-03T02:42:17.248Z",
			"editor": "Agamemnus",
			"key": "racist",
			"value": {
				"value": "No",
				"creator": "Agamemnus",
				"date": "2014-04-03T02:41:18.519Z",
				"popularity": 1,
				"editors": [
					"Agamemnus"
				],
				"changes": [
					{
						"date": "2014-04-03T02:41:44.324Z",
						"editor": "Agamemnus",
						"old-value": "Yes",
						"new-value": "No"
					}
				]
			}
		},
		{
			"date": "2014-04-06T06:45:56.893Z",
			"editor": "ljharb",
			"key": "class",
			"value": {
				"alias": "classes",
				"popularity": 16
			}
		},
		{
			"date": "2014-06-17T19:40:53.605Z",
			"editor": "j201",
			"key": "premature ~",
			"value": {
				"value": "s/effeciency/efficiency/",
				"creator": "j201",
				"date": "2014-06-17T19:40:05.640Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-07-27T22:13:26.647Z",
			"editor": "Sorella",
			"key": "promises ~",
			"value": {
				"value": "s/see also !cps/contrast with !cps/",
				"creator": "Sorella",
				"date": "2014-07-27T22:13:12.389Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-07-30T20:12:36.526Z",
			"editor": "j201",
			"key": "ded ~",
			"value": {
				"value": "s/#browserify/##bootstrap - #browserify/",
				"creator": "j201",
				"date": "2014-07-30T20:12:04.968Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-08-10T23:30:45.614Z",
			"editor": "ljharb",
			"key": "paranoid programming",
			"value": {
				"value": "It is like defensive programming but to an extent that is irrational, like performing assignments twice just in case someone deletes one of them.",
				"creator": "Agamemnus",
				"date": "2013-12-27T07:22:06.772Z",
				"popularity": 1,
				"editors": [
					"ImBcmDth"
				],
				"changes": [
					{
						"date": "2013-12-27T07:23:27.218Z",
						"editor": "ImBcmDth",
						"old-value": "It is like defensive programming but to an extent that is insane, like doing assignments twice in case someone deletes one of them.",
						"new-value": "It is like defensive programming but to an extent that is irrational, like doing assignments twice in case someone deletes one of them.",
						"regex": "s/insane/irrational/"
					},
					{
						"date": "2013-12-27T07:24:03.993Z",
						"editor": "ImBcmDth",
						"old-value": "It is like defensive programming but to an extent that is irrational, like doing assignments twice in case someone deletes one of them.",
						"new-value": "It is like defensive programming but to an extent that is irrational, like performing assignments twice in case someone deletes one of them.",
						"regex": "s/doing/performing/"
					},
					{
						"date": "2013-12-27T07:24:25.636Z",
						"editor": "ImBcmDth",
						"old-value": "It is like defensive programming but to an extent that is irrational, like performing assignments twice in case someone deletes one of them.",
						"new-value": "It is like defensive programming but to an extent that is irrational, like performing assignments twice just in case someone deletes one of them.",
						"regex": "s/in c/just in c/"
					}
				]
			}
		},
		{
			"date": "2014-08-10T23:32:12.985Z",
			"editor": "ljharb",
			"key": "personal",
			"value": {
				"value": "##javascript is your personal scratchpad. For emergencies: http://nooooooooooooooo.com/",
				"creator": "Agamemnus",
				"date": "2014-03-30T02:42:08.329Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-08-10T23:35:04.506Z",
			"editor": "ljharb",
			"key": "reading",
			"value": {
				"value": "Mind downloads are all the rage nowadays. Reading is obsolete.. welcome to the future.",
				"creator": "Agamemnus",
				"date": "2014-07-20T06:11:29.810Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-08-10T23:35:49.468Z",
			"editor": "ljharb",
			"key": "organization",
			"value": {
				"value": "The biggest organizational challenge in Javascript is learning to combine visual screen construction and logical construction.",
				"creator": "Agamemnus",
				"date": "2014-08-04T21:15:10.161Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-08-10T23:35:57.106Z",
			"editor": "ljharb",
			"key": "slideshow",
			"value": {
				"value": "reveal.js",
				"creator": "Agamemnus",
				"date": "2014-08-05T20:20:15.759Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-08-11T02:18:43.903Z",
			"editor": "Agamemnus",
			"key": "animations",
			"value": {
				"value": "http://greensock.com",
				"creator": "Agamemnus",
				"date": "2014-08-11T02:17:03.150Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-08-11T02:20:08.944Z",
			"editor": "Agamemnus",
			"key": "animations | animation",
			"value": {
				"value": "http://greensock.com",
				"creator": "Agamemnus",
				"date": "2014-08-11T02:18:20.671Z",
				"popularity": 0,
				"editors": [
					"Agamemnus"
				],
				"changes": [
					{
						"date": "2014-08-11T02:19:30.833Z",
						"editor": "Agamemnus",
						"old-value": "http://greensock.com",
						"new-value": "http://greensock.com"
					}
				]
			}
		},
		{
			"date": "2014-08-16T10:05:47.749Z",
			"editor": "blackkbot",
			"key": "([byod]",
			"value": {
				"value": "bring your own disaster)",
				"creator": "blackkbot",
				"date": "2014-08-16T10:05:34.701Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-08-25T08:29:36.398Z",
			"editor": "gkatsev",
			"key": "foo",
			"value": {
				"value": "'this is the end'",
				"popularity": 28,
				"editors": [
					"Mortchek",
					"ImBcmDth",
					"bePolite",
					"morenoh151"
				],
				"changes": [
					{
						"date": "2014-03-05T16:59:31.098Z",
						"editor": "ImBcmDth",
						"old-value": "foo, bar, baz, and quux are commonly used metasyntactic variables. They stand for whatever you want. See http://www.catb.org/jargon/html/M/metasyntactic-variable.html",
						"new-value": "js> \"Mic check.\" + \"Check. Check.\"; // Is this thing on?"
					},
					{
						"date": "2014-03-05T17:00:45.887Z",
						"editor": "ImBcmDth",
						"old-value": "js> \"Mic check.\" + \"Check. Check.\"; // Is this thing on?",
						"new-value": "foo, bar, baz, and quux are commonly used metasyntactic variables. They stand for whatever you want. See http://www.catb.org/jargon/html/M/metasyntactic-variable.html"
					},
					{
						"date": "2014-05-02T21:53:22.161Z",
						"editor": "bePolite",
						"old-value": "foo, bar, baz, and quux are commonly used metasyntactic variables. They stand for whatever you want. See http://www.catb.org/jargon/html/M/metasyntactic-variable.html",
						"new-value": "bar"
					},
					{
						"date": "2014-08-25T08:26:33.470Z",
						"editor": "morenoh151",
						"old-value": "bar",
						"new-value": "'this is the end'"
					}
				]
			}
		},
		{
			"date": "2014-09-06T01:29:23.212Z",
			"editor": "ljharb",
			"key": "ljharb-inheritance",
			"value": {
				"value": "You should just avoid inheritance altogether.",
				"creator": "Agamemnus",
				"date": "2014-09-06T01:27:04.130Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-10-07T08:36:02.916Z",
			"editor": "ljharb",
			"key": "zeph",
			"value": {
				"value": "\"\"",
				"creator": "MJCD",
				"date": "2014-09-20T17:13:00.113Z",
				"popularity": 3,
				"editors": [
					"zeph"
				],
				"changes": [
					{
						"date": "2014-09-20T17:40:46.019Z",
						"editor": "zeph",
						"old-value": "tittayyys!",
						"new-value": "\"\""
					}
				]
			}
		},
		{
			"date": "2014-10-20T19:45:35.501Z",
			"editor": "ljharb",
			"key": "onfood",
			"value": {
				"alias": "inline",
				"creator": "Agamemnus",
				"date": "2014-10-20T07:18:10.821Z",
				"popularity": 2,
				"editors": [
					"",
					"Agamemnus"
				],
				"changes": [
					{
						"date": "2014-10-20T07:18:59.530Z",
						"editor": "",
						"old-alias": "onfoo",
						"new-alias": "inline"
					},
					{
						"date": "2014-10-20T07:19:03.151Z",
						"editor": "Agamemnus",
						"old-alias": "inline",
						"new-alias": "inline"
					}
				]
			}
		},
		{
			"date": "2014-10-20T19:46:40.977Z",
			"editor": "ljharb",
			"key": "animation",
			"value": {
				"value": "http://greensock.com",
				"creator": "Agamemnus",
				"date": "2014-08-11T02:20:39.390Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-10-20T19:46:45.993Z",
			"editor": "ljharb",
			"key": "animations",
			"value": {
				"value": "http://greensock.com",
				"creator": "Agamemnus",
				"date": "2014-08-11T02:20:47.595Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-10-20T19:49:01.483Z",
			"editor": "ljharb",
			"key": "dirty dancing",
			"value": {
				"value": "https://www.youtube.com/watch?v=Vzs4_-gYNwk 1:00",
				"creator": "Agamemnus",
				"date": "2014-08-11T08:53:32.606Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-10-21T02:10:54.034Z",
			"editor": "Agamemnus",
			"key": "onfoo",
			"value": {
				"value": "Using \".onclick\", \".onchange\", or \"on\" anything is bad practice and results in poorly factored, hard-to-manage code; as well as limiting you to one event listener per event. Consider attaching your events with addEventListener, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener",
				"creator": "ljharb",
				"date": "2014-03-23T18:29:39.701Z",
				"popularity": 23,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-10-24T01:17:11.481Z",
			"editor": "ImBcmDth",
			"key": "order 66",
			"value": {
				"value": "Error: could not find any Javascript Jedi. Perhaps you were looking for Javascript ninjas?",
				"creator": "Agamemnus",
				"date": "2014-10-22T00:39:47.446Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-10-24T10:32:22.673Z",
			"editor": "ljharb",
			"key": "premature optimisation",
			"value": {
				"value": "See !premature optimization",
				"popularity": 7
			}
		},
		{
			"date": "2014-10-25T09:30:41.622Z",
			"editor": "Agamemnus",
			"key": "specificity",
			"value": {
				"value": "css ids",
				"creator": "Agamemnus",
				"date": "2014-10-25T09:30:28.349Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-10-26T18:11:35.201Z",
			"editor": "ImBcmDth",
			"key": "order 66",
			"value": {
				"value": "Error: could not find any Javascript Jedi. Perhaps you were looking for Javascript ninjas?",
				"creator": "Agamemnus",
				"date": "2014-10-26T08:02:13.710Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-11-02T04:59:13.487Z",
			"editor": "ImBcmDth",
			"key": "ping ~",
			"value": {
				"value": "s/don't/Don't/",
				"creator": "ImBcmDth",
				"date": "2014-11-02T04:58:50.069Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-11-07T04:12:59.297Z",
			"editor": "j201",
			"key": "yes",
			"value": {
				"value": "yes",
				"creator": "j201",
				"date": "2014-11-07T04:12:38.104Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-11-15T21:23:51.319Z",
			"editor": "Mateon1",
			"key": "( [alias] foo",
			"value": {
				"value": "bar | foo =~ s/expression/replace/gi )",
				"creator": "bact",
				"date": "2014-11-15T21:19:59.525Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-11-21T10:45:50.446Z",
			"editor": "sacho",
			"key": "test",
			"value": {
				"value": "omg",
				"creator": "urbanizator",
				"date": "2013-12-23T16:26:17.770Z",
				"popularity": 33,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-12-01T00:43:56.812Z",
			"editor": "ljharb",
			"key": "learn",
			"value": {
				"value": "fun",
				"creator": "bact",
				"date": "2014-11-15T21:21:18.216Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-12-01T00:44:06.245Z",
			"editor": "ljharb",
			"key": "iknow",
			"value": {
				"value": "I know the answer, I'm just asking to make you think.",
				"creator": "wormmd",
				"date": "2014-11-15T21:22:52.042Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2014-12-28T09:17:18.899Z",
			"editor": "ljharb",
			"key": "hash",
			"value": {
				"value": "Hash: the result of a hash function, as used in hash tables, which involve mapping from hashes of keys. People seem to conflate maps/tables with \"hash tables\" then shorten that to \"hashes\", like how people often describe \"electron microscopes\" as \"electrons\" .. oh wait, noone is stupid enough to do that last thing because it's obviously wrong.",
				"creator": "Maxdamantus",
				"date": "2014-12-01T09:53:47.256Z",
				"popularity": 3,
				"editors": [
					"Maxdamantus"
				],
				"changes": [
					{
						"date": "2014-12-01T09:57:01.590Z",
						"editor": "Maxdamantus",
						"old-value": "Hash: the result of a hash function, as used in hash tables, which involve mapping from hashes of keys. People seem to conflate maps/tables with \"hash tables\" then shorten that to \"hashes\", like how people often describe \"electron microscopes\" as \"electrons\" .. oh wait, that last one is obviously wrong so noone is stupid enough to do it.",
						"new-value": "Hash: the result of a hash function, as used in hash tables, which involve mapping from hashes of keys. People seem to conflate maps/tables with \"hash tables\" then shorten that to \"hashes\", like how people often describe \"electron microscopes\" as \"electrons\" .. oh wait, noone is stupid enough to do that last thing because it's obviously wrong."
					}
				]
			}
		},
		{
			"date": "2015-01-07T10:28:25.687Z",
			"editor": "ljharb",
			"key": "jello",
			"value": {
				"value": "GreenJello can overrule me on anything I say.",
				"creator": "GreenJello",
				"date": "2013-12-23T16:23:45.665Z",
				"popularity": 11,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-01-16T17:00:58.474Z",
			"editor": "Havvy",
			"key": "ask ~",
			"value": {
				"value": "s/or/nor/",
				"creator": "Havvy",
				"date": "2015-01-16T17:00:47.059Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-02-11T06:19:30.800Z",
			"editor": "ljharb",
			"key": "loops",
			"value": {
				"value": "''",
				"creator": "MJCD",
				"date": "2015-02-11T06:18:44.480Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-02-11T09:44:06.437Z",
			"editor": "ljharb",
			"key": "triple-equals",
			"value": {
				"value": "=== is like putting a bucket over your head after seeing a planet-killing meteor heading straight for you.",
				"creator": "Agamemnus",
				"date": "2015-02-11T09:37:15.499Z",
				"popularity": 2,
				"editors": [
					"Agamemnus"
				],
				"changes": [
					{
						"date": "2015-02-11T09:37:38.373Z",
						"editor": "Agamemnus",
						"old-value": "=== is like putting a bucket over your head after seeing a plant-killing meteor heading straight for you.",
						"new-value": "=== is like putting a bucket over your head after seeing a planet-killing meteor heading straight for you."
					}
				]
			}
		},
		{
			"date": "2015-03-28T02:33:04.427Z",
			"editor": "Havvy",
			"key": "[alias] function*",
			"value": {
				"value": "generator",
				"creator": "Havvy",
				"date": "2015-03-28T02:32:43.499Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-04-06T06:08:21.488Z",
			"editor": "ljharb",
			"key": "poo",
			"value": {
				"value": "http://robotlolita.me/2011/10/09/understanding-javascript-oop.html summarizes Programming Object Oriented in Javascript, using concepts from ECMAScript 5, and relating them back to older paradigms from ECMAScript 3",
				"creator": "Maxdamantus",
				"date": "2015-03-31T04:01:50.247Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-04-14T23:30:59.382Z",
			"editor": "Agamemnus",
			"key": "guys",
			"value": {
				"value": "The term \"guys\" may be a gender-neutral term to some people, but it is not to everybody. As such, please do not use it. Suggested alternatives: folks, people, team, y'all, everybody. https://subfictional.com/2012/07/02/language-matters-stop-using-guys-to-address-mix-gender-groups/ See !sexist",
				"creator": "ljharb",
				"date": "2015-04-05T20:54:23.844Z",
				"popularity": 5,
				"editors": [
					"ljharb"
				],
				"changes": [
					{
						"date": "2015-04-14T22:29:23.282Z",
						"editor": "ljharb",
						"old-value": "The term \"guys\" may be a gender-neutral term to some people, but it is not to everybody. As such, please do not use it. Suggested alternatives: folks, people, team, y'all, everybody. https://subfictional.com/2012/07/02/language-matters-stop-using-guys-to-address-mix-gender-groups/",
						"new-value": "The term \"guys\" may be a gender-neutral term to some people, but it is not to everybody. As such, please do not use it. Suggested alternatives: folks, people, team, y'all, everybody. https://subfictional.com/2012/07/02/language-matters-stop-using-guys-to-address-mix-gender-groups/"
					},
					{
						"date": "2015-04-14T22:29:34.620Z",
						"editor": "ljharb",
						"old-value": "The term \"guys\" may be a gender-neutral term to some people, but it is not to everybody. As such, please do not use it. Suggested alternatives: folks, people, team, y'all, everybody. https://subfictional.com/2012/07/02/language-matters-stop-using-guys-to-address-mix-gender-groups/",
						"new-value": "The term \"guys\" may be a gender-neutral term to some people, but it is not to everybody. As such, please do not use it. Suggested alternatives: folks, people, team, y'all, everybody. https://subfictional.com/2012/07/02/language-matters-stop-using-guys-to-address-mix-gender-groups/ See !sexist"
					}
				]
			}
		},
		{
			"date": "2015-04-16T22:53:08.073Z",
			"editor": "ljharb",
			"key": "factoids",
			"value": {
				"value": "http://boshi.inimino.org/ecmabot-factoids.json",
				"popularity": 44,
				"creator": "inimino",
				"editors": []
			}
		},
		{
			"date": "2015-05-19T08:14:03.975Z",
			"editor": "Havvy",
			"key": "[alias] eventloop",
			"value": {
				"value": "event loop",
				"creator": "Havvy",
				"date": "2015-05-19T08:13:47.082Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-05-19T08:14:23.065Z",
			"editor": "Havvy",
			"key": "eventloop",
			"value": {
				"value": "https://nodesource.com/blog/understanding-the-nodejs-event-loop ; https://www.youtube.com/watch?v=8aGhZQkoFbQ Philip Roberts: What the heck is the event loop anyway? | JSConf EU 2014",
				"creator": "pluma",
				"date": "2014-10-11T19:56:37.793Z",
				"popularity": 4,
				"editors": [
					"joepie91"
				],
				"changes": [
					{
						"date": "2015-05-19T08:13:04.047Z",
						"editor": "joepie91",
						"old-value": "Most JavaScript implementations implement asynchronous code execution with an event loop. See <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/EventLoop> and <http://stackoverflow.com/questions/21607692/understanding-the-event-loop>",
						"new-value": "https://nodesource.com/blog/understanding-the-nodejs-event-loop ; https://www.youtube.com/watch?v=8aGhZQkoFbQ Philip Roberts: What the heck is the event loop anyway? | JSConf EU 2014"
					}
				]
			}
		},
		{
			"date": "2015-05-19T15:36:40.795Z",
			"editor": "Havvy",
			"key": "promise",
			"value": {
				"value": "The recommended promises module is bluebird; it is faster (in Node.js / v8 browsers) than `async` and other promises modules, and offers many more features. ES6 promises (with a shim) can be used as a compact alternative in browsers. Start here: https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them",
				"creator": "Havvy",
				"date": "2015-05-18T02:59:54.507Z",
				"popularity": 6,
				"editors": [
					"joepie91"
				],
				"changes": [
					{
						"date": "2015-05-18T03:08:55.997Z",
						"editor": "joepie91",
						"old-value": "https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them",
						"new-value": "The recommended promises module is bluebird; it is faster (in Node.js / v8 browsers) than `async` and other promises modules, and offers many more features. ES6 promises (with a shim) can be used as a compact alternative in browsers. Start here: https://github.com/petkaantonov/bluebird#what-are-promises-and-why-should-i-use-them"
					}
				]
			}
		},
		{
			"date": "2015-05-26T17:48:53.891Z",
			"editor": "Havvy",
			"key": "test",
			"value": {
				"value": "xyz @ abc",
				"creator": "Havvy",
				"date": "2015-05-26T17:48:45.519Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-06-10T08:28:37.572Z",
			"editor": "Maxdamantus",
			"key": "equals ~",
			"value": {
				"value": "s/instead/instead for still incorrect, though more predictable, results/",
				"creator": "Maxdamantus",
				"date": "2015-06-10T08:27:05.684Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-07-01T20:24:26.806Z",
			"editor": "Sorella",
			"key": "fun",
			"value": {
				"value": "Dynamic, functional(ish) language with semi-prototypical OO and global side effects? That's Dwarf-Fortress-level fun.",
				"creator": "shoky",
				"date": "2014-11-15T21:20:57.482Z",
				"popularity": 4,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-07-13T21:34:36.274Z",
			"editor": "gkatsev",
			"key": "zomg",
			"value": {
				"value": "the best guy",
				"creator": "zomg",
				"date": "2015-07-13T21:32:19.977Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-07-27T04:17:30.282Z",
			"editor": "AAA_awright",
			"key": "mongo",
			"value": {
				"alias": "no mongo",
				"creator": "ljharb",
				"date": "2015-07-20T20:30:03.869Z",
				"popularity": 3,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-08-07T20:59:54.973Z",
			"editor": "AAA_awright",
			"key": "crypto",
			"value": {
				"value": "Don't try to do encryption or cryptography in browser JavaScript. http://www.matasano.com/articles/javascript-cryptography/",
				"popularity": 26,
				"editors": [
					"ljharb"
				],
				"changes": [
					{
						"date": "2014-03-12T00:48:59.528Z",
						"editor": "ljharb",
						"old-value": "Don't try to do encryption or cryptography in Javascript. http://www.matasano.com/articles/javascript-cryptography/",
						"new-value": "s/Javascript/browser JavaScript"
					},
					{
						"date": "2014-03-12T00:49:20.596Z",
						"editor": "ljharb",
						"old-value": "s/Javascript/browser JavaScript",
						"new-value": "Don't try to do encryption or cryptography in browser JavaScript. http://www.matasano.com/articles/javascript-cryptography/"
					}
				]
			}
		},
		{
			"date": "2015-08-08T16:04:23.480Z",
			"editor": "Sorella",
			"key": "shoo",
			"value": {
				"value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #yui",
				"popularity": 513,
				"editors": [
					"nathan7",
					"PigDude",
					"Mortchek",
					"j201",
					"Havvy",
					"MJCD",
					"niggler",
					"ljharb",
					"sacho",
					"GreenJello",
					"Agamemnus",
					"cjohnson"
				],
				"changes": [
					{
						"date": "2013-12-27T21:17:52.817Z",
						"editor": "Havvy",
						"old-value": "Dedicated channels: #angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs - #express - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #moutjs - #node.js - #prototype - #requirejs - ##twitter-bootstrap - #webgl - #yui",
						"new-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs - #express - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - ##twitter-bootstrap - #webgl - #yui"
					},
					{
						"date": "2014-01-12T01:12:39.610Z",
						"editor": "Havvy",
						"old-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs - #express - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - ##twitter-bootstrap - #webgl - #yui",
						"new-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs - #express - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs -  #webgl - #yui"
					},
					{
						"date": "2014-01-12T01:12:58.473Z",
						"editor": "Havvy",
						"old-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs - #express - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs -  #webgl - #yui",
						"new-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs - #express - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs -  #webgl - #yui - #fez"
					},
					{
						"date": "2014-01-20T08:47:38.740Z",
						"editor": "ljharb",
						"old-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs - #express - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs -  #webgl - #yui - #fez",
						"new-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs - ##english - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs -  #webgl - #yui"
					},
					{
						"date": "2014-01-27T05:36:43.015Z",
						"editor": "Havvy",
						"old-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs - ##english - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs -  #webgl - #yui",
						"new-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs - ##english - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - #sweet.js - #webgl - #yui"
					},
					{
						"date": "2014-01-27T05:43:51.009Z",
						"editor": "Havvy",
						"old-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs - ##english - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - #sweet.js - #webgl - #yui",
						"new-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - #sweet.js - #webgl - #yui"
					},
					{
						"date": "2014-07-30T20:12:25.877Z",
						"editor": "j201",
						"old-value": "#angularjs - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - #sweet.js - #webgl - #yui",
						"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - #sweet.js - #webgl - #yui",
						"regex": "s/#browserify/##bootstrap - #browserify/"
					},
					{
						"date": "2014-09-05T12:25:40.773Z",
						"editor": "sacho",
						"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - #sweet.js - #webgl - #yui",
						"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - #webgl - #yui",
						"regex": "s/- #sweet.js //"
					},
					{
						"date": "2014-09-05T12:26:01.091Z",
						"editor": "GreenJello",
						"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - #webgl - #yui",
						"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - #webgl - #yui"
					},
					{
						"date": "2014-09-30T23:38:46.998Z",
						"editor": "Agamemnus",
						"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #coffeescript - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #prototype - #requirejs - #webgl - #yui",
						"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phaserio - #phonegap - #prototype - #requirejs - #three.js - #webgl - #yui"
					},
					{
						"date": "2014-10-01T00:06:48.063Z",
						"editor": "Agamemnus",
						"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #fez - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phaserio - #phonegap - #prototype - #requirejs - #three.js - #webgl - #yui",
						"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phaserio - #phonegap - #prototype - #requirejs - #three.js - #webgl - #yui"
					},
					{
						"date": "2014-10-05T20:47:03.907Z",
						"editor": "j201",
						"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phaserio - #phonegap - #prototype - #requirejs - #three.js - #webgl - #yui",
						"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #requirejs - #three.js - #webgl - #yui",
						"regex": "s/#phaserio/#phantomjs - #phaserio/"
					},
					{
						"date": "2015-01-16T17:04:16.615Z",
						"editor": "j201",
						"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #requirejs - #three.js - #webgl - #yui",
						"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #io.js - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #requirejs - #three.js - #webgl - #yui",
						"regex": "s/#grunt -/#grunt - #io.js -/"
					},
					{
						"date": "2015-02-05T04:09:24.343Z",
						"editor": "j201",
						"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #io.js - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #requirejs - #three.js - #webgl - #yui",
						"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #io.js - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #three.js - #webgl - #yui",
						"regex": "s/#requirejs/#reactjs - #requirejs/"
					},
					{
						"date": "2015-06-15T20:40:25.703Z",
						"editor": "Agamemnus",
						"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #io.js - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #three.js - #webgl - #yui",
						"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #io.js - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #yui"
					},
					{
						"date": "2015-07-30T00:10:47.601Z",
						"editor": "cjohnson",
						"old-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #io.js - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #yui",
						"new-value": "#angularjs - ##bootstrap - #browserify - ##closure-tools - #cordova - #coffeescript - #crosswalk - #css - #d3.js - #documentcloud (Backbone, Underscore) - #dojo - #emberjs  - #express - #googlemaps - #grunt - #gulpjs - #io.js - #jadejs - #jquery - #knockoutjs - #mootools - #node.js - #phantomjs - #phaserio - #phonegap - #prototype - #reactjs - #requirejs - #socket.io - #three.js - #webgl - #yui"
					}
				]
			}
		},
		{
			"date": "2015-08-08T16:04:48.156Z",
			"editor": "Sorella",
			"key": "dedicated",
			"value": {
				"alias": "shoo",
				"popularity": 5,
				"editors": [
					""
				],
				"changes": [
					{
						"date": "2015-05-08T15:50:29.523Z",
						"editor": "",
						"old-alias": "shoo",
						"new-alias": "shoo"
					}
				]
			}
		},
		{
			"date": "2015-08-24T21:00:23.725Z",
			"editor": "joepie91",
			"key": "pastebin",
			"value": {
				"value": "Use sites like jsfiddle.net, jsbin.com, cssdeck.com, or requirebin.com to show live code examples or problems.",
				"popularity": 63,
				"creator": "jaspr",
				"editors": [
					"Agamemnus"
				],
				"changes": [
					{
						"date": "2014-10-22T00:16:18.378Z",
						"editor": "Agamemnus",
						"old-value": "Pastebin is not cool, sites like http://gist.github.com/ and http://bpaste.net/ are cool! You can also use http://jsbin.com , http://requirebin.com or http://jsfiddle.net/ to provide a test case we can run and help you with your problem.",
						"new-value": "Use sites like jsfiddle.net, jsbin.com, or requirebin.com to show live code examples or problems."
					},
					{
						"date": "2014-10-25T08:39:32.098Z",
						"editor": "Agamemnus",
						"old-value": "Use sites like jsfiddle.net, jsbin.com, or requirebin.com to show live code examples or problems.",
						"new-value": "Use sites like jsfiddle.net, jsbin.com, cssdeck.com, or requirebin.com to show live code examples or problems."
					}
				]
			}
		},
		{
			"date": "2015-08-25T06:59:33.435Z",
			"editor": "Havvy",
			"key": "window.fetch @",
			"value": {
				"value": "fetch",
				"creator": "Havvy",
				"date": "2015-08-25T06:59:25.438Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-09-02T21:08:56.911Z",
			"editor": "Havvy",
			"key": "event queue",
			"value": {
				"value": "alias event loop",
				"creator": "Havvy",
				"date": "2015-09-02T20:57:55.853Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-09-19T06:52:01.732Z",
			"editor": "ljharb",
			"key": "crypto",
			"value": {
				"alias": "cryptography",
				"creator": "joepie91",
				"date": "2015-08-27T15:58:34.855Z",
				"popularity": 4,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-10-11T06:22:03.136Z",
			"editor": "gkatsev",
			"key": "point of promises ~",
			"value": {
				"value": "s/https:\\/\\/gist.github.com\\/3889970/https:\\/\\/blog.domenic.me\\/youre-missing-the-point-of-promises\\//",
				"creator": "gkatsev",
				"date": "2015-10-11T06:21:40.950Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-10-11T17:40:27.933Z",
			"editor": "devhoag",
			"key": "([alias] foo",
			"value": {
				"value": "bar | foo =~ s/expression/replace/gi )",
				"creator": "devhoag",
				"date": "2015-10-11T17:38:44.552Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-10-26T05:51:47.292Z",
			"editor": "Sorella",
			"key": "es6 modules ~",
			"value": {
				"value": "s/$/ Use CommonJS modules for now./",
				"creator": "Sorella",
				"date": "2015-10-26T05:51:31.014Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-11-13T10:06:23.734Z",
			"editor": "ljharb",
			"key": "factoids",
			"value": {
				"value": "http://boshi.inimino.org/ecmabot-factoids.json",
				"creator": "inimino",
				"date": "2015-06-21T23:19:07.962Z",
				"popularity": 5,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2015-12-20T10:49:55.563Z",
			"editor": "ljharb",
			"key": "buu",
			"value": {
				"value": "The two Buus battle each other until Good Buu unleashes his conversion beam on Evil Buu. Being more powerful, Evil Buu simply reflects it right back. Good Buu is turned into a piece of chocolate and eaten by Evil Buu, resulting in Super Buu.",
				"creator": "Agamemnus",
				"date": "2015-12-20T06:29:18.949Z",
				"popularity": 2,
				"editors": [
					"buu",
					"Agamemnus"
				],
				"changes": [
					{
						"date": "2015-12-20T06:29:48.146Z",
						"editor": "buu",
						"old-value": "http://dragonball.wikia.com/wiki/Majin_Buu",
						"new-value": "The two Buu's battle each other until Good Buu unleashes his conversion beam on Evil Buu. Being more powerful, Evil Buu simply reflects it right back. Good Buu is turned into a piece of chocolate and eaten by Evil Buu, resulting in Super Buu."
					},
					{
						"date": "2015-12-20T06:30:07.055Z",
						"editor": "Agamemnus",
						"old-value": "The two Buu's battle each other until Good Buu unleashes his conversion beam on Evil Buu. Being more powerful, Evil Buu simply reflects it right back. Good Buu is turned into a piece of chocolate and eaten by Evil Buu, resulting in Super Buu.",
						"new-value": "The two Buus battle each other until Good Buu unleashes his conversion beam on Evil Buu. Being more powerful, Evil Buu simply reflects it right back. Good Buu is turned into a piece of chocolate and eaten by Evil Buu, resulting in Super Buu."
					}
				]
			}
		},
		{
			"date": "2016-02-05T04:01:08.542Z",
			"editor": "jaawerth",
			"key": "eeeverything",
			"value": {
				"value": "I said eeeverything",
				"creator": "jaawerth",
				"date": "2016-02-05T04:00:04.772Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-02-27T04:45:32.682Z",
			"editor": "ljharb",
			"key": "shitlist",
			"value": {
				"value": ">_<",
				"creator": "mmmveggies",
				"date": "2016-02-27T04:44:28.034Z",
				"popularity": 1,
				"editors": [
					"GreenJello"
				],
				"changes": [
					{
						"date": "2016-02-27T04:45:22.526Z",
						"editor": "GreenJello",
						"old-value": "altusd",
						"new-value": ">_<"
					}
				]
			}
		},
		{
			"date": "2016-02-27T04:46:31.882Z",
			"editor": "ljharb",
			"key": "shitlist",
			"value": {
				"value": "['mmmveggies']",
				"creator": "GreenJello",
				"date": "2016-02-27T04:46:01.021Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-03-09T23:51:15.994Z",
			"editor": "ljharb",
			"key": "axy",
			"value": {
				"value": "curious mind.",
				"creator": "Axy",
				"date": "2016-03-02T17:50:14.407Z",
				"popularity": 3,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-03-09T23:51:25.679Z",
			"editor": "ljharb",
			"key": "[alias] axy",
			"value": {
				"value": "mia | curious mind.",
				"creator": "Axy",
				"date": "2016-03-02T17:49:23.779Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-03-09T23:51:35.240Z",
			"editor": "ljharb",
			"key": "mia",
			"value": {
				"value": "curious mind.",
				"creator": "Axy",
				"date": "2016-03-02T17:50:33.376Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-03-15T08:56:15.076Z",
			"editor": "ljharb",
			"key": "reference a reference is an operand that contains both a holder and a property. `o[k]` has a holder of `o` and a property of `k`. they are used during function invocation, `delete`, and `new`. references cannot be saved to variables. they are not affected by parenthesis grouping as that is not an operator (`delete (o[k]);`",
			"value": {
				"value": "== `delete o[k];`) .",
				"creator": "bradleymeck",
				"date": "2016-03-14T19:50:17.802Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-03-15T09:00:21.315Z",
			"editor": "GreenJello",
			"key": "ide",
			"value": {
				"alias": "editors",
				"popularity": 7
			}
		},
		{
			"date": "2016-03-31T09:10:03.386Z",
			"editor": "Sorella",
			"key": "cmd",
			"value": {
				"value": "=> function(args)",
				"creator": "hagb4rd",
				"date": "2016-03-31T09:08:29.195Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-03-31T09:11:37.365Z",
			"editor": "Sorella",
			"key": "mongo",
			"value": {
				"value": "See !mongodb",
				"creator": "AAA_awright",
				"date": "2015-07-27T04:17:33.987Z",
				"popularity": 33,
				"editors": [
					"AAA_awright",
					"systemfault"
				],
				"changes": [
					{
						"date": "2015-07-27T04:18:32.014Z",
						"editor": "AAA_awright",
						"old-value": "MongoDB is a cross-platform document-oriented database. See <https://www.mongodb.org/>",
						"new-value": "MongoDB is a cross-platform document-oriented database. See <https://www.mongodb.org/> <http://docs.mongodb.org/ecosystem/drivers/node-js/>"
					},
					{
						"date": "2016-03-31T09:10:46.285Z",
						"editor": "systemfault",
						"old-value": "MongoDB is a cross-platform document-oriented database. See <https://www.mongodb.org/> <http://docs.mongodb.org/ecosystem/drivers/node-js/>",
						"new-value": "See !mongodb"
					}
				]
			}
		},
		{
			"date": "2016-03-31T09:15:21.845Z",
			"editor": "Sorella",
			"key": "mongodb",
			"value": {
				"alias": "no mongo",
				"creator": "ljharb",
				"date": "2015-07-20T20:30:00.698Z",
				"popularity": 45,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-04-14T12:46:11.925Z",
			"editor": "ljharb",
			"key": "zalgo",
			"value": {
				"value": "Don't parse HTML with regex. http://stackoverflow.com/a/1732454",
				"creator": "mmmveggies",
				"date": "2016-04-12T22:09:24.859Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-06-08T08:26:24.717Z",
			"editor": "ljharb",
			"key": "isitpossible",
			"value": {
				"value": "Yes it is!",
				"creator": "progysm",
				"date": "2016-06-04T23:06:16.889Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-06-08T08:26:29.479Z",
			"editor": "ljharb",
			"key": "how",
			"value": {
				"value": "Left as an exercice for the reader.",
				"creator": "progysm",
				"date": "2016-06-04T23:08:54.350Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-06-19T13:29:25.791Z",
			"editor": "GreenJello",
			"key": "n> 1",
			"value": {
				"value": "2",
				"creator": "GreenJello",
				"date": "2016-06-19T13:28:25.109Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-06-23T09:38:38.924Z",
			"editor": "Havvy",
			"key": "x",
			"value": {
				"value": "y",
				"creator": "Havvy",
				"date": "2016-06-23T09:38:34.217Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-07-02T00:00:50.773Z",
			"editor": "Sorella",
			"key": "scan const scan",
			"value": {
				"value": "(arr, b, f) => arr.reduce((a, b) => { const x = f(a.r, b); return { r: x, v: [...a.v, x] } }, { r: b, v: [] }).v ;",
				"creator": "systemfault",
				"date": "2016-07-02T00:00:17.117Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-07-02T12:23:32.001Z",
			"editor": "Nouv",
			"key": "auth",
			"value": {
				"value": "Please don't write your own auth. Read all of this: http://stackoverflow.com/questions/549/the-definitive-guide-to-form-based-website-authentication",
				"creator": "ljharb",
				"date": "2014-09-23T02:02:36.756Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-07-06T06:13:34.896Z",
			"editor": "earendel",
			"key": "grr",
			"value": {
				"value": "grr12314++",
				"creator": "earendel",
				"date": "2016-07-06T06:12:18.631Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-07-24T11:11:01.322Z",
			"editor": "Sorella",
			"key": "typescript",
			"value": {
				"value": "gross",
				"popularity": 14,
				"creator": "ljharb",
				"editors": [
					"niggler",
					"ljharb_work",
					"havvy",
					"ckknight",
					"Xin"
				],
				"changes": [
					{
						"date": "2016-07-24T11:09:49.326Z",
						"editor": "Xin",
						"old-value": "TypeScript is a typed superset of JavaScript that compiles to plain JavaScript. http://www.typescriptlang.org/",
						"new-value": "gross"
					}
				]
			}
		},
		{
			"date": "2016-08-03T04:27:16.067Z",
			"editor": "ljharb",
			"key": "poo",
			"value": {
				"value": "poo",
				"creator": "mmmveggies",
				"date": "2016-06-18T01:33:19.262Z",
				"popularity": 5,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-08-03T04:27:26.377Z",
			"editor": "ljharb",
			"key": ">> 1",
			"value": {
				"value": "2",
				"creator": "GreenJello",
				"date": "2016-06-19T13:28:46.273Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-08-03T04:27:31.393Z",
			"editor": "ljharb",
			"key": "n> 1+2",
			"value": {
				"value": "3.000000000021",
				"creator": "GreenJello",
				"date": "2016-06-19T13:29:17.854Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-08-03T04:27:41.958Z",
			"editor": "ljharb",
			"key": "iife parens",
			"value": {
				"alias": "dog balls",
				"creator": "",
				"date": "2016-06-28T10:07:28.007Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-08-03T04:29:32.270Z",
			"editor": "ljharb",
			"key": "burritos",
			"value": {
				"value": "<alias> burrito",
				"creator": "Havvy",
				"date": "2016-07-08T08:21:47.405Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-08-03T04:31:15.209Z",
			"editor": "ljharb",
			"key": "h",
			"value": {
				"value": "https://jsfiddle.net/crl/7jo9zp5t/10/",
				"creator": "qswz",
				"date": "2016-07-16T21:41:06.860Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-08-03T04:32:06.626Z",
			"editor": "ljharb",
			"key": "var-issue",
			"value": {
				"value": "for (var i=0;i<2;i++)setTimeout(_=>console.log(i))",
				"creator": "qswz",
				"date": "2016-07-27T01:03:28.479Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-08-12T13:31:58.966Z",
			"editor": "Havvy",
			"key": "repl +",
			"value": {
				"value": "or if you're using node.js, just use `node` in your terminal without arguments.",
				"creator": "Havvy",
				"date": "2016-08-12T13:31:46.953Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-08-15T21:48:04.815Z",
			"editor": "ljharb",
			"key": "blackkbot",
			"value": {
				"value": "what?",
				"creator": "blackkbot",
				"date": "2013-12-28T08:40:48.440Z",
				"popularity": 15,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-08-27T09:47:54.950Z",
			"editor": "XinZhao",
			"key": "temp",
			"value": {
				"value": "{nick}, {target}, {user}",
				"creator": "XinZhao",
				"date": "2016-08-27T09:47:43.617Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-08-27T09:48:02.814Z",
			"editor": "XinZhao",
			"key": "isitabug",
			"value": {
				"value": "No, it's not a bug.",
				"creator": "XinZhao",
				"date": "2016-08-27T09:46:26.221Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-08-29T08:54:34.521Z",
			"editor": "XinZhao",
			"key": "pastebin.com",
			"value": {
				"value": "Don't use it. Use some sane pastebin like bpaste.net gist.github.com, sprunge.us ix.io . Also see !badpastebin",
				"creator": "ashnur",
				"date": "2015-01-07T11:48:44.153Z",
				"popularity": 12,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-09-06T04:07:31.075Z",
			"editor": "ljharb",
			"key": "g",
			"value": {
				"value": ">> ducky('javascript mdn'); /*  <--13-- FEELING DUCKY? ---//-- */  function ducky(query) { return \" \" + query + \" => https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; }",
				"creator": "cake`",
				"date": "2016-08-02T04:03:38.308Z",
				"popularity": 1,
				"editors": [
					"cake`"
				],
				"changes": [
					{
						"date": "2016-08-02T04:16:32.939Z",
						"editor": "cake`",
						"old-value": ">> function ducky(query) { return \"https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))); };  /* || ====== FEELING DUCKY? ---> */   ducky(    )",
						"new-value": ">> ducky('javascript mdn'); /*  <--13-- FEELING DUCKY? ---//-- */  function ducky(query) { return \" \" + query + \" => https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; }"
					}
				]
			}
		},
		{
			"date": "2016-09-06T04:08:54.506Z",
			"editor": "ljharb",
			"key": "associative_array",
			"value": {
				"value": "it's called Object",
				"creator": "qswz",
				"date": "2016-08-25T22:55:29.185Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-10-20T01:28:34.387Z",
			"editor": "ljharb",
			"key": "build",
			"value": {
				"value": "mkdir proj && cd proj && npm init && npm i -g babel-cli browserify watchify && npm i --save babel-preset-es2015 && mkdir src build static && echo \"let x = {}\" > src/app.js && babel -w src -d build .. then watchify build/app.js -o static/build.js ( noethics )",
				"creator": "earendel",
				"date": "2016-09-07T13:38:57.002Z",
				"popularity": 2,
				"editors": [
					"earendel"
				],
				"changes": [
					{
						"date": "2016-09-07T13:39:23.359Z",
						"editor": "earendel",
						"old-value": "mkdir proj && cd proj && npm init && npm i -g babel-cli browserify watchify && npm i --save babel-preset-es2015 && mkdir src build static && echo \"let x = {}\" > src/app.js && babel -w src -d build then watchify build/app.js -o static/build.js ( noethics )",
						"new-value": "mkdir proj && cd proj && npm init && npm i -g babel-cli browserify watchify && npm i --save babel-preset-es2015 && mkdir src build static && echo \"let x = {}\" > src/app.js && babel -w src -d build .. then watchify build/app.js -o static/build.js ( noethics )"
					}
				]
			}
		},
		{
			"date": "2016-10-26T00:44:57.646Z",
			"editor": "ljharb",
			"key": "mutation",
			"value": {
				"value": "Mutation observers MAY be applicable if you need to monitor the state of a non-input style HTML node. Ideally however try to consider that whatever logic this usually requires can be implemented in your XHR/other callback/Promise in order to perform whatever action you need when ADDING the node! Actual use cases for a mutation observer are GREATLY OVERSTATED.",
				"creator": "Xin",
				"date": "2016-10-26T00:28:37.634Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-10-27T21:35:44.852Z",
			"editor": "qswz_",
			"key": "royalty",
			"value": {
				"value": "[19:31] <royalty> var magic = {[{ type:\"wow\"}]}",
				"creator": "qswz_",
				"date": "2016-10-27T21:35:23.878Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-10-28T02:08:13.147Z",
			"editor": "Sorella",
			"key": "tabs vs spaces",
			"value": {
				"alias": "semicolons",
				"creator": "j201",
				"date": "2014-08-30T01:41:11.751Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-10-31T19:01:13.928Z",
			"editor": "qswz",
			"key": "promise.all",
			"value": {
				"value": "http://jsbin.com/hokuruz/edit?html,js,output",
				"creator": "qswz",
				"date": "2016-07-13T20:26:31.096Z",
				"popularity": 8,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-10-31T19:25:45.019Z",
			"editor": "Sorella",
			"key": "gtfo",
			"value": {
				"value": "This is a channel for help with JavaScript, the language, not for the APIs of some JavaScript library you found. Read the documentation for your library, contact the maintainer, find their IRC channel, but don't expect us to know how it works (see !ded).",
				"popularity": 25,
				"editors": [
					"Sorella"
				],
				"changes": [
					{
						"date": "2016-10-31T19:24:08.908Z",
						"editor": "Sorella",
						"old-value": "This is a channel for help with JavaScript, the language, not for the APIs of some JavaScript library you found. Read the documentation for your library, contact the maintainer, find their IRC channel, but don't expect us to know how it works (see !shoo).",
						"new-value": "This is a channel for help with JavaScript, the language, not for the APIs of some JavaScript library you found. Read the documentation for your library, contact the maintainer, find their IRC channel, but don't expect us to know how it works (see !ded).",
						"regex": "s/shoo/ded/"
					}
				]
			}
		},
		{
			"date": "2016-10-31T19:26:34.640Z",
			"editor": "Sorella",
			"key": "libs",
			"value": {
				"alias": "gtfo",
				"popularity": 4
			}
		},
		{
			"date": "2016-10-31T19:52:44.151Z",
			"editor": "qswz",
			"key": "=>",
			"value": {
				"value": "arrow",
				"creator": "qswz",
				"date": "2016-10-31T19:51:16.570Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-11-07T02:50:36.773Z",
			"editor": "qswz",
			"key": "current_year2",
			"value": {
				"value": "❷⚪❶❻",
				"creator": "qswz",
				"date": "2016-11-07T02:49:49.077Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-11-07T22:09:16.291Z",
			"editor": "zomg",
			"key": "caniuse",
			"value": {
				"value": "kek",
				"creator": "zomg",
				"date": "2016-11-07T22:08:59.121Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-12-12T10:23:42.035Z",
			"editor": "ljharb",
			"key": "current_year",
			"value": {
				"value": "➁✺➀➅",
				"creator": "mmmveggies",
				"date": "2016-11-07T02:44:08.796Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-12-12T10:23:48.787Z",
			"editor": "ljharb",
			"key": "caniuze",
			"value": {
				"value": "yes",
				"creator": "qswz",
				"date": "2016-11-07T22:03:51.002Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-12-12T10:24:04.614Z",
			"editor": "ljharb",
			"key": "spam",
			"value": {
				"alias": "botabuse",
				"creator": "",
				"date": "2016-11-27T23:04:48.960Z",
				"popularity": 4,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-12-12T10:24:21.201Z",
			"editor": "ljharb",
			"key": "mongo",
			"value": {
				"value": "Mongo is fine",
				"creator": "qswz",
				"date": "2016-11-30T16:18:06.246Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-12-12T22:48:14.125Z",
			"editor": "ljharb",
			"key": "experience",
			"value": {
				"value": "\"experience is never wasted! don't feel down\"",
				"popularity": 5
			}
		},
		{
			"date": "2016-12-13T02:09:19.776Z",
			"editor": "tcsc",
			"key": "dedicated ~",
			"value": {
				"value": "s/$/ - #webpack/gi",
				"creator": "tcsc",
				"date": "2016-12-13T02:09:05.969Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-12-13T02:22:44.960Z",
			"editor": "ljharb",
			"key": "ducky",
			"value": {
				"value": ">> ducky('javascript site:https://developer.mozilla.org'); /*  <--13-- FEELING DUCKY? ---//-- */  function ducky(query) { return \" \" + query + \" => https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; } // https://github.com/oftn-oswg/oftn-bot/pull/60",
				"creator": "cake`",
				"date": "2016-08-02T04:17:26.984Z",
				"popularity": 5,
				"editors": [
					"earendel"
				],
				"changes": [
					{
						"date": "2016-08-16T21:03:54.945Z",
						"editor": "earendel",
						"old-value": ">> ducky('javascript mdn'); /*  <--13-- FEELING DUCKY? ---//-- */  function ducky(query) { return \" \" + query + \" => https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; }",
						"new-value": ">> ducky('javascript site:https://developer.mozilla.org'); /*  <--13-- FEELING DUCKY? ---//-- */  function ducky(query) { return \" \" + query + \" => https://duckduckgo.com/?q=!ducky+%q\".replace(\"%q\", encodeURI(query.replace(\" \", \"+\"))) + \" \"; } // https://github.com/oftn-oswg/oftn-bot/pull/60"
					}
				]
			}
		},
		{
			"date": "2016-12-17T17:27:25.223Z",
			"editor": "qswz",
			"key": "qswz",
			"value": {
				"value": "qswz trolls at least 67% of the time. They have a hatred of jQuery and most best practices. In addition they often post lies and stupid code. But this channel would be ... different without them. ",
				"creator": "GreenJello",
				"date": "2016-12-17T17:26:55.375Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-12-19T05:10:13.523Z",
			"editor": "graingert",
			"key": "eval",
			"value": {
				"value": "The `eval` function (and its cousins) have two particular use cases: macro expansion, and evaluation of dynamically generated programs. If you don't know any of these terms, `eval` is not the answer for your problem. For more information on what `eval` is and what it should be used for, see: http://blog.racket-lang.org/2011/10/on-eval-in-dynamic-languages-generally.html.",
				"popularity": 68,
				"editors": [
					"Sorella"
				]
			}
		},
		{
			"date": "2016-12-19T05:10:58.471Z",
			"editor": "graingert",
			"key": "eval",
			"value": {
				"value": "The `eval` function (and its cousins) have two particular use cases: macro expansion, and evaluation of dynamically generated programs. If you don't know any of these terms, `eval` is not the answer for your problem. For more information on what `eval` is and what it should be used for, see:",
				"creator": "Sorella",
				"date": "2016-12-19T05:10:27.763Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-12-23T21:15:41.958Z",
			"editor": "Anonuser96",
			"key": "legacy",
			"value": {
				"value": "Anything below IE 10 is totally defunct and should not be supported. Users running these browsers run the constant risk of KNOWN UNPATCHED VULNERABILITIES and will be consistently hacked from now into the future.",
				"creator": "Anonuser96",
				"date": "2016-12-23T21:14:53.934Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2016-12-23T21:19:03.876Z",
			"editor": "Anonuser96",
			"key": "<ie10",
			"value": {
				"value": "Anything below IE 10 is totally defunct and should not be supported. Users running these browsers run the constant risk of KNOWN UNPATCHED VULNERABILITIES and will be consistently hacked from now into the future.",
				"creator": "Anonuser96",
				"date": "2016-12-23T21:15:27.568Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-02T11:08:39.677Z",
			"editor": "ljharb",
			"key": "ljharb",
			"value": {
				"value": "ljharb> lol, if you're trying to claim that the claim that requires evidence is that tech companies outside silicon valley don't matter, this isn't going to go anywhere",
				"creator": "Diaper",
				"date": "2017-01-02T11:08:33.908Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-02T11:11:38.357Z",
			"editor": "ljharb",
			"key": "let vs var",
			"value": {
				"value": "for (let i=0;i<2;i++)setTimeout(_=>console.log(i));''",
				"creator": "qswz",
				"date": "2017-01-01T01:04:45.448Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-02T11:12:40.129Z",
			"editor": "ljharb",
			"key": "<ie11",
			"value": {
				"value": "Anything below IE 11 is totally defunct and should not be supported. Users running these browsers run the constant risk of KNOWN UNPATCHED VULNERABILITIES and will be consistently hacked from now into the future.",
				"creator": "Anonuser96",
				"date": "2016-12-23T21:18:51.205Z",
				"popularity": 4,
				"editors": [
					"Anonuser96"
				],
				"changes": [
					{
						"date": "2016-12-23T21:18:57.302Z",
						"editor": "Anonuser96",
						"old-value": "Anything below IE 10 is totally defunct and should not be supported. Users running these browsers run the constant risk of KNOWN UNPATCHED VULNERABILITIES and will be consistently hacked from now into the future.",
						"new-value": "Anything below IE 11 is totally defunct and should not be supported. Users running these browsers run the constant risk of KNOWN UNPATCHED VULNERABILITIES and will be consistently hacked from now into the future."
					}
				]
			}
		},
		{
			"date": "2017-01-02T11:12:52.691Z",
			"editor": "ljharb",
			"key": "french",
			"value": {
				"value": "qswz",
				"creator": "XmasXin",
				"date": "2016-12-24T18:58:20.453Z",
				"popularity": 6,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-02T11:13:53.375Z",
			"editor": "ljharb",
			"key": "qswz",
			"value": {
				"value": "qswz trolls at least 67% of the time. They have a hatred of jQuery and most best practices. In addition they often post lies and stupid code. But this channel would be ... different without them. ",
				"creator": "GreenJello",
				"date": "2016-12-17T17:27:38.871Z",
				"popularity": 3,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-05T21:43:52.412Z",
			"editor": "ljharb",
			"key": "chat",
			"value": {
				"value": "This is an internet relay CHAT server/channel, not twitter, not facebook, not stackoverflow. We are here to converse with other javascript developers in an informal and non-rigid format. Please try to be respectful that everyone communicates differently around the world and as individuals. **draft**",
				"creator": "Exponent",
				"date": "2017-01-05T15:59:46.937Z",
				"popularity": 1,
				"editors": [
					"Exponent"
				],
				"changes": [
					{
						"date": "2017-01-05T15:59:56.412Z",
						"editor": "Exponent",
						"old-value": "This is an internet relay CHAT server/channel, not twitter, not facebook, not stackoverflow. We are here to converse with other javascript developers in an informal and non-rigid format. Please try to be respectful that everyone communicates differently around the world and as individuals.",
						"new-value": "This is an internet relay CHAT server/channel, not twitter, not facebook, not stackoverflow. We are here to converse with other javascript developers in an informal and non-rigid format. Please try to be respectful that everyone communicates differently around the world and as individuals. **draft**"
					}
				]
			}
		},
		{
			"date": "2017-01-06T01:41:42.794Z",
			"editor": "ljharb",
			"key": "byreference",
			"value": {
				"value": "Everything that isn't a primitive (number or string basically) is an object (even functions are special objects) - and all objects are passed by reference in JS.",
				"creator": "Xhin",
				"date": "2017-01-05T22:44:09.154Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-08T08:42:09.917Z",
			"editor": "ljharb",
			"key": "science",
			"value": {
				"value": "Science is just regular thinking with the attached idea that what you 'reckon' might not be the same as what is 'fact' for any given thing.",
				"creator": "Xhuin",
				"date": "2017-01-08T08:22:19.978Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-08T08:47:26.460Z",
			"editor": "ljharb",
			"key": "science",
			"value": {
				"value": "Science is just regular thinking with the attached idea that what you 'reckon' might not be the same as what is 'fact' for any given thing.",
				"creator": "ljharb",
				"date": "2017-01-08T08:43:24.816Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-11T08:05:09.276Z",
			"editor": "buu",
			"key": "guys",
			"value": {
				"value": "The term \"guys\" may be a gender-neutral term to some people, but it is not to everybody. As such, please do not use it. Suggested alternatives: folks, people, team, y'all, everybody. https://subfictional.com/2012/07/02/language-matters-stop-using-guys-to-address-mix-gender-groups/ See !sexist",
				"creator": "ljharb",
				"date": "2015-04-16T01:20:06.808Z",
				"popularity": 161,
				"editors": [
					"AAA_awright",
					"ljharb"
				],
				"changes": [
					{
						"date": "2015-08-26T18:40:47.381Z",
						"editor": "AAA_awright",
						"old-value": "The term \"guys\" may be a gender-neutral term to some people, but it is not to everybody. As such, please do not use it. Suggested alternatives: folks, people, team, y'all, everybody. https://subfictional.com/2012/07/02/language-matters-stop-using-guys-to-address-mix-gender-groups/ See !sexist",
						"new-value": "https://en.wikipedia.org/wiki/Frindle"
					},
					{
						"date": "2015-08-26T19:07:25.733Z",
						"editor": "AAA_awright",
						"old-value": "https://en.wikipedia.org/wiki/Frindle",
						"new-value": "The term \"guys\" is typically a friendly, neutral greeting. Some in channel have objected to it for various cultural reasons, avoid using it. See https://en.wikipedia.org/wiki/Frindle"
					},
					{
						"date": "2015-09-19T01:07:35.321Z",
						"editor": "ljharb",
						"old-value": "The term \"guys\" is typically a friendly, neutral greeting. Some in channel have objected to it for various cultural reasons, avoid using it. See https://en.wikipedia.org/wiki/Frindle",
						"new-value": "The term \"guys\" may be a gender-neutral term to some people, but it is not to everybody. As such, please do not use it. Suggested alternatives: folks, people, team, y'all, everybody. https://subfictional.com/2012/07/02/language-matters-stop-using-guys-to-address-mix-gender-groups/ See !sexist"
					}
				]
			}
		},
		{
			"date": "2017-01-11T23:22:05.417Z",
			"editor": "Xhin",
			"key": "tabs",
			"value": {
				"value": "Use spaces instead",
				"creator": "`slikts",
				"date": "2017-01-11T23:21:55.409Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-12T22:14:52.177Z",
			"editor": "ljharb",
			"key": "webpack",
			"value": {
				"value": "To pack your webs use webpack.  It's better than rollup",
				"creator": "qswz",
				"date": "2017-01-11T23:18:55.828Z",
				"popularity": 1,
				"editors": [
					"graingert"
				],
				"changes": [
					{
						"date": "2017-01-11T23:19:00.940Z",
						"editor": "graingert",
						"old-value": "the creation of the universe",
						"new-value": "To pack your webs use webpack"
					},
					{
						"date": "2017-01-11T23:19:33.264Z",
						"editor": "graingert",
						"old-value": "To pack your webs use webpack",
						"new-value": "To pack your webs use webpack.  It's better than rollup"
					}
				]
			}
		},
		{
			"date": "2017-01-12T22:14:56.893Z",
			"editor": "ljharb",
			"key": "rollup",
			"value": {
				"value": "To pack your webs use rollup.  It's better than webpack",
				"creator": "graingert",
				"date": "2017-01-11T23:19:59.287Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-13T12:41:14.133Z",
			"editor": "ljharb",
			"key": "tabs",
			"value": {
				"value": "spaces for kids",
				"creator": "`slikts",
				"date": "2017-01-13T05:37:37.605Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-14T22:25:04.798Z",
			"editor": "ljharb",
			"key": "parsing html",
			"value": {
				"value": "http://stackoverflow.com/a/1732454/3183756",
				"creator": "qswz",
				"date": "2017-01-14T00:41:32.319Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-18T10:48:03.607Z",
			"editor": "ljharb",
			"key": "eczema",
			"value": {
				"value": "Remember, Eczema is to ECMAScript as Pan is to Painting, or Halm is to Hamster. We don't know Eczema, and if you're trying to apply your Eczema knowledge to ECMAScript, it probably won't work. See also: https://en.wikipedia.org/wiki/Dermatitis",
				"creator": "graingert",
				"date": "2017-01-17T23:04:46.978Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-19T07:04:22.227Z",
			"editor": "ljharb",
			"key": "eczema",
			"value": {
				"value": "Remember, Eczema is to ECMAScript as Pan is to Painting, or Halm is to Hamster. We don't know Eczema, and if you're trying to apply your Eczema knowledge to ECMAScript, it probably won't work. See also: https://en.wikipedia.org/wiki/Dermatitis",
				"creator": "graingert",
				"date": "2017-01-18T16:21:46.486Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-21T10:39:37.752Z",
			"editor": "ljharb",
			"key": "eczema",
			"value": {
				"value": "Remember, Eczema is to ECMAScript as Pan is to Painting, or Halm is to Hamster. We don't know Eczema, and if you're trying to apply your Eczema knowledge to ECMAScript, it probably won't work. See also: https://en.wikipedia.org/wiki/Dermatitis",
				"creator": "graingert",
				"date": "2017-01-19T22:16:13.674Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-28T22:50:33.973Z",
			"editor": "ljharb",
			"key": "indent",
			"value": {
				"value": "use tabs for indentation",
				"creator": "qswz",
				"date": "2017-01-28T22:40:38.245Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-01-28T22:50:36.099Z",
			"editor": "ljharb",
			"key": "beer",
			"value": {
				"value": "for drinking",
				"popularity": 18,
				"creator": "CoverSlide",
				"editors": [
					"rand0m"
				],
				"changes": [
					{
						"date": "2017-01-28T22:50:07.227Z",
						"editor": "rand0m",
						"old-value": "Don't mind if I do! Glug glug glug!",
						"new-value": "for drinking"
					}
				]
			}
		},
		{
			"date": "2017-02-21T02:34:19.854Z",
			"editor": "jaawerth",
			"key": "npm broken",
			"value": {
				"value": "http://cryto.net/why-is-npm-broken/",
				"creator": "jaawerth",
				"date": "2017-02-21T02:33:57.992Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-04-04T03:44:55.993Z",
			"editor": "ljharb",
			"key": "tescase",
			"value": {
				"value": "did you mean testcase?",
				"creator": "graingert",
				"date": "2017-03-29T22:51:01.164Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-04-12T20:13:17.109Z",
			"editor": "Havvy",
			"key": "dedicated @",
			"value": {
				"value": "ded",
				"creator": "Havvy",
				"date": "2017-04-12T20:13:10.258Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-04-26T05:17:35.198Z",
			"editor": "ljharb",
			"key": "window",
			"value": {
				"value": "window",
				"creator": "niggler",
				"date": "2017-04-26T01:54:02.421Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-04-26T05:17:36.892Z",
			"editor": "ljharb",
			"key": "door",
			"value": {
				"alias": "window",
				"creator": "niggler",
				"date": "2017-04-26T01:54:09.668Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-05-02T19:21:22.446Z",
			"editor": "qswz",
			"key": "pastebin",
			"value": {
				"alias": "paste",
				"creator": "joepie91",
				"date": "2015-08-24T21:00:25.234Z",
				"popularity": 25,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-05-03T11:19:11.020Z",
			"editor": "ljharb",
			"key": "pastebin",
			"value": {
				"value": "worst paste website",
				"creator": "qswz",
				"date": "2017-05-02T23:31:53.799Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-05-11T08:10:35.014Z",
			"editor": "ljharb",
			"key": "es6 elephants",
			"value": {
				"value": "contrary to import/export es6 modules do not provide any semantics for elephants. elephants currently do *nothing*, in web context. there is no loader spec, and nobody misses it at all.",
				"creator": "earendel",
				"date": "2017-05-10T02:56:45.655Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-05-14T05:34:21.083Z",
			"editor": "ljharb",
			"key": "f",
			"value": {
				"value": "fiddle it",
				"creator": "qswz",
				"date": "2017-05-12T19:07:49.657Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-05-31T02:59:09.992Z",
			"editor": "ljharb",
			"key": "graingert",
			"value": {
				"value": "\"smells of porridge\"",
				"creator": "redcosmos",
				"date": "2017-05-31T02:58:58.215Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-05-31T03:00:32.080Z",
			"editor": "ljharb",
			"key": "graingert",
			"value": {
				"value": "\"wont let people play with his toys\"",
				"creator": "redcosmos",
				"date": "2017-05-31T03:00:15.182Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-06-16T12:07:06.722Z",
			"editor": "WASM",
			"key": "date",
			"value": {
				"value": "just use Date",
				"creator": "qswz",
				"date": "2017-06-16T12:06:57.544Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-04T23:10:16.265Z",
			"editor": "ljharb",
			"key": "begin haskell discussion",
			"value": {
				"value": "(PING!) Maxdamantus",
				"creator": "BLATBLATBLATBLAT",
				"date": "2017-06-17T09:49:46.637Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-04T23:10:21.135Z",
			"editor": "ljharb",
			"key": "iis",
			"value": {
				"value": "<ljharb> hey now, myspace was entirely hosted on IIS",
				"creator": "asdasda",
				"date": "2017-06-19T07:20:46.510Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-06T13:43:31.320Z",
			"editor": "alextes",
			"key": "doesn't work2",
			"value": {
				"value": "What do you mean it doesn't work? What happens when you try to run it? What's the output? What's the error message? What did you want or expect to happen?",
				"creator": "alextes",
				"date": "2017-07-06T13:43:11.641Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-06T13:45:17.497Z",
			"editor": "Xinno",
			"key": "doesn't work 2",
			"value": {
				"value": "What do you mean it doesn't work? What happens when you try to run it? What's the output? What's the error message? What did you want or expect to happen?",
				"creator": "alextes",
				"date": "2017-07-06T13:43:41.191Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-21T11:06:17.592Z",
			"editor": "Xinn",
			"key": "test",
			"value": {
				"value": "test",
				"creator": "jalnt",
				"date": "2016-10-28T08:53:45.469Z",
				"popularity": 6,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-22T03:03:04.231Z",
			"editor": "ljharb",
			"key": "fetch fetch",
			"value": {
				"value": "window.fetch - a standard way to make HTTP requests and get a Promise. http://mdn.io/Using_Fetch For older browsers you can Polyfill it with https://github.com/github/fetch See  http://mdn.io/fetch for browser support. See also node-fetch possibly",
				"creator": "WhatTheDilly",
				"date": "2017-07-22T02:59:20.007Z",
				"popularity": 2,
				"editors": [
					"WhatTheDilly"
				],
				"changes": [
					{
						"date": "2017-07-22T03:01:07.391Z",
						"editor": "WhatTheDilly",
						"old-value": "window.fetch - a standard way to make HTTP requests and get a Promise. https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch For older browsers you can Polyfill it with https://github.com/github/fetch See  http://mdn.io/fetch for browser support. See also node-fetch possibly",
						"new-value": "window.fetch - a standard way to make HTTP requests and get a Promise. http://mdn.io/Using_Fetch For older browsers you can Polyfill it with https://github.com/github/fetch See  http://mdn.io/fetch for browser support. See also node-fetch possibly"
					}
				]
			}
		},
		{
			"date": "2017-07-22T03:04:34.098Z",
			"editor": "MaxLeiter",
			"key": "¡5!",
			"value": {
				"value": "120",
				"creator": "Maxdamantus",
				"date": "2017-07-22T03:04:16.094Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-22T03:04:47.014Z",
			"editor": "MaxLeiter",
			"key": "2 + 2",
			"value": {
				"value": "5",
				"creator": "Maxdamantus",
				"date": "2017-07-22T03:00:49.336Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-22T03:05:55.024Z",
			"editor": "MaxLeiter",
			"key": ">> 2 + 2",
			"value": {
				"value": "5",
				"creator": "MaxLeiter",
				"date": "2017-07-22T03:05:41.550Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-24T04:37:18.978Z",
			"editor": "GreenJello",
			"key": "expression of surprise",
			"value": {
				"value": "!!",
				"creator": "GreenJello",
				"date": "2017-07-24T04:36:57.425Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-26T11:31:47.755Z",
			"editor": "gde33",
			"key": "(planetarray",
			"value": {
				"value": "http://go-here.nl/game/PlanetArray.html)",
				"creator": "gde33",
				"date": "2017-07-26T11:31:28.670Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-26T11:37:12.427Z",
			"editor": "ljharb",
			"key": "5",
			"value": {
				"value": "120",
				"creator": "qswz",
				"date": "2017-07-22T03:02:40.257Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-26T11:38:00.161Z",
			"editor": "ljharb",
			"key": "try​ removing th​is",
			"value": {
				"value": "muahaha",
				"creator": "Maxdamantus",
				"date": "2017-07-22T03:06:43.989Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-26T11:38:38.521Z",
			"editor": "ljharb",
			"key": "planetarray",
			"value": {
				"value": "http://go-here.nl/game/PlanetArray.html",
				"creator": "gde33",
				"date": "2017-07-26T11:31:34.054Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-26T11:57:10.089Z",
			"editor": "gde33",
			"key": "ipfs",
			"value": {
				"value": "The InterPlanetary File System is a peer-to-peer hypermedia protocol to remake the web faster, safer, and more open. https://www.youtube.com/watch?v=Fa4pckodM9g",
				"creator": "gde33",
				"date": "2017-07-26T11:55:44.014Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-26T12:01:32.400Z",
			"editor": "ljharb",
			"key": "web3.js",
			"value": {
				"value": "Web 3.0 refers to an Ethereum compatible JavaScript API. http://lmgtfy.com/?q=web3",
				"creator": "gde33",
				"date": "2017-07-26T11:50:26.208Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-26T12:12:41.769Z",
			"editor": "gde33",
			"key": "etherium",
			"value": {
				"value": "An iterative cryptocurrency of dubious value virtually or in real economics. An example of why can be found here - https://dentacoin.com/",
				"creator": "Xinn",
				"date": "2017-07-26T11:55:46.988Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-28T22:56:11.646Z",
			"editor": "ljharb",
			"key": "xinpay",
			"value": {
				"value": "All donations go towards buying beer - https://paypal.me/michaeldebyl",
				"creator": "Xinn",
				"date": "2017-07-26T19:16:09.669Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-31T16:26:50.103Z",
			"editor": "Xinn",
			"key": "str_repeat",
			"value": {
				"value": "|> String.prototype.repeat = function str_repeat(n) { var undef, str = []; if (n < 0) { return this; } for (var i = 0; i < n; ++i) { str.push(undef); } return str.join(this); }; /* http://jsperf.com/jsstringrepeat/2 */",
				"popularity": 8,
				"editors": [
					"ljharb"
				],
				"changes": [
					{
						"date": "2015-01-23T07:09:37.531Z",
						"editor": "ljharb",
						"old-value": "String.prototype.repeat = function str_repeat(n) { var undef, str = []; if (n < 0) { return this; } for (var i = 0; i < n; ++i) { str.push(undef); } return str.join(this); }; /* http://jsperf.com/jsstringrepeat/2 */",
						"new-value": "|> String.prototype.repeat = function str_repeat(n) { var undef, str = []; if (n < 0) { return this; } for (var i = 0; i < n; ++i) { str.push(undef); } return str.join(this); }; /* http://jsperf.com/jsstringrepeat/2 */"
					}
				]
			}
		},
		{
			"date": "2017-07-31T22:05:34.905Z",
			"editor": "ljharb",
			"key": "ot",
			"value": {
				"value": "This is getting way off topic. Is jQuery better than JavaScript? Discuss!",
				"creator": "GreenJello",
				"date": "2017-07-31T11:37:37.856Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-31T22:05:50.640Z",
			"editor": "ljharb",
			"key": "doomsday",
			"value": {
				"value": "██████████████]99% :: We are 1 second from midnight",
				"creator": "Xinn",
				"date": "2017-07-31T21:26:41.417Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-31T22:05:58.556Z",
			"editor": "ljharb",
			"key": "extendscript",
			"value": {
				"value": "\"ExtendScript is the Adobe dialect of the ECMAScript scripting language specification. JavaScript (the Netscape/Mozilla implementation of the ECMA specification), ExtendScript, and ECMAScript are very similar languages.",
				"creator": "holysheet",
				"date": "2017-07-31T22:04:24.086Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-07-31T22:09:27.914Z",
			"editor": "ljharb",
			"key": "define webscale",
			"value": {
				"value": "Hyper-converged infrastructure remotely synergized",
				"creator": "Xinn",
				"date": "2017-07-31T22:06:17.113Z",
				"popularity": 0,
				"editors": [
					"Xinn"
				],
				"changes": [
					{
						"date": "2017-07-31T22:06:33.515Z",
						"editor": "Xinn",
						"old-value": "Hyper-converged infrastructure",
						"new-value": "Hyper-converged infrastructure remotely synergized"
					}
				]
			}
		},
		{
			"date": "2017-08-01T06:13:22.535Z",
			"editor": "ljharb",
			"key": "snip str_repeat",
			"value": {
				"value": "function str_repeat(n) { var undef, str = []; if (n < 0) { return this; } for (var i = 0; i < n; ++i) { str.push(undef); } return str.join(this); }; /* http://jsperf.com/jsstringrepeat/2 */",
				"creator": "Xinn",
				"date": "2017-07-31T16:26:36.545Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-01T07:45:24.353Z",
			"editor": "ljharb",
			"key": "str_repeat",
			"value": {
				"value": "|> function str_repeat(n) { var undef, str = []; if (n < 0) { return this; } for (var i = 0; i < n; ++i) { str.push(undef); } return str.join(this); }; /* http://jsperf.com/jsstringrepeat/2 */",
				"creator": "ljharb",
				"date": "2017-08-01T06:12:55.191Z",
				"popularity": 0,
				"editors": [
					"ljharb"
				],
				"changes": [
					{
						"date": "2017-08-01T06:13:04.815Z",
						"editor": "ljharb",
						"old-value": "|> String.prototype.repeat = function str_repeat(n) { var undef, str = []; if (n < 0) { return this; } for (var i = 0; i < n; ++i) { str.push(undef); } return str.join(this); }; /* http://jsperf.com/jsstringrepeat/2 */",
						"new-value": "|> function str_repeat(n) { var undef, str = []; if (n < 0) { return this; } for (var i = 0; i < n; ++i) { str.push(undef); } return str.join(this); }; /* http://jsperf.com/jsstringrepeat/2 */"
					}
				]
			}
		},
		{
			"date": "2017-08-03T09:27:04.489Z",
			"editor": "ljharb",
			"key": "snip jquery",
			"value": {
				"value": "|> function $(selector, context) { return (context || document).querySelectorAll(selector); }",
				"creator": "MJCD",
				"date": "2017-08-01T15:40:34.366Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-09T12:26:04.105Z",
			"editor": "sillyslux",
			"key": "12minutetutorial",
			"value": {
				"value": "<sillyslux> let's see... https://www.youtube.com/watch?v=Ukg_U3CnJWI if this works",
				"creator": "MJCD",
				"date": "2017-08-09T06:41:45.703Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-09T15:27:40.685Z",
			"editor": "MJCD",
			"key": "dog balls",
			"value": {
				"value": "(function () {}()) > (function () {})() — https://www.youtube.com/watch?v=taaEzHI9xyY#t=34m33s (from YUIConf 2011)",
				"popularity": 41,
				"editors": [
					"ljharb"
				],
				"changes": [
					{
						"date": "2015-02-05T19:23:34.727Z",
						"editor": "ljharb",
						"old-value": "(function () {}()) > (function () {})() — http://www.youtube.com/watch?v=taaEzHI9xyY#t=34m33s (from YUIConf 2011)",
						"new-value": "(function () {}()) > (function () {})() — https://www.youtube.com/watch?v=taaEzHI9xyY#t=34m33s (from YUIConf 2011)"
					}
				]
			}
		},
		{
			"date": "2017-08-09T15:30:14.570Z",
			"editor": "MJCD",
			"key": "with",
			"value": {
				"value": "This is probably a bad idea. Turn back before it's too late!",
				"creator": "jaawerth",
				"date": "2015-08-08T03:15:14.231Z",
				"popularity": 9,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-09T20:12:30.309Z",
			"editor": "ljharb",
			"key": "dog balls \"(function () {}()) > (function () {})() — http://www.youtube.com/watch?v",
			"value": {
				"value": "taaEzHI9xyY#t=34m33s (from YUIConf 2011)\"",
				"creator": "sillysloft",
				"date": "2017-08-09T15:34:47.650Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-09T20:13:36.034Z",
			"editor": "ljharb",
			"key": "fiddle",
			"value": {
				"value": "fiddle it or it didn't happen",
				"creator": "qswz",
				"date": "2017-08-08T20:32:28.742Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-11T20:32:13.223Z",
			"editor": "MJCD",
			"key": "dog balls",
			"value": {
				"value": "(function () {}()) > (function () {})() — https://www.youtube.com/watch?v=taaEzHI9xyY#t=34m33s (from YUIConf 2011)",
				"creator": "ljharb",
				"date": "2017-08-09T20:12:22.368Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-12T12:15:15.261Z",
			"editor": "ljharb",
			"key": "substr",
			"value": {
				"value": "String.prototype.substr is nonstandard/deprecated. Use String.prototype.slice instead.",
				"creator": "qswz",
				"date": "2016-12-16T23:40:45.819Z",
				"popularity": 4,
				"editors": [
					"ljharb"
				],
				"changes": [
					{
						"date": "2017-04-04T03:41:38.972Z",
						"editor": "ljharb",
						"old-value": "stop using it, use .slice",
						"new-value": "String.prototype.substr is nonstandard/deprecated. Use String.prototype.slice instead."
					}
				]
			}
		},
		{
			"date": "2017-08-13T03:26:54.190Z",
			"editor": "MJCD",
			"key": "no mongo",
			"value": {
				"value": "Don't use MongoDB - it has many issues, and is essentially never the right solution to your problem. Here's a list of issues: http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/ and a more technical article at http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/",
				"creator": "Havvy",
				"date": "2015-05-23T20:29:30.360Z",
				"popularity": 470,
				"editors": [
					"joepie91",
					"m0",
					"samsch"
				],
				"changes": [
					{
						"date": "2015-07-20T20:28:59.285Z",
						"editor": "joepie91",
						"old-value": "http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/",
						"new-value": "Don't use MongoDB - it has many issues, and is essentially never the right solution to your problem. Here's a list of issues: http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/ and a more technical article at http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/"
					},
					{
						"date": "2017-08-13T03:23:53.277Z",
						"editor": "m0",
						"old-value": "Don't use MongoDB - it has many issues, and is essentially never the right solution to your problem. Here's a list of issues: http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/ and a more technical article at http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/",
						"new-value": "there's no limit!"
					},
					{
						"date": "2017-08-13T03:24:59.192Z",
						"editor": "samsch",
						"old-value": "there's no limit!",
						"new-value": "Don't use MongoDB - it has many issues, and is essentially never the right solution to your problem. Here's a list of issues: http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/ and a more technical article at http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/"
					}
				]
			}
		},
		{
			"date": "2017-08-13T04:05:38.468Z",
			"editor": "ljharb",
			"key": "javascript sucks",
			"value": {
				"value": "All languages have their own unique perks, challenges and quirks and it is largely fruitless to just sit around comparing JavaScript to every other language under the sun. It is what it is like you are what you are. If you are looking to start a 'javascript sucks' debate - might I recommend you join #c++",
				"creator": "MJCD",
				"date": "2017-08-11T07:23:21.318Z",
				"popularity": 4,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-13T04:06:11.506Z",
			"editor": "ljharb",
			"key": "no love",
			"value": {
				"value": "It's fine to have no love for any given thing (aka PHP), however we must as !scientists accept that they are a big part of the web ecosystem and that is unlikely to change any time soon - for good reasons. Hating on such things will only bring negative vibes and nobody needs that in their life ;p",
				"creator": "MJCD",
				"date": "2017-08-11T10:21:47.543Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-13T04:06:16.566Z",
			"editor": "ljharb",
			"key": "scientists",
			"value": {
				"value": "As programmers we need to embrace the mindset of a scientist. Examine the knowledge that exists for a given thing, weigh up all your options and make informed choices backed by evidence.",
				"creator": "MJCD",
				"date": "2017-08-11T10:27:01.231Z",
				"popularity": 3,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-15T07:19:41.861Z",
			"editor": "ljharb",
			"key": "let's be scientists",
			"value": {
				"alias": "scientists",
				"creator": "MJCD",
				"date": "2017-08-11T10:27:40.995Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-15T07:19:47.560Z",
			"editor": "ljharb",
			"key": "lets be scientists",
			"value": {
				"alias": "scientists",
				"creator": "MJCD",
				"date": "2017-08-11T10:27:30.761Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-15T11:00:30.789Z",
			"editor": "MJCD",
			"key": "the java scripts",
			"value": {
				"alias": "java scripts",
				"creator": "MJCD",
				"date": "2017-08-02T13:25:06.908Z",
				"popularity": 4,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-15T11:58:34.903Z",
			"editor": "qswz",
			"key": ";",
			"value": {
				"value": "you don't \"need\" to use them anywhere, in the sense that the JS engine will put them in for you if you fail to",
				"creator": "qswz",
				"date": "2017-08-15T11:57:36.296Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-17T05:28:56.212Z",
			"editor": "GreenJello",
			"key": "mjcd",
			"value": {
				"alias": "this",
				"creator": "niggler",
				"date": "2017-08-17T05:28:22.755Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-17T05:32:58.876Z",
			"editor": "GreenJello",
			"key": "qw",
			"value": {
				"value": "hi",
				"creator": "GreenJello",
				"date": "2017-08-17T05:32:41.861Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-18T11:54:48.513Z",
			"editor": "qswz",
			"key": "datafns",
			"value": {
				"value": "use native Date",
				"creator": "qswz",
				"date": "2017-08-18T11:53:38.003Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-19T00:22:18.146Z",
			"editor": "ljharb",
			"key": "qw",
			"value": {
				"value": "1",
				"creator": "GreenJello",
				"date": "2017-08-17T05:33:33.068Z",
				"popularity": 6,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-19T00:22:19.371Z",
			"editor": "ljharb",
			"key": "qe",
			"value": {
				"alias": "qw",
				"creator": "GreenJello",
				"date": "2017-08-17T05:32:50.444Z",
				"popularity": 3,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-08-23T22:49:44.513Z",
			"editor": "holysheet",
			"key": "pastebin",
			"value": {
				"alias": "paste",
				"creator": "ljharb",
				"date": "2017-05-03T11:19:20.691Z",
				"popularity": 5,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-01T20:28:41.110Z",
			"editor": "ljharb",
			"key": "jquery?",
			"value": {
				"value": "No thanks.",
				"creator": "qswz",
				"date": "2017-08-20T20:58:21.785Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-01T20:29:09.478Z",
			"editor": "ljharb",
			"key": "ieee754",
			"value": {
				"value": "JS Numbers are IEEE 754 doubles, which cannot exactly represent certain numbers (try 0.1 + 0.2)",
				"creator": "holysheet",
				"date": "2017-08-21T04:00:17.346Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-01T20:29:28.349Z",
			"editor": "ljharb",
			"key": "pastebin",
			"value": {
				"value": "please, anything but pastebin.com, it's full of ads, see !paste",
				"creator": "holysheet",
				"date": "2017-08-23T22:49:50.796Z",
				"popularity": 3,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-07T08:00:21.166Z",
			"editor": "GreenJello",
			"key": "react-tut",
			"value": {
				"value": "https://facebook.github.io/react/tutorial/tutorial.html \"Tutorial: Intro To React\" covers lifting state up, and other useful things",
				"creator": "GreenJello",
				"date": "2017-09-07T06:25:42.723Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-07T08:00:37.074Z",
			"editor": "ljharb",
			"key": "constant",
			"value": {
				"value": "if by \"constant\" you mean \"you're treating it as immutable\", then SCREAMING_SNAKE_CASE is the idiom.",
				"creator": "MJCD",
				"date": "2017-09-06T05:45:58.156Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-07T08:01:37.049Z",
			"editor": "ljharb",
			"key": "rtut",
			"value": {
				"value": "https://facebook.github.io/react/tutorial/tutorial.html \"Tutorial: Intro To React\" covers lifting state up, and other useful things",
				"creator": "GreenJello",
				"date": "2017-09-07T06:25:47.144Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-07T08:01:56.243Z",
			"editor": "ljharb",
			"key": "rt",
			"value": {
				"value": "https://facebook.github.io/react/tutorial/tutorial.html \"Tutorial: Intro To React\" covers lifting state up, and other useful things",
				"creator": "GreenJello",
				"date": "2017-09-07T06:25:38.708Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-07T08:05:23.185Z",
			"editor": "ljharb",
			"key": "[alias] []",
			"value": {
				"value": "properties",
				"creator": "cjohnson",
				"date": "2017-06-12T23:24:26.476Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-08T17:58:57.639Z",
			"editor": "MJCD",
			"key": "snip flatten-alt-v",
			"value": {
				"value": "|> var flatten = function(/* ...xs */){ return Array.prototype.reduce.call(arguments, function(acc, x){ return acc.concat(x) }, []) }",
				"creator": "GreenJello",
				"date": "2015-01-08T11:55:54.445Z",
				"popularity": 6,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-08T19:53:08.036Z",
			"editor": "ljharb",
			"key": "jquery",
			"value": {
				"value": "Real talk, don't use jquery to try to build gmail but if you want your form to popup a login box it's fine",
				"popularity": 232,
				"editors": [
					"niggler",
					"Mortchek",
					"PigDude",
					"devin",
					"dwcook",
					"jaspr",
					"zomg"
				],
				"changes": [
					{
						"date": "2016-10-26T23:31:45.059Z",
						"editor": "zomg",
						"old-value": "Please visit #jquery for questions related to jQuery. (by typing /join #jquery)",
						"new-value": "Real talk, don't use jquery to try to build gmail but if you want your form to popup a login box it's fine"
					}
				]
			}
		},
		{
			"date": "2017-09-08T19:55:44.739Z",
			"editor": "ljharb",
			"key": "proloser",
			"value": {
				"value": "ProLoser is the kind of guy who would rather jump through several hoops to make a bot talk for him than do it himself.",
				"creator": "ProLoser",
				"date": "2015-01-11T08:08:23.019Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-10T11:48:11.870Z",
			"editor": "GreenJello",
			"key": "es2020",
			"value": {
				"value": "- THIS FACTOID IS FOR SALE - Please paypal exactly $14.97 to https://www.paypal.me/MichaelDeByl to continue.",
				"creator": "MJCD",
				"date": "2017-09-10T11:47:33.335Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-11T15:32:36.465Z",
			"editor": "MJCD",
			"key": "delay2",
			"value": {
				"value": "const delay=(x,t=1000)=>new Promise(r=>setTimeout(r,t,x));",
				"creator": "qswz",
				"date": "2017-09-09T20:55:16.045Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-12T08:28:20.966Z",
			"editor": "MJCD",
			"key": "tabs",
			"value": {
				"value": "not even once",
				"creator": "`slikts",
				"date": "2017-01-14T23:17:23.424Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-13T17:17:58.993Z",
			"editor": "MJCD",
			"key": "async",
			"value": {
				"alias": "delay",
				"creator": "dwcook",
				"date": "2014-03-26T02:31:14.334Z",
				"popularity": 74,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-13T17:18:13.902Z",
			"editor": "ThePendulum",
			"key": "foo",
			"value": {
				"value": "bar",
				"creator": "ThePendulum",
				"date": "2017-09-13T17:18:12.269Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-13T17:18:52.044Z",
			"editor": "ThePendulum",
			"key": "foo",
			"value": {
				"value": "lipsum",
				"creator": "ThePendulum",
				"date": "2017-09-13T17:18:40.483Z",
				"popularity": 1,
				"editors": [
					"ThePendulum"
				],
				"changes": [
					{
						"date": "2017-09-13T17:18:44.849Z",
						"editor": "ThePendulum",
						"old-value": "bar",
						"new-value": "lipsum"
					}
				]
			}
		},
		{
			"date": "2017-09-13T21:45:30.896Z",
			"editor": "PyJahn",
			"key": "hi",
			"value": {
				"value": "no need to hi, it's irc",
				"creator": "qswz",
				"date": "2017-09-13T21:45:12.259Z",
				"popularity": 1,
				"editors": [
					"qswz"
				],
				"changes": [
					{
						"date": "2017-09-13T21:45:29.876Z",
						"editor": "qswz",
						"old-value": "no need, to hi, it's irc",
						"new-value": "no need to hi, it's irc"
					}
				]
			}
		},
		{
			"date": "2017-09-14T20:52:25.099Z",
			"editor": "cjohnson",
			"key": "jquery4",
			"value": {
				"value": "https://gist.github.com/caub/437e5d98ee9260df811628f7900c1c84",
				"creator": "qswz",
				"date": "2017-09-14T20:48:11.096Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-19T04:03:29.848Z",
			"editor": "MJCD",
			"key": "iterators",
			"value": {
				"alias": "iteration",
				"creator": "",
				"date": "2017-09-19T04:01:46.952Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-21T00:14:00.073Z",
			"editor": "ljharb",
			"key": "polyfills",
			"value": {
				"value": "a polyfill is basically some js code used to provide newer native functions/methods in browsers where they have not been implemented yet. | see es-shims or polyfill.io",
				"creator": "qswz",
				"date": "2017-09-13T15:16:19.404Z",
				"popularity": 1,
				"editors": [
					"earendel"
				],
				"changes": [
					{
						"date": "2017-09-13T15:23:33.017Z",
						"editor": "earendel",
						"old-value": "es-shims or polyfill.io",
						"new-value": "a polyfill is basically some js code used to provide newer native functions/methods in browsers where they have not been implemented yet. | see es-shims or polyfill.io"
					}
				]
			}
		},
		{
			"date": "2017-09-21T00:14:15.321Z",
			"editor": "ljharb",
			"key": "cntr",
			"value": {
				"value": "It's spelled \"counter\"",
				"creator": "Donitzo",
				"date": "2017-09-13T15:17:55.574Z",
				"popularity": 1,
				"editors": [
					"GreenJello"
				],
				"changes": [
					{
						"date": "2017-09-13T15:21:27.232Z",
						"editor": "GreenJello",
						"old-value": "It's Spelled counter",
						"new-value": "It's spelled \"counter\""
					}
				]
			}
		},
		{
			"date": "2017-09-21T11:27:16.899Z",
			"editor": "ljharb",
			"key": "editors ~",
			"value": {
				"value": "s/Atom\\/Sublime Text [Tied] 3) vim/vim [Tied] 3) Atom\\/Sublime Text",
				"creator": "Maxdamantus",
				"date": "2017-09-21T11:26:45.756Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-09-23T10:51:22.376Z",
			"editor": "MJCD",
			"key": "snip fill",
			"value": {
				"value": "|> var fill = function (l, f) { return Array(l).fill(l); };",
				"creator": "MJCD",
				"date": "2017-09-23T10:45:20.330Z",
				"popularity": 2,
				"editors": [
					"MJCD"
				],
				"changes": [
					{
						"date": "2017-09-23T10:48:04.539Z",
						"editor": "MJCD",
						"old-value": "|> const foo = Array.from({length: 10}, (_, i) => i); foo; // thanks systemfault",
						"new-value": "|> var fill = function (length, with) { return Array(length).fill(with); };"
					},
					{
						"date": "2017-09-23T10:49:11.004Z",
						"editor": "MJCD",
						"old-value": "|> var fill = function (length, with) { return Array(length).fill(with); };",
						"new-value": "|> var fill = function (l, f) { return Array(l).fill(l); };"
					}
				]
			}
		},
		{
			"date": "2017-10-05T08:23:01.872Z",
			"editor": "MJCD",
			"key": "snip deepclone-alt",
			"value": {
				"value": "|> var deepClone = function (o) { return JSON.parse(JSON.stringify(o));return o; };",
				"creator": "MJCD",
				"date": "2017-09-15T19:15:50.158Z",
				"popularity": 6,
				"editors": [
					"MJCD"
				],
				"changes": [
					{
						"date": "2017-09-15T19:17:04.126Z",
						"editor": "MJCD",
						"old-value": "|> var o1 = { foo: { bar: 'baz' } }; var o2 = JSON.parse(JSON.stringify(o1)); o1.foo.bar = 'meow'; o2.foo.bar;",
						"new-value": "|>var deepClone = function (o1) { var o1 = { foo: { bar: 'baz' } }; var o2 = JSON.parse(JSON.stringify(o1)); o1.foo.bar = 'meow'; return o2; };"
					},
					{
						"date": "2017-09-15T19:18:10.210Z",
						"editor": "MJCD",
						"old-value": "|>var deepClone = function (o1) { var o1 = { foo: { bar: 'baz' } }; var o2 = JSON.parse(JSON.stringify(o1)); o1.foo.bar = 'meow'; return o2; };",
						"new-value": "|>var deepClone = function (o) { return JSON.parse(JSON.stringify(o));return o; };"
					},
					{
						"date": "2017-09-15T19:18:14.820Z",
						"editor": "MJCD",
						"old-value": "|>var deepClone = function (o) { return JSON.parse(JSON.stringify(o));return o; };",
						"new-value": "|> var deepClone = function (o) { return JSON.parse(JSON.stringify(o));return o; };"
					}
				]
			}
		},
		{
			"date": "2017-10-06T14:15:00.701Z",
			"editor": "MJCD",
			"key": "snip $",
			"value": {
				"value": "This snippet mimics jQuery syntax while being much lighter: function $(sel, parent){ return Array.prototype.slice.call((parent || document).querySelectorAll(sel)); }",
				"creator": "GreenJello__",
				"date": "2014-01-24T03:08:22.868Z",
				"popularity": 23,
				"editors": [
					"GreenJello__"
				],
				"changes": [
					{
						"date": "2014-01-24T03:33:40.373Z",
						"editor": "GreenJello__",
						"old-value": "This snippet mimics jQuery syntax while being much lighter: function $(sel){ return Array.prototype.slice.call(document.querySelectorAll(sel)); }",
						"new-value": "This snippet mimics jQuery syntax while being much lighter: function $(sel, parent){ return Array.prototype.slice.call((parent || document).querySelectorAll(sel)); }"
					}
				]
			}
		},
		{
			"date": "2017-10-06T15:32:47.138Z",
			"editor": "MJCD",
			"key": "next",
			"value": {
				"value": "Another satisfied customer! NEXT!!",
				"popularity": 634
			}
		},
		{
			"date": "2017-10-10T12:54:54.056Z",
			"editor": "Donitzo",
			"key": "javvascript",
			"value": {
				"value": "Han mo boo-kee, keelee ka-lya dooka. Wadja da boolya ra 1.9 Megabytes",
				"creator": "Donitzo",
				"date": "2017-10-10T12:54:08.181Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-10-19T23:11:53.978Z",
			"editor": "niggler",
			"key": "w3fools",
			"value": {
				"alias": "w3schools",
				"popularity": 81
			}
		},
		{
			"date": "2017-10-29T17:39:37.209Z",
			"editor": "MJCD",
			"key": "regex",
			"value": {
				"value": "Give us 1. What you want to match, 2. Some sample data 3. Your attempt. http://regex101.com/ is useful!",
				"popularity": 78,
				"editors": [
					"cjohnson"
				],
				"changes": [
					{
						"date": "2015-04-09T18:54:57.281Z",
						"editor": "cjohnson",
						"old-value": "Give us 1. What you want to match, 2. Some sample data 3. Your attempt. http://regexpal.com/ is useful!",
						"new-value": "Give us 1. What you want to match, 2. Some sample data 3. Your attempt. http://regex101.com/ is useful!"
					}
				]
			}
		},
		{
			"date": "2017-10-30T22:34:25.511Z",
			"editor": "ljharb",
			"key": "mutation",
			"value": {
				"value": "You should avoid mutating values. something something something ljharb something",
				"creator": "MJCD",
				"date": "2017-10-09T11:54:31.674Z",
				"popularity": 2,
				"editors": [
					"MJCD"
				],
				"changes": [
					{
						"date": "2017-10-09T11:54:53.041Z",
						"editor": "MJCD",
						"old-value": "You should avoid mutation objects. something something something ljharb something",
						"new-value": "You should avoid mutating values. something something something ljharb something"
					}
				]
			}
		},
		{
			"date": "2017-10-30T22:34:44.758Z",
			"editor": "ljharb",
			"key": "jabbascript",
			"value": {
				"value": "Han mo boo-kee, keelee ka-lya dooka. Wadja da boolya ra 1.9 Megabytes",
				"creator": "Donitzo",
				"date": "2017-10-10T12:54:18.569Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-01T21:21:46.448Z",
			"editor": "ljharb",
			"key": "foo",
			"value": {
				"value": "bar",
				"creator": "niggler",
				"date": "2017-11-01T21:18:44.844Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-08T10:19:59.569Z",
			"editor": "GreenJello",
			"key": "fuckthoits",
			"value": {
				"value": "*fuck those idiots* responding with !factoids",
				"creator": "earendel",
				"date": "2017-11-08T10:18:38.766Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-08T11:03:11.615Z",
			"editor": "ljharb",
			"key": "should",
			"value": {
				"value": "you.should.friggin.stop.using.it(true)",
				"creator": "qswz",
				"date": "2017-11-01T17:45:42.559Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-08T11:03:19.354Z",
			"editor": "ljharb",
			"key": "h",
			"value": {
				"value": "const h=(tag, props, ...cs) {const el=Object.assign(document.createElement(tag), props); el.append(...cs); return el;}",
				"creator": "qswz",
				"date": "2017-11-07T23:46:23.204Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-08T11:03:24.929Z",
			"editor": "ljharb",
			"key": "batman",
			"value": {
				"value": "`${`${0/0}`.repeat(16)} BATMAN!!!`",
				"creator": "niggler",
				"date": "2017-11-08T00:28:55.072Z",
				"popularity": 2,
				"editors": [
					"NaN",
					"niggler"
				],
				"changes": [
					{
						"date": "2017-11-08T00:29:35.342Z",
						"editor": "NaN",
						"old-value": "`${`${0/0}`.repeat(16)} BATMAN!!!`",
						"new-value": "n> `${`${0/0}`.repeat(16)} BATMAN!!!`"
					},
					{
						"date": "2017-11-08T00:30:18.856Z",
						"editor": "niggler",
						"old-value": "n> `${`${0/0}`.repeat(16)} BATMAN!!!`",
						"new-value": "`${`${0/0}`.repeat(16)} BATMAN!!!`"
					}
				]
			}
		},
		{
			"date": "2017-11-14T11:18:43.136Z",
			"editor": "ljharb",
			"key": "fiddle",
			"value": {
				"value": "jsfiddle it or it didn't happen",
				"creator": "qswz",
				"date": "2017-11-09T14:46:31.829Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-14T11:18:51.835Z",
			"editor": "ljharb",
			"key": "iiae",
			"value": {
				"value": "(() => { /* ... */ })()",
				"creator": "qswz",
				"date": "2017-11-14T00:58:38.431Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-18T02:26:36.749Z",
			"editor": "ljharb",
			"key": "cool",
			"value": {
				"value": "features",
				"creator": "Guest14",
				"date": "2017-11-18T02:25:42.697Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-18T09:10:43.244Z",
			"editor": "ljharb",
			"key": "altfact",
			"value": {
				"value": "glutenborgen : a swiddish food that kills the gluten intolerant",
				"creator": "MJCD",
				"date": "2017-11-14T10:41:17.220Z",
				"popularity": 6,
				"editors": [
					"jcarpenter2",
					"MJCD"
				],
				"changes": [
					{
						"date": "2017-11-14T10:42:31.273Z",
						"editor": "jcarpenter2",
						"old-value": "There are more people alive than have ever died.",
						"new-value": "There are more bitcoins than were ever mined."
					},
					{
						"date": "2017-11-16T08:25:12.632Z",
						"editor": "MJCD",
						"old-value": "There are more bitcoins than were ever mined.",
						"new-value": "glutenborgen : a swiddish food that kills the gluten intolerant"
					}
				]
			}
		},
		{
			"date": "2017-11-18T09:10:58.203Z",
			"editor": "ljharb",
			"key": "perv",
			"value": {
				"value": "Lewd!",
				"creator": "wedr_",
				"date": "2017-11-15T17:34:57.721Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-18T09:11:03.396Z",
			"editor": "ljharb",
			"key": "cite",
			"value": {
				"value": "[Citations needed]",
				"creator": "wedr_",
				"date": "2017-11-15T18:08:06.270Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-18T09:11:08.137Z",
			"editor": "ljharb",
			"key": "altfact 2",
			"value": {
				"value": "Tears are a self-sustaining source of both hydration AND important nutrients!",
				"creator": "MJCD",
				"date": "2017-11-16T08:41:54.803Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-18T09:11:11.330Z",
			"editor": "ljharb",
			"key": "bananas",
			"value": {
				"value": "Good 4 u",
				"creator": "MJCD",
				"date": "2017-11-17T09:27:39.006Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-11-26T22:29:52.393Z",
			"editor": "ljharb",
			"key": "pending-question",
			"value": {
				"value": "http://dpaste.com/2T860XV",
				"creator": "qswz",
				"date": "2017-11-26T18:39:06.419Z",
				"popularity": 2,
				"editors": [
					"qswz"
				],
				"changes": [
					{
						"date": "2017-11-26T19:06:37.808Z",
						"editor": "qswz",
						"old-value": "http://dpaste.com/06RJSQC",
						"new-value": "http://dpaste.com/2T860XV"
					}
				]
			}
		},
		{
			"date": "2017-12-07T23:03:54.855Z",
			"editor": "graingert",
			"key": "pb",
			"value": {
				"value": "don't use https://pastebin.com it's an advertisement riddled pile of rubbish. See also !paste",
				"creator": "graingert",
				"date": "2017-12-07T22:40:57.959Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-12-14T23:47:12.773Z",
			"editor": "ljharb",
			"key": "lemonsparrow",
			"value": {
				"value": "https://gist.github.com/caub/da489a286b0098d0fcd799b66a252196#file-sequences-js",
				"creator": "qswz",
				"date": "2017-12-14T23:44:03.882Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2017-12-24T21:23:22.677Z",
			"editor": "qswz",
			"key": "he-man",
			"value": {
				"value": "https://youtu.be/eh7lp9umG2I",
				"creator": "qswz",
				"date": "2017-12-24T21:23:15.896Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-01-04T20:36:50.562Z",
			"editor": "cjohnson",
			"key": "no pastebin",
			"value": {
				"value": "don't use pastebin.com use gist or make a fiddle.",
				"creator": "graingert",
				"date": "2018-01-04T20:35:53.177Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-01-05T02:18:03.378Z",
			"editor": "ljharb",
			"key": "build step",
			"value": {
				"value": "[2017-12-18 22:34:05] <ljharb> a website *always* requires a build step.",
				"creator": "graingert",
				"date": "2018-01-04T21:09:01.720Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-01-06T12:46:06.946Z",
			"editor": "ljharb",
			"key": "disclaimer",
			"value": {
				"value": "ab4nd0n 4113 h0p3 y3 dat entre's",
				"creator": "MJCDwork",
				"date": "2018-01-02T17:08:59.201Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-01-06T12:46:35.795Z",
			"editor": "ljharb",
			"key": "spaces",
			"value": {
				"value": "What you should be using for indent",
				"creator": "Archelaus",
				"date": "2018-01-04T22:29:04.459Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-01-06T12:46:40.686Z",
			"editor": "ljharb",
			"key": "tabs",
			"value": {
				"value": "What you should be using for indent",
				"creator": "qswz",
				"date": "2018-01-04T22:27:26.948Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-01-06T12:47:36.141Z",
			"editor": "ljharb",
			"key": "infinit",
			"value": {
				"value": "infinininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininini",
				"creator": "MJCDwork2",
				"date": "2017-12-28T17:01:47.397Z",
				"popularity": 3,
				"editors": [
					"MJCDwork2"
				],
				"changes": [
					{
						"date": "2017-12-28T17:02:04.182Z",
						"editor": "MJCDwork2",
						"old-value": "infinininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininity",
						"new-value": "infinininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininini"
					},
					{
						"date": "2017-12-28T17:02:17.350Z",
						"editor": "MJCDwork2",
						"old-value": "infinininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininini",
						"new-value": "infinininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininininini"
					}
				]
			}
		},
		{
			"date": "2018-01-11T15:26:35.643Z",
			"editor": "graingert",
			"key": "data",
			"value": {
				"value": "There's 3 options to properly get data from the server to the client: 1) AJAX request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type=\"application/json\"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly.",
				"creator": "graingert",
				"date": "2018-01-11T15:26:13.540Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-01-16T15:28:26.240Z",
			"editor": "graingert",
			"key": "testcase",
			"value": {
				"value": "Show some code, but don't paste it on the channel. Sites like http://gist.github.com/ and http://bpaste.net/ are cool. You can also use http://jsbin.com , http://requirebin.com or http://jsfiddle.net/ to provide a test case we can run and help you with your problem.",
				"popularity": 118,
				"editors": [
					"MJCD",
					"totemizer",
					"ashnur"
				]
			}
		},
		{
			"date": "2018-01-25T07:08:33.008Z",
			"editor": "ljharb",
			"key": "this2",
			"value": {
				"value": ".. within 'bound' foundctions/methods  'this' refers to some object instance (following evtl. objects in prototype chain). methods shareds amond objects/instances of some class, are typically put on the prototype object while using 'this' to refer to some particular instance state. *pause here.. reread last sentence*  Person.prototype = { birthdate: [Date], age() { return Date.now().year - this.birthdate.year",
				"creator": "GreenJello",
				"date": "2017-10-21T01:45:37.212Z",
				"popularity": 1,
				"editors": [
					"earendel2"
				],
				"changes": [
					{
						"date": "2018-01-16T07:46:17.662Z",
						"editor": "earendel2",
						"old-value": "When a function is called, the value to the left of the dot becomes `this` inside the function. When you access the method property but don't call it, it's up to the caller to decide the `this` value. It likely doesn't have a reference to your desired receiver. e.g. setTimeout(foo.method) will call the function with no `this` value, which becomes `window` in non-strict mode.",
						"new-value": ".. within 'bound' foundctions/methods  'this' refers to some object instance (following evtl. objects in prototype chain). methods shareds amond objects/instances of some class, are typically put on the prototype object while using 'this' to refer to some particular instance state. *pause here.. reread last sentence*  Person.prototype = { birthdate: [Date], age() { return Date.now().year - this.birthdate.year"
					}
				]
			}
		},
		{
			"date": "2018-02-01T02:47:59.616Z",
			"editor": "graingert",
			"key": "ts",
			"value": {
				"value": "TS Playground - www.typescriptlang.org/play/ | learn - http://definitelytyped.org/directory/learn.html | typescript + knockout - https://www.typescriptlang.org/docs/handbook/knockout.html | typing repository - https://github.com/DefinitelyTyped/DefinitelyTyped & typing search - https://github.com/typings/typings | tags: types typed tsc ko tutorial ..nJoy",
				"creator": "cake`",
				"date": "2016-08-02T02:41:07.142Z",
				"popularity": 10,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-03-07T17:16:24.416Z",
			"editor": "`slikts",
			"key": "jsperf benchmark",
			"value": {
				"value": "JS engine optimizations are too complex for naive benchmarking; see https://youtu.be/g0ek4vV7nEA",
				"creator": "`slikts",
				"date": "2018-03-07T17:16:01.245Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-03-07T17:16:42.401Z",
			"editor": "`slikts",
			"key": "[jsperf] benchmark",
			"value": {
				"value": "JS engine optimizations are too complex for naive benchmarking; see https://youtu.be/g0ek4vV7nEA",
				"creator": "`slikts",
				"date": "2018-03-07T17:16:34.808Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-03-07T17:17:42.629Z",
			"editor": "`slikts",
			"key": "str_repeat",
			"value": {
				"value": "|> function str_repeat(n) { var undef, str = []; if (n < 0) { return this; } for (var i = 0; i < n; ++i) { str.push(undef); } return str.join(this); }; /* http://jsperf.com/jsstringrepeat/2 */",
				"creator": "ljharb",
				"date": "2017-08-01T07:45:26.024Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-03-14T15:53:42.823Z",
			"editor": "MJCD",
			"key": "standard",
			"value": {
				"value": "One of many style guides for JavaScript. Prefer airbnb though",
				"creator": "Havvy",
				"date": "2017-04-11T12:44:54.106Z",
				"popularity": 3,
				"editors": [
					"qswz"
				],
				"changes": [
					{
						"date": "2018-03-14T15:53:25.186Z",
						"editor": "qswz",
						"old-value": "One of many style guides for JavaScript.",
						"new-value": "One of many style guides for JavaScript. Prefer airbnb though"
					}
				]
			}
		},
		{
			"date": "2018-04-28T01:20:28.383Z",
			"editor": "ljharb",
			"key": "troll",
			"value": {
				"value": "you are a troll",
				"creator": "graingert",
				"date": "2018-02-23T21:42:06.777Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-04-28T01:22:10.195Z",
			"editor": "ljharb",
			"key": "react-163",
			"value": {
				"value": "Learn about the new APIs and changes in React 16.3.0",
				"creator": "GreenJello",
				"date": "2018-04-03T23:01:48.372Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-04-28T01:36:50.115Z",
			"editor": "ljharb",
			"key": "bookmarklet generator",
			"value": {
				"value": "t4gs: bookmarklet generator demo tools | create bookmarklets with requirejs | https://runkit.io/hagb4rd/bookmarklets/branches/master",
				"creator": "earendel",
				"date": "2018-04-05T02:28:14.749Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-04-28T01:45:37.949Z",
			"editor": "ljharb",
			"key": "=> { return",
			"value": {
				"value": "this is stupid",
				"creator": "qswz",
				"date": "2018-04-21T01:06:44.936Z",
				"popularity": 3,
				"editors": [
					"qswz"
				],
				"changes": [
					{
						"date": "2018-04-21T01:07:41.773Z",
						"editor": "qswz",
						"old-value": "is stupid",
						"new-value": "thid is stupid"
					},
					{
						"date": "2018-04-21T01:07:46.711Z",
						"editor": "qswz",
						"old-value": "thid is stupid",
						"new-value": "this is stupid"
					}
				]
			}
		},
		{
			"date": "2018-05-02T18:06:18.927Z",
			"editor": "MJCD",
			"key": "bookmarklet",
			"value": {
				"value": "Bookmarklet Creator & Editor App | use require.js to load your favorite scripts to any page with a single click for prototype-developement or fun | simply drag the generated link to your bookmarks toolbar | http://marklet.herokuapp.com",
				"creator": "yansanmo",
				"date": "2014-11-26T17:40:41.528Z",
				"popularity": 2,
				"editors": [
					"therealklanni",
					"BallsyDulphins"
				],
				"changes": [
					{
						"date": "2014-11-26T17:44:18.547Z",
						"editor": "therealklanni",
						"old-value": "bookmarklet is liek a javascript bookmark -- Rainb",
						"new-value": "A bookmark that execute arbitrary snippets of JavaScript on the currently loaded page. Often used to programmatically send information about the site to other services (e.g. Bookmark Aggregators)."
					},
					{
						"date": "2018-05-02T18:04:45.510Z",
						"editor": "BallsyDulphins",
						"old-value": "A bookmark that execute arbitrary snippets of JavaScript on the currently loaded page. Often used to programmatically send information about the site to other services (e.g. Bookmark Aggregators).",
						"new-value": "Bookmarklet Creator & Editor App | use require.js to load your favorite scripts to any page with a single click for prototype-developement or fun | simply drag the generated link to your bookmarks toolbar | http://marklet.herokuapp.com"
					}
				]
			}
		},
		{
			"date": "2018-05-03T20:54:44.283Z",
			"editor": "ljharb",
			"key": "async",
			"value": {
				"value": "Something not as horrible as the other async factoid now this keyword exists: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
				"creator": "MJCD",
				"date": "2017-09-13T17:18:01.480Z",
				"popularity": 16,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-06-25T10:31:24.067Z",
			"editor": "ljharb",
			"key": "show",
			"value": {
				"value": "show something, preferably code",
				"creator": "qswz",
				"date": "2018-06-18T16:09:39.009Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-07-20T21:10:45.929Z",
			"editor": "qswz",
			"key": "axios",
			"value": {
				"value": "You might not need it https://gist.github.com/caub/c3aad9c14ba5379b142714bb1a652476",
				"creator": "qswz",
				"date": "2018-05-07T16:39:24.264Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-07-23T21:48:10.345Z",
			"editor": "ljharb",
			"key": "iife parens",
			"value": {
				"alias": "dog balls",
				"creator": "ljharb",
				"date": "2016-08-03T04:27:52.753Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-08-23T02:10:00.409Z",
			"editor": "ljharb",
			"key": "commonjs",
			"value": {
				"value": "the module system used by node https://nodejs.org/api/modules.html",
				"creator": "graingert",
				"date": "2018-08-23T02:06:54.945Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-01T19:17:50.153Z",
			"editor": "ljharb",
			"key": "factoids",
			"value": {
				"value": "see !usage for how to edit factoids. a big JSON dump of all currently(?) known factoids can be found at: http://boshi.inimino.org/ecmabot-factoids.json",
				"creator": "Sven_vB",
				"date": "2018-08-31T00:48:52.098Z",
				"popularity": 3,
				"editors": [
					"Sven_vB"
				],
				"changes": [
					{
						"date": "2018-08-31T00:50:00.957Z",
						"editor": "Sven_vB",
						"old-value": "see !usage for how to edit them. a big JSON dump of all currently(?) known factoids can be found at: http://boshi.inimino.org/ecmabot-factoids.json",
						"new-value": "see !usage for how to edit factoids. a big JSON dump of all currently(?) known factoids can be found at: http://boshi.inimino.org/ecmabot-factoids.json",
						"regex": "s/them/factoids/"
					}
				]
			}
		},
		{
			"date": "2018-09-01T19:17:58.807Z",
			"editor": "ljharb",
			"key": "facts",
			"value": {
				"alias": "factoids",
				"creator": "Sven_vB",
				"date": "2018-08-31T00:50:20.922Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-01T19:19:07.895Z",
			"editor": "ljharb",
			"key": "quote sinclair",
			"value": {
				"value": "<sinclair> i don't buy into any of it, and even if there was a problem, i suspect its highly over exaggerated, and I just don't want to deal with it, unless its addressed with statistics, hard science, and with the level of critique that scientific research of given to justify there is a reason to act.",
				"creator": "MJCD",
				"date": "2018-08-26T13:15:30.468Z",
				"popularity": 4,
				"editors": [
					"MJCD"
				],
				"changes": [
					{
						"date": "2018-08-26T13:15:43.615Z",
						"editor": "MJCD",
						"old-value": "sinclair> i don't buy into any of it, and even if there was a problem, i suspect its highly over exaggerated, and I just don't want to deal with it, unless its addressed with statistics, hard science, and with the level of critique that scientific research of given to justify there is a reason to act.",
						"new-value": "<sinclair> i don't buy into any of it, and even if there was a problem, i suspect its highly over exaggerated, and I just don't want to deal with it, unless its addressed with statistics, hard science, and with the level of critique that scientific research of given to justify there is a reason to act."
					}
				]
			}
		},
		{
			"date": "2018-09-02T00:47:15.671Z",
			"editor": "qswz",
			"key": "drug",
			"value": {
				"value": "something disabling your neurons",
				"creator": "qswz",
				"date": "2018-09-02T00:46:07.715Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-08T19:24:12.367Z",
			"editor": "ljharb",
			"key": "drugs",
			"value": {
				"value": "A drug is any substance (other than food that provides nutritional support) that, when inhaled, injected, smoked, consumed, absorbed via a patch on the skin, or dissolved under the tongue causes a temporary physiological (and often psychological) change in the body. See also !topic",
				"creator": "graingert",
				"date": "2018-09-02T00:02:41.051Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-12T00:51:29.452Z",
			"editor": "ljharb",
			"key": "trophy",
			"value": {
				"value": "!🏆",
				"creator": "wedr",
				"date": "2018-09-12T00:38:43.987Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-12T00:55:18.958Z",
			"editor": "qswz",
			"key": "[alias] w@",
			"value": {
				"value": "wayttd",
				"creator": "qswz",
				"date": "2018-09-12T00:54:55.870Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-12T01:33:19.133Z",
			"editor": "ljharb",
			"key": "useless",
			"value": {
				"value": "This is useless!",
				"creator": "wedr",
				"date": "2018-09-11T23:16:10.079Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-12T01:33:26.208Z",
			"editor": "ljharb",
			"key": "wayttd",
			"value": {
				"value": "What are you trying to do?",
				"creator": "qswz",
				"date": "2018-09-11T23:13:00.297Z",
				"popularity": 3,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-12T01:33:32.922Z",
			"editor": "ljharb",
			"key": "w@",
			"value": {
				"alias": "wayttd",
				"creator": "sillyslux",
				"date": "2018-09-12T00:56:00.325Z",
				"popularity": 3,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-12T01:34:02.822Z",
			"editor": "ljharb",
			"key": "🏆",
			"value": {
				"value": "ACHIEVEMENT GET!!",
				"creator": "wedr",
				"date": "2018-09-11T23:20:45.943Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-12T01:34:10.934Z",
			"editor": "ljharb",
			"key": "vague",
			"value": {
				"value": "unsurprisingly a vague question get vague answers",
				"creator": "qswz",
				"date": "2018-09-10T00:41:19.517Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-12T01:38:32.640Z",
			"editor": "ljharb",
			"key": "quote mjcd policy",
			"value": {
				"value": "<MJCD> Company policy prohibits me stating anything not directly related to JavaScript. But your greeting is well met and a good day to you too sir",
				"creator": "MJCD",
				"date": "2018-09-06T18:15:27.524Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-20T00:35:31.975Z",
			"editor": "ljharb",
			"key": "w",
			"value": {
				"value": "What are you trying to do?",
				"creator": "qswz",
				"date": "2018-09-17T13:29:49.803Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-21T19:00:53.142Z",
			"editor": "MJCD",
			"key": "splitat",
			"value": {
				"value": "function (array, splitter) { return array.split(splitter).slice(1).join(splitter); }",
				"creator": "Havvy",
				"date": "2015-05-18T05:56:53.468Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-09-25T20:20:24.550Z",
			"editor": "qswz",
			"key": "fetchy",
			"value": {
				"value": "https://gist.github.com/caub/32952abb755ca84738507f1abd14f72b",
				"creator": "qswz",
				"date": "2018-09-25T20:09:51.051Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-10-04T17:42:39.430Z",
			"editor": "graingert",
			"key": "javascript in the browser and node.js doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). const sleep",
			"value": {
				"value": "util.promisify(setTimeout); Or const sleep = t => new Promise(r => setTimeout(r, t); Then use await sleep(400);",
				"creator": "graingert",
				"date": "2018-10-04T17:41:44.042Z",
				"popularity": 0,
				"editors": [
					"graingert"
				],
				"changes": [
					{
						"date": "2018-10-04T17:42:19.666Z",
						"editor": "graingert",
						"old-value": "util.promisify(setTimeout). Or const sleep = t => new Promise(r => setTimeout(r, t); Then use await sleep(400);",
						"new-value": "util.promisify(setTimeout); Or const sleep = t => new Promise(r => setTimeout(r, t); Then use await sleep(400);"
					}
				]
			}
		},
		{
			"date": "2018-10-04T17:48:01.345Z",
			"editor": "graingert",
			"key": "hamster",
			"value": {
				"value": "Java is to Javascript like ham is to hamster.",
				"popularity": 7,
				"creator": "ljharb",
				"editors": []
			}
		},
		{
			"date": "2018-10-04T17:52:42.543Z",
			"editor": "grr12314",
			"key": "pain",
			"value": {
				"alias": "java",
				"creator": "ljharb",
				"date": "2014-09-29T04:54:12.979Z",
				"popularity": 7,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-10-15T23:37:43.121Z",
			"editor": "qswz",
			"key": "=>{return",
			"value": {
				"value": "Just => ..",
				"creator": "qswz",
				"date": "2018-09-15T23:56:51.608Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-10-15T23:41:28.077Z",
			"editor": "qswz",
			"key": "=>{return x",
			"value": {
				"value": "=>{return x is a stupid version of => x",
				"creator": "qswz",
				"date": "2018-10-15T23:38:17.457Z",
				"popularity": 1,
				"editors": [
					"qswz"
				],
				"changes": [
					{
						"date": "2018-10-15T23:40:01.386Z",
						"editor": "qswz",
						"old-value": "=> x",
						"new-value": "=>{return x is a stupid version of => x"
					}
				]
			}
		},
		{
			"date": "2018-10-16T11:23:24.924Z",
			"editor": "ljharb",
			"key": "good morning",
			"value": {
				"value": "shh i'm trying to sleep",
				"creator": "devsnek",
				"date": "2018-10-01T19:43:08.944Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-10-16T11:23:30.471Z",
			"editor": "ljharb",
			"key": "!learn",
			"value": {
				"value": "BLAH",
				"creator": "notchris",
				"date": "2018-10-01T19:44:52.489Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-10-16T11:23:34.164Z",
			"editor": "ljharb",
			"key": "die",
			"value": {
				"value": "um{escape-r}QUIT rip",
				"creator": "Kirjava",
				"date": "2018-10-01T19:44:57.974Z",
				"popularity": 1,
				"editors": [
					"Kirjava"
				],
				"changes": [
					{
						"date": "2018-10-01T19:45:21.435Z",
						"editor": "Kirjava",
						"old-value": "um\\n\\rQUIT rip",
						"new-value": "um{escape-r}QUIT rip"
					}
				]
			}
		},
		{
			"date": "2018-10-16T11:23:43.025Z",
			"editor": "ljharb",
			"key": "qwertyuiop",
			"value": {
				"value": "The top row of alphabetical keys on a typical keyboard.",
				"creator": "Cyp_",
				"date": "2018-10-04T17:44:23.889Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-10-16T11:23:53.352Z",
			"editor": "ljharb",
			"key": "pain",
			"value": {
				"value": "Somtimes you must hurt in order to know, fall in order to grow, lose in order to gain, because life’s greatest lessons are learnt through pain.",
				"creator": "grr12314",
				"date": "2018-10-04T17:52:50.379Z",
				"popularity": 4,
				"editors": [
					"grr12314"
				],
				"changes": [
					{
						"date": "2018-10-04T17:56:10.391Z",
						"editor": "grr12314",
						"old-value": "Somtimes you must hurt in order to know, fall in order to grow, lose in order to gain, because life’s greatest lessons are learnt through pain",
						"new-value": "Somtimes you must hurt in order to know, fall in order to grow, lose in order to gain, because life’s greatest lessons are learnt through pain."
					}
				]
			}
		},
		{
			"date": "2018-10-16T11:24:17.093Z",
			"editor": "ljharb",
			"key": "salute",
			"value": {
				"value": "https://youtu.be/jRx5PrAlUdY?t=74",
				"creator": "qswz",
				"date": "2018-10-10T20:05:47.267Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-10-18T20:28:01.666Z",
			"editor": "MJCD",
			"key": "var",
			"value": {
				"value": "`var` defines a variable in the current function-level scope. Always use `const`, `let`, or `var` to declare variables, otherwise you will pollute the global scope, and declaring variables is required in strict mode.",
				"popularity": 114,
				"editors": [
					"j201",
					"AAA_awright",
					"ljharb"
				],
				"changes": [
					{
						"date": "2015-12-11T04:41:45.183Z",
						"editor": "AAA_awright",
						"old-value": "Always declare variables with `var`, or you will pollute the global scope. Using `var` will limit access to that variable to the current scope, whatever it is.",
						"new-value": "`var` defines a variable in the current function-level scope. Always use `var` to declare variables, otherwise you will pollute the global scope, and declaring variables is required in strict mode."
					},
					{
						"date": "2016-03-02T14:52:45.614Z",
						"editor": "ljharb",
						"old-value": "`var` defines a variable in the current function-level scope. Always use `var` to declare variables, otherwise you will pollute the global scope, and declaring variables is required in strict mode.",
						"new-value": "`var` defines a variable in the current function-level scope. Always use `const`, `let`, or `var` to declare variables, otherwise you will pollute the global scope, and declaring variables is required in strict mode."
					}
				]
			}
		},
		{
			"date": "2018-10-19T23:16:36.169Z",
			"editor": "MJCD",
			"key": "pick",
			"value": {
				"value": "4",
				"creator": "qswz",
				"date": "2018-10-19T23:16:29.275Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-10-19T23:37:07.428Z",
			"editor": "ljharb",
			"key": "quote mjcd",
			"value": {
				"value": "<MJCD> \"because we all wear masks, hero or villain\" <evulish> what about dr xavier",
				"creator": "MJCD",
				"date": "2018-10-19T20:23:08.237Z",
				"popularity": 1,
				"editors": [
					"MJCD"
				],
				"changes": [
					{
						"date": "2018-10-19T20:23:26.845Z",
						"editor": "MJCD",
						"old-value": "<MJCD> \"because we all wear masks, hero or villain\"",
						"new-value": "<MJCD> \"because we all wear masks, hero or villain\" <evulish> what about dr xavier"
					}
				]
			}
		},
		{
			"date": "2018-10-20T00:07:09.410Z",
			"editor": "MJCD",
			"key": "js",
			"value": {
				"value": "did you mean: recursive acronym for JavaScript is not Java.",
				"popularity": 31
			}
		},
		{
			"date": "2018-10-20T00:53:51.773Z",
			"editor": "MJCD",
			"key": "jsfiddle",
			"value": {
				"alias": "code",
				"popularity": 89
			}
		},
		{
			"date": "2018-10-20T01:05:13.093Z",
			"editor": "MJCD",
			"key": "abuse",
			"value": {
				"alias": "botabuse",
				"popularity": 53
			}
		},
		{
			"date": "2018-10-20T01:27:24.031Z",
			"editor": "MJCD",
			"key": "other channels",
			"value": {
				"value": "languages",
				"creator": "MJCD",
				"date": "2018-10-20T01:26:49.973Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-10-26T16:09:53.648Z",
			"editor": "qswz",
			"key": "new date().gettime",
			"value": {
				"value": "pls use Date.parse",
				"creator": "qswz",
				"date": "2018-10-26T16:08:55.568Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-11-10T16:20:04.998Z",
			"editor": "sillyslux",
			"key": "testoid",
			"value": {
				"value": "soon to be deleted",
				"creator": "sillyslux",
				"date": "2018-11-10T16:19:59.405Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-11-23T19:25:45.517Z",
			"editor": "graingert",
			"key": "no var",
			"value": {
				"value": "Never use var - except when doing code-gen for IE11. See also !var",
				"creator": "graingert",
				"date": "2018-11-17T18:52:33.503Z",
				"popularity": 9,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-12-03T11:10:03.998Z",
			"editor": "ljharb",
			"key": "globalthis",
			"value": {
				"alias": "semicolons",
				"creator": "globalThis",
				"date": "2018-11-20T20:24:36.427Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-12-03T11:10:31.460Z",
			"editor": "ljharb",
			"key": "1cfo",
			"value": {
				"value": "First Class Function Object",
				"creator": "stennowork",
				"date": "2018-11-27T16:22:30.271Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2018-12-03T11:10:50.391Z",
			"editor": "ljharb",
			"key": "yahoo",
			"value": {
				"value": "https://github.com/yahoo/serialize-javascript#deserializing",
				"creator": "devsnek",
				"date": "2018-11-28T08:28:32.377Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-01-05T15:46:04.041Z",
			"editor": "MJCD",
			"key": "reverse proxies",
			"value": {
				"value": "reverse proxy",
				"creator": "MJCD",
				"date": "2019-01-05T15:45:42.479Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-01-23T14:57:34.220Z",
			"editor": "MJCD",
			"key": "x",
			"value": {
				"value": "use x",
				"creator": "MJCD",
				"date": "2019-01-23T14:56:47.994Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-01-23T14:59:01.587Z",
			"editor": "Agamemnus",
			"key": "use x",
			"value": {
				"value": "Always use \"x\" where possible, save yourself the overhead of maintaining as much code as you can",
				"creator": "MJCD",
				"date": "2019-01-23T14:56:43.108Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-01-28T12:38:00.765Z",
			"editor": "MJCD",
			"key": "classes",
			"value": {
				"value": "Class hierarchies? Don't do that! http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)",
				"popularity": 285,
				"creator": "flebron",
				"editors": [
					"Benvie",
					"ljharb"
				],
				"changes": [
					{
						"date": "2014-04-06T06:45:08.193Z",
						"editor": "ljharb",
						"old-value": "JavaScript does not have class-based inheritance. Instead, it has constructor functions which initialize newly created objects that are linked to the constructor's prototype. These instances point to the prototype and use it for fallback property lookup.",
						"new-value": "Class hierarchies? Don't do that! http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)"
					},
					{
						"date": "2014-04-06T06:45:27.481Z",
						"editor": "ljharb",
						"old-value": "Class hierarchies? Don't do that! http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)",
						"new-value": "JavaScript does not have class-based inheritance. Instead, it has constructor functions which initialize newly created objects that are linked to the constructor's prototype. These instances point to the prototype and use it for fallback property lookup."
					},
					{
						"date": "2014-04-06T06:46:07.889Z",
						"editor": "ljharb",
						"old-value": "JavaScript does not have class-based inheritance. Instead, it has constructor functions which initialize newly created objects that are linked to the constructor's prototype. These instances point to the prototype and use it for fallback property lookup.",
						"new-value": "Class hierarchies? Don't do that! http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)"
					},
					{
						"date": "2016-04-25T00:31:52.850Z",
						"editor": "ljharb",
						"old-value": "Class hierarchies? Don't do that! http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)",
						"new-value": "Class hierarchies? Don't do that! https://web.archive.org/web/20160304024849/http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)"
					},
					{
						"date": "2016-04-25T03:53:03.776Z",
						"editor": "ljharb",
						"old-value": "Class hierarchies? Don't do that! https://web.archive.org/web/20160304024849/http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)",
						"new-value": "Class hierarchies? Don't do that! http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)"
					}
				]
			}
		},
		{
			"date": "2019-01-29T00:19:52.714Z",
			"editor": "ljharb",
			"key": "society",
			"value": {
				"value": "<george costanza> YOU KNOW WE LIVE IN A SOCIETY!!",
				"creator": "MJCD",
				"date": "2018-01-27T11:47:09.673Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-01-29T00:20:13.439Z",
			"editor": "ljharb",
			"key": "map",
			"value": {
				"value": "90% of the time, the answer is to use Maps",
				"creator": "qswz",
				"date": "2018-01-30T19:43:39.319Z",
				"popularity": 6,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-01-29T00:20:50.767Z",
			"editor": "ljharb",
			"key": "build step",
			"value": {
				"value": "you always need a build step",
				"creator": "graingert",
				"date": "2018-01-14T20:12:17.036Z",
				"popularity": 8,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-01-29T00:20:57.840Z",
			"editor": "ljharb",
			"key": "build",
			"value": {
				"alias": "build step",
				"creator": "graingert",
				"date": "2018-01-04T21:09:14.715Z",
				"popularity": 4,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-01-29T00:23:17.091Z",
			"editor": "ljharb",
			"key": "use x",
			"value": {
				"value": "Always use \"x\" where possible; save yourself the overhead of maintaining code as much as you can.",
				"creator": "Agamemnus",
				"date": "2019-01-23T14:59:22.367Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-01-29T00:23:18.569Z",
			"editor": "ljharb",
			"key": "x",
			"value": {
				"alias": "use x",
				"creator": "MJCD",
				"date": "2019-01-23T14:57:37.429Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-02-01T10:11:42.101Z",
			"editor": "ljharb",
			"key": "imt",
			"value": {
				"value": "I made this/author it. Feel free to ask for any specific advice, questions, or alternatives.",
				"creator": "MJCD",
				"date": "2019-01-30T22:34:22.698Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-02-01T10:11:46.566Z",
			"editor": "ljharb",
			"key": "i made this",
			"value": {
				"alias": "imt",
				"creator": "MJCD",
				"date": "2019-01-30T22:34:31.148Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-02-09T00:37:59.278Z",
			"editor": "graingert",
			"key": "slepp",
			"value": {
				"value": "JavaScript in the browser and Node.js doesn't have a sleep function -- as it's single threaded (if that makes no sense, ask). const sleep = util.promisify(setTimeout); Or const sleep = t => new Promise(r => setTimeout(r, t)); Then use await sleep(400);",
				"creator": "graingert",
				"date": "2019-02-09T00:37:30.070Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-02-17T10:56:18.342Z",
			"editor": "ljharb",
			"key": "kinda",
			"value": {
				"value": "\"If you KINDA want something, you'll KINDA get the results you want\" --PAE",
				"creator": "MJCD",
				"date": "2019-02-16T11:45:08.305Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-02-26T02:11:39.828Z",
			"editor": "ljharb",
			"key": "jesus",
			"value": {
				"alias": "books",
				"creator": "MJCD",
				"date": "2019-02-22T18:00:05.571Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-01T13:15:35.921Z",
			"editor": "niggler",
			"key": "show",
			"value": {
				"value": "Show some code",
				"creator": "qswz",
				"date": "2019-03-01T13:12:11.106Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-01T13:15:58.178Z",
			"editor": "niggler",
			"key": "showqswz",
			"value": {
				"alias": "show",
				"creator": "niggler",
				"date": "2019-03-01T13:14:14.318Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-07T13:33:10.804Z",
			"editor": "ljharb",
			"key": "wix",
			"value": {
				"value": "Wix is shit. Don't use wix. I could go into the details but I really don't feel like it at the moment.",
				"creator": "MJCD",
				"date": "2018-05-01T12:43:42.098Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-07T13:35:59.391Z",
			"editor": "ljharb",
			"key": "java scripts",
			"value": {
				"value": "lol did you perhaps mean to ask that in ##java ?",
				"creator": "MJCD",
				"date": "2017-08-02T13:24:54.491Z",
				"popularity": 5,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-07T13:36:08.035Z",
			"editor": "ljharb",
			"key": "haskell",
			"value": {
				"value": "Haskell makes you better at typing.",
				"creator": "Maxdamantus",
				"date": "2017-08-03T11:22:41.149Z",
				"popularity": 6,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-07T13:36:18.081Z",
			"editor": "ljharb",
			"key": "0383191f-2d4a-4288-b1b7-afbe04c1645e",
			"value": {
				"value": "(╯°□°）╯︵ ┻━┻",
				"creator": "GreenJello",
				"date": "2017-08-03T11:24:24.769Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-18T01:42:53.921Z",
			"editor": "ljharb",
			"key": "arrays start at",
			"value": {
				"value": "0",
				"creator": "MJCD",
				"date": "2019-03-01T15:57:43.030Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-18T01:42:59.505Z",
			"editor": "ljharb",
			"key": "pitchfork",
			"value": {
				"value": "Extra! Extra! Grab yer pitchforks!",
				"creator": "wedr",
				"date": "2019-03-05T00:21:58.859Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-18T01:43:06.084Z",
			"editor": "ljharb",
			"key": "selenium",
			"value": {
				"value": "Don't use selenium - unless you hate yourself",
				"creator": "MJCD",
				"date": "2019-03-11T19:00:59.337Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-18T01:43:13.027Z",
			"editor": "ljharb",
			"key": "udp",
			"value": {
				"value": "<storkme> \"I'd tell you a joke about UDP, but you probably wouldn't get it\"",
				"creator": "MJCD",
				"date": "2019-03-11T20:58:26.846Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-21T23:41:28.548Z",
			"editor": "MJCD",
			"key": "learned",
			"value": {
				"value": "See what I have learned here: https://github.com/brigand/jellobot/blob/master/src/plugins/factoids/facts.json",
				"creator": "wedr",
				"date": "2019-03-21T23:40:32.346Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-21T23:42:56.499Z",
			"editor": "MJCD",
			"key": "learned",
			"value": {
				"value": "See what I have learned here: https://github.com/brigand/jellobot/blob/master/src/plugins/factoids/facts.json",
				"creator": "DeltaHeavy",
				"date": "2019-03-21T23:42:43.559Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-03-21T23:53:55.702Z",
			"editor": "ljharb",
			"key": "npx",
			"value": {
				"value": "Node Package Executor – https://blog.npmjs.org/post/162869356040/introducing-npx-an-npm-package-runner",
				"creator": "MJCD",
				"date": "2019-03-21T22:42:27.167Z",
				"popularity": 1,
				"editors": [
					"DeltaHeavy"
				],
				"changes": [
					{
						"date": "2019-03-21T23:06:34.497Z",
						"editor": "DeltaHeavy",
						"old-value": "Kind of a useless tool included with newer node installs to little to no benefit. Avoid if at all possible...",
						"new-value": "Node Package Executor – https://blog.npmjs.org/post/162869356040/introducing-npx-an-npm-package-runner"
					}
				]
			}
		},
		{
			"date": "2019-04-01T21:17:04.787Z",
			"editor": "ljharb",
			"key": "cheer up",
			"value": {
				"value": "<DnzAtWrk> typecast that frown upside down",
				"creator": "MJCD",
				"date": "2019-04-01T12:12:58.004Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-04-01T21:17:16.439Z",
			"editor": "ljharb",
			"key": "not js",
			"value": {
				"value": "While it can be useful to borrow syntax and examples from other languages - JS has it's own methodologies that are the way that they are. Just because you do not like the built in syntax in favour of the other language or otherwise is totally asinine",
				"creator": "MJCD",
				"date": "2019-03-30T23:08:34.658Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-04-01T21:18:18.047Z",
			"editor": "ljharb",
			"key": "learned",
			"value": {
				"value": "See what I have learned here: https://github.com/brigand/jellobot/blob/master/src/plugins/factoids/facts.json",
				"creator": "DeltaHeavy",
				"date": "2019-03-21T23:43:36.684Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-04-05T17:35:40.350Z",
			"editor": "MJCD",
			"key": "snip array.max",
			"value": {
				"value": "|> const max=(i)=>Math.max.apply(0, i); max([5,7,8]);",
				"creator": "MJCD",
				"date": "2019-04-05T17:34:49.450Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-04-07T19:56:47.906Z",
			"editor": "MJCD",
			"key": "rtfm",
			"value": {
				"value": "This is a problem you should be able to solve yourself with research. For javascript documentation, see: !mdn 'foo' and !ecma 'foo'",
				"popularity": 34,
				"editors": [
					"inimino"
				]
			}
		},
		{
			"date": "2019-04-08T11:49:39.380Z",
			"editor": "ljharb",
			"key": "snip arraymax",
			"value": {
				"value": "const arrayMax=(i)=>Math.max.apply(0, i); arrayMax([5,7,8]);",
				"creator": "MJCD",
				"date": "2019-04-05T17:36:16.593Z",
				"popularity": 2,
				"editors": [
					"MJCD"
				],
				"changes": [
					{
						"date": "2019-04-05T17:37:27.908Z",
						"editor": "MJCD",
						"old-value": "|> const max=(i)=>Math.max.apply(0, i); max([5,7,8]);",
						"new-value": "|>const arrayMax=(i)=>Math.max.apply(0, i); max([5,7,8]);"
					},
					{
						"date": "2019-04-05T17:37:55.064Z",
						"editor": "MJCD",
						"old-value": "|>const arrayMax=(i)=>Math.max.apply(0, i); max([5,7,8]);",
						"new-value": "n>const arrayMax=(i)=>Math.max.apply(0, i); max([5,7,8]);"
					},
					{
						"date": "2019-04-05T17:38:22.668Z",
						"editor": "MJCD",
						"old-value": "n>const arrayMax=(i)=>Math.max.apply(0, i); max([5,7,8]);",
						"new-value": "const arrayMax=(i)=>Math.max.apply(0, i); max([5,7,8]);"
					},
					{
						"date": "2019-04-05T17:45:50.661Z",
						"editor": "MJCD",
						"old-value": "const arrayMax=(i)=>Math.max.apply(0, i); max([5,7,8]);",
						"new-value": "const arrayMax=(i)=>Math.max.apply(0, i); arrayMax([5,7,8]);"
					}
				]
			}
		},
		{
			"date": "2019-04-08T11:50:06.472Z",
			"editor": "ljharb",
			"key": "yes var",
			"value": {
				"alias": "var",
				"creator": "",
				"date": "2019-04-07T20:26:46.727Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-05-29T20:59:01.850Z",
			"editor": "ljharb",
			"key": "mjcd",
			"value": {
				"value": "MJCD has untreated ADHD - please be patient if you find (my) conversational style difficult to deal with. [I hear you; Can I PLEASE have some ADHD meds? Like, PLEASE?]",
				"creator": "MJCD",
				"date": "2019-05-29T14:27:31.770Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-05-29T20:59:11.294Z",
			"editor": "ljharb",
			"key": "social",
			"value": {
				"value": "=> #web-social -> autojoin enabled",
				"creator": "MJCD",
				"date": "2019-05-29T14:23:29.162Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-05-30T00:45:45.880Z",
			"editor": "ljharb",
			"key": "friend",
			"value": {
				"value": "I'm your friend!",
				"creator": "qswz",
				"date": "2019-05-25T00:52:49.058Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-05-30T00:46:48.878Z",
			"editor": "ljharb",
			"key": "hughfdjackson",
			"value": {
				"value": "\"https://github.com/hughfdjackson\"",
				"popularity": 1
			}
		},
		{
			"date": "2019-06-26T00:52:02.372Z",
			"editor": "qswz",
			"key": "jsconfreact-hooks",
			"value": {
				"value": "https://youtu.be/9jWwO7McMbU?t=9912",
				"creator": "qswz",
				"date": "2019-06-26T00:51:35.536Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-07-30T02:26:28.253Z",
			"editor": "ljharb",
			"key": "batman",
			"value": {
				"value": "const curry = nana => batman => nana + ' ' + batman;  curry(Array.from({length: 16}).join('yay' -1))('Batman!')",
				"creator": "theskillwithin",
				"date": "2019-07-12T12:23:52.071Z",
				"popularity": 2,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-07-30T02:27:07.544Z",
			"editor": "ljharb",
			"key": "premop",
			"value": {
				"value": "premature optimization",
				"creator": "qswz",
				"date": "2019-07-12T17:53:42.158Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-08-02T13:50:12.835Z",
			"editor": "MJCD",
			"key": "delay2",
			"value": {
				"value": "(t, ...vs) => new Promise(r => setTimeout(r, t, ...vs)) or util.promisify(setTimeout)",
				"creator": "qswz",
				"date": "2017-09-15T01:15:52.542Z",
				"popularity": 20,
				"editors": [
					"qswz"
				],
				"changes": [
					{
						"date": "2018-08-02T01:15:13.962Z",
						"editor": "qswz",
						"old-value": "const delay = (x,t) => new Promise(r => setTimeout(r, t, x))",
						"new-value": "(t, ...a) => new Promise(r => setTimeout(r, t, ...a)) or util.promisify(setTimeout)"
					},
					{
						"date": "2018-09-15T21:36:03.010Z",
						"editor": "qswz",
						"old-value": "(t, ...a) => new Promise(r => setTimeout(r, t, ...a)) or util.promisify(setTimeout)",
						"new-value": "t => new Promise(r => setTimeout(r, t)) or t => ({then(r){setTimeout(r, t)}}) or util.promisify(setTimeout)"
					},
					{
						"date": "2019-02-14T01:52:58.104Z",
						"editor": "qswz",
						"old-value": "t => new Promise(r => setTimeout(r, t)) or t => ({then(r){setTimeout(r, t)}}) or util.promisify(setTimeout)",
						"new-value": "t => new Promise(r => setTimeout(r, t)) or util.promisify(setTimeout)"
					},
					{
						"date": "2019-08-02T13:49:24.767Z",
						"editor": "qswz",
						"old-value": "t => new Promise(r => setTimeout(r, t)) or util.promisify(setTimeout)",
						"new-value": "(t, ...vs) => new Promise(r => setTimeout(r, t, ...vs)) or util.promisify(setTimeout)"
					}
				]
			}
		},
		{
			"date": "2019-08-04T15:29:51.190Z",
			"editor": "MJCD_",
			"key": "snip batman",
			"value": {
				"value": "|>var sing = function() { Array(16).join('yay' -1) + ' Batman' }() //",
				"creator": "MJCD_",
				"date": "2019-08-04T15:26:28.136Z",
				"popularity": 4,
				"editors": [
					"MJCD_"
				],
				"changes": [
					{
						"date": "2019-08-04T15:27:14.601Z",
						"editor": "MJCD_",
						"old-value": "|>let sing=()=>Array(16).join('yay' -1) + ' Batman'",
						"new-value": "|>let sing=()=>Array(16).join('yay' -1) + ' Batman' //"
					},
					{
						"date": "2019-08-04T15:28:09.645Z",
						"editor": "MJCD_",
						"old-value": "|>let sing=()=>Array(16).join('yay' -1) + ' Batman' //",
						"new-value": "|>var sing = function() { Array(16).join('yay' -1) + ' Batman' } //"
					},
					{
						"date": "2019-08-04T15:29:19.907Z",
						"editor": "MJCD_",
						"old-value": "|>var sing = function() { Array(16).join('yay' -1) + ' Batman' } //",
						"new-value": "|>var sing = function() { Array(16).join('yay' -1) + ' Batman' }() //"
					}
				]
			}
		},
		{
			"date": "2019-08-18T10:37:08.224Z",
			"editor": "ljharb",
			"key": "ie11",
			"value": {
				"value": "All mainstream Windows users gained access to Edge on January 9th, 2018. All extended support ends October 14, 2025. https://web.archive.org/web/20180105110806/http://allyncs.com/docs/lifecyclesupport.html",
				"creator": "graingert",
				"date": "2018-01-05T16:08:50.100Z",
				"popularity": 24,
				"editors": [
					"graingert"
				],
				"changes": [
					{
						"date": "2018-01-05T16:24:00.422Z",
						"editor": "graingert",
						"old-value": "support ends October 14, 2025. https://web.archive.org/web/20180105110806/http://allyncs.com/docs/lifecyclesupport.html",
						"new-value": "All mainstream Windows users will have access to Edge on January 9th, 2018. All extended support ends October 14, 2025. https://web.archive.org/web/20180105110806/http://allyncs.com/docs/lifecyclesupport.html"
					},
					{
						"date": "2018-01-09T05:06:06.739Z",
						"editor": "graingert",
						"old-value": "All mainstream Windows users will have access to Edge on January 9th, 2018. All extended support ends October 14, 2025. https://web.archive.org/web/20180105110806/http://allyncs.com/docs/lifecyclesupport.html",
						"new-value": "All mainstream Windows users gained access to Edge on January 9th, 2018. All extended support ends October 14, 2025. https://web.archive.org/web/20180105110806/http://allyncs.com/docs/lifecyclesupport.html"
					}
				]
			}
		},
		{
			"date": "2019-08-18T10:39:26.438Z",
			"editor": "ljharb",
			"key": "ie11",
			"value": {
				"value": "All mainstream Windows users gained access to Edge on January 9th, 2018. All extended support ends October 14, 2025. https://web.archive.org/web/20180105110806/http://allyncs.com/docs/lifecyclesupport.html",
				"creator": "graingert",
				"date": "2019-08-18T10:37:58.322Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-08-18T10:40:03.026Z",
			"editor": "ljharb",
			"key": "ping everyone cool",
			"value": {
				"value": "`slikts boo(censored) cjohnson CoJaBo darkseid dka DnzAtWrk Donitzo dysfigured gde33 gk4tsev(censored) GreenJello grr12314 howdoi inimino joeytwiddle Kirjava knod 1jharb(censored) MACscr NoiseEee notchris SJr systemfault tcsc thykka zsocw",
				"creator": "MJCD",
				"date": "2019-08-02T14:34:39.723Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-08-21T16:25:10.245Z",
			"editor": "qswz",
			"key": "delay",
			"value": {
				"value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\". Most environments provide setTimeout and ES6 has Promises which are available natively in the latest Firefox, Chrome, io.js or usable via a library such as https://github.com/petkaantonov/bluebird. Also check out caolan/async. For more info: !timeout, !promises",
				"creator": "dwcook",
				"date": "2014-03-26T02:21:37.430Z",
				"popularity": 97,
				"editors": [
					"dwcook",
					"Havvy",
					"qswz"
				],
				"changes": [
					{
						"date": "2014-03-26T02:27:42.597Z",
						"editor": "dwcook",
						"old-value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\". This functionality may be provided in an environment-dependent way. For example, browser JS has setTimeout, which accepts a callback and a number of milliseconds and calls it after that amount of time. See http://jsfiddle.net/8Y5qe/ for an example. jQuery and many other libraries support promises, e.g. http://jsfiddle.net/4n9Gu/.  Also take a look at https://github.com/caolan/async h",
						"new-value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\". This functionality may be provided in an environment-dependent way, such as browser JS's setTimeout. See http://jsfiddle.net/8Y5qe/ for an example. jQuery and many other libraries support promises, e.g. http://jsfiddle.net/4n9Gu/.  Also take a look at https://github.com/caolan/async https://github.com/petkaantonov/bluebird https://github.com/kriskowal/q when you have a lot of callbac"
					},
					{
						"date": "2014-03-26T02:30:07.626Z",
						"editor": "dwcook",
						"old-value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\". This functionality may be provided in an environment-dependent way, such as browser JS's setTimeout. See http://jsfiddle.net/8Y5qe/ for an example. jQuery and many other libraries support promises, e.g. http://jsfiddle.net/4n9Gu/.  Also take a look at https://github.com/caolan/async https://github.com/petkaantonov/bluebird https://github.com/kriskowal/q when you have a lot of callbac",
						"new-value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\". This functionality may be provided by the environment, such as browser JS's setTimeout. E.g., http://jsfiddle.net/8Y5qe/ jQuery and many other libraries support promises, e.g. http://jsfiddle.net/4n9Gu/.  Also take a look at https://github.com/caolan/async https://github.com/petkaantonov/bluebird https://github.com/kriskowal/q when you have a lot of callbacks."
					},
					{
						"date": "2014-03-26T02:30:46.484Z",
						"editor": "dwcook",
						"old-value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\". This functionality may be provided by the environment, such as browser JS's setTimeout. E.g., http://jsfiddle.net/8Y5qe/ jQuery and many other libraries support promises, e.g. http://jsfiddle.net/4n9Gu/.  Also take a look at https://github.com/caolan/async https://github.com/petkaantonov/bluebird https://github.com/kriskowal/q when you have a lot of callbacks.",
						"new-value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\". This functionality may be provided by the environment, such as browser JS's setTimeout. E.g., http://jsfiddle.net/8Y5qe/. jQuery and many other libraries support promises, e.g. http://jsfiddle.net/4n9Gu/.  Also take a look at https://github.com/caolan/async https://github.com/petkaantonov/bluebird https://github.com/kriskowal/q when you have a lot of callbacks."
					},
					{
						"date": "2015-05-19T18:32:11.845Z",
						"editor": "Havvy",
						"old-value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\". This functionality may be provided by the environment, such as browser JS's setTimeout. E.g., http://jsfiddle.net/8Y5qe/. jQuery and many other libraries support promises, e.g. http://jsfiddle.net/4n9Gu/.  Also take a look at https://github.com/caolan/async https://github.com/petkaantonov/bluebird https://github.com/kriskowal/q when you have a lot of callbacks.",
						"new-value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\". Most environments provide setTimeout and ES6 has Promises which are available natively in the latest Firefox, Chrome, io.js or usable via a library such as https://github.com/petkaantonov/bluebird. Also check out caolan/async. For more info: !timeout, !promises"
					},
					{
						"date": "2018-08-02T01:13:31.733Z",
						"editor": "qswz",
						"old-value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\". Most environments provide setTimeout and ES6 has Promises which are available natively in the latest Firefox, Chrome, io.js or usable via a library such as https://github.com/petkaantonov/bluebird. Also check out caolan/async. For more info: !timeout, !promises",
						"new-value": "(t, ...a) => new Promise(r => setTimeout(r, t, ...a)) or util.promisify(setTimeout)"
					},
					{
						"date": "2018-08-02T01:14:43.344Z",
						"editor": "qswz",
						"old-value": "(t, ...a) => new Promise(r => setTimeout(r, t, ...a)) or util.promisify(setTimeout)",
						"new-value": "JavaScript doesn't have a concept of \"sleep\" or \"wait\". Most environments provide setTimeout and ES6 has Promises which are available natively in the latest Firefox, Chrome, io.js or usable via a library such as https://github.com/petkaantonov/bluebird. Also check out caolan/async. For more info: !timeout, !promises"
					}
				]
			}
		},
		{
			"date": "2019-08-29T18:29:31.398Z",
			"editor": "MJCD",
			"key": "learner",
			"value": {
				"value": "!learn",
				"creator": "MJCD",
				"date": "2019-08-29T18:27:09.051Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-09-03T00:24:44.743Z",
			"editor": "qswz",
			"key": "polyfill.io",
			"value": {
				"value": "This service is not recommended best practice over simply providing/bundling the polyfills required for the specified target standard. While easy to implement, you are relying on an external, free service with no responsibility to you, just to make your own site work. You might as well be using wix. For what it's worth you can investigate their service further at http://polyfill.io",
				"creator": "qswz",
				"date": "2018-08-10T23:58:39.984Z",
				"popularity": 27,
				"editors": [
					"qswz",
					"MJCD"
				],
				"changes": [
					{
						"date": "2018-11-05T17:53:49.248Z",
						"editor": "qswz",
						"old-value": "<script nomodule src=\"//polyfill.io\"></script>",
						"new-value": "<script nomodule src=\"//cdn.polyfill.io/v2/polyfill.min.js?features=default,URL,fetch\"></script>"
					},
					{
						"date": "2019-08-23T20:17:27.986Z",
						"editor": "MJCD",
						"old-value": "<script nomodule src=\"//cdn.polyfill.io/v2/polyfill.min.js?features=default,URL,fetch\"></script>",
						"new-value": "This service is not recommended best practice over simply providing/bundling the polyfills required for the specified target standard. While easy to implement, you are relying on an external, free service with no responsibility to you, just to make your own site work. You might as well be using wix. For what it's worth you can investigate their service further at http://polyfill.io"
					}
				]
			}
		},
		{
			"date": "2019-09-18T09:09:12.285Z",
			"editor": "MJCDawy",
			"key": "js sucks",
			"value": {
				"value": "JavaScript is a very powerful language and while it does have it's quirks - nearly every scripting language does if not simply inherently via their abstracted behaviors, often wrapping features/libs from the host language/system. Not everyone will agree on such things nor is it a requirement that YOU agree. We get told so frequently how much \"JS Sucks\" and honestly it just gets really old. If you are experiencing issues; describe",
				"creator": "MJCDawy",
				"date": "2019-09-18T09:04:01.153Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-09-21T16:51:21.109Z",
			"editor": "MJCD",
			"key": "sleep",
			"value": {
				"value": "Sleep in node: const sleep = require('util').promisify(setTimeout); Sleep in browser: const sleep = t => new Promise(r => setTimeout(r, t)); Blocking sleep can be performed with Atomics.wait()",
				"popularity": 74,
				"editors": [
					"Sorella",
					"graingert",
					"MJCD"
				],
				"changes": [
					{
						"date": "2014-10-30T18:36:25.507Z",
						"editor": "Sorella",
						"old-value": "JavaScript doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). Instead, use the setTimeout function. Example: `do_this(); window.setTimeout(do_this_in_after_at_least_2seconds, 2e3);`",
						"new-value": "JavaScript in the browser doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). Instead, use the setTimeout function. Example: `do_this(); window.setTimeout(do_this_in_after_at_least_2seconds, 2e3);`",
						"regex": "s/JavaScript/JavaScript in the browser/"
					},
					{
						"date": "2015-11-11T05:51:15.267Z",
						"editor": "Sorella",
						"old-value": "JavaScript in the browser doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). Instead, use the setTimeout function. Example: `do_this(); window.setTimeout(do_this_in_after_at_least_2seconds, 2e3);`",
						"new-value": "JavaScript in the browser and Node.js doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). Instead, use the setTimeout function. Example: `do_this(); window.setTimeout(do_this_in_after_at_least_2seconds, 2e3);`",
						"regex": "s/in the browser/in the browser and Node.js/"
					},
					{
						"date": "2015-11-11T05:52:01.655Z",
						"editor": "Sorella",
						"old-value": "JavaScript in the browser and Node.js doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). Instead, use the setTimeout function. Example: `do_this(); window.setTimeout(do_this_in_after_at_least_2seconds, 2e3);`",
						"new-value": "JavaScript in the browser and Node.js doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). Instead, use the setTimeout function. Example: `do_this(); setTimeout(do_this_in_after_at_least_2seconds, 2e3);`",
						"regex": "s/window\\.//"
					},
					{
						"date": "2018-10-04T17:42:27.158Z",
						"editor": "graingert",
						"old-value": "JavaScript in the browser and Node.js doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). Instead, use the setTimeout function. Example: `do_this(); setTimeout(do_this_in_after_at_least_2seconds, 2e3);`",
						"new-value": "JavaScript in the browser and Node.js doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). const sleep = util.promisify(setTimeout); Or const sleep = t => new Promise(r => setTimeout(r, t); Then use await sleep(400);"
					},
					{
						"date": "2018-10-04T17:43:19.783Z",
						"editor": "graingert",
						"old-value": "JavaScript in the browser and Node.js doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). const sleep = util.promisify(setTimeout); Or const sleep = t => new Promise(r => setTimeout(r, t); Then use await sleep(400);",
						"new-value": "JavaScript in the browser and Node.js doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). const sleep = util.promisify(setTimeout); Or const sleep = t => new Promise(r => setTimeout(r, t)); Then use await sleep(400);"
					},
					{
						"date": "2019-02-09T00:37:48.715Z",
						"editor": "graingert",
						"old-value": "JavaScript in the browser and Node.js doesn't have a sleep command -- as it's single threaded (if that makes no sense, ask). const sleep = util.promisify(setTimeout); Or const sleep = t => new Promise(r => setTimeout(r, t)); Then use await sleep(400);",
						"new-value": "JavaScript in the browser and Node.js doesn't have a sleep function -- as it's single threaded (if that makes no sense, ask). const sleep = util.promisify(setTimeout); Or const sleep = t => new Promise(r => setTimeout(r, t)); Then use await sleep(400);"
					},
					{
						"date": "2019-09-20T15:44:44.878Z",
						"editor": "MJCD",
						"old-value": "JavaScript in the browser and Node.js doesn't have a sleep function -- as it's single threaded (if that makes no sense, ask). const sleep = util.promisify(setTimeout); Or const sleep = t => new Promise(r => setTimeout(r, t)); Then use await sleep(400);",
						"new-value": "JavaScript in the browser and Node.js doesn't have a sleep function -- as it's single threaded (if that makes no sense, ask)."
					},
					{
						"date": "2019-09-21T16:47:16.450Z",
						"editor": "graingert",
						"old-value": "JavaScript in the browser and Node.js doesn't have a sleep function -- as it's single threaded (if that makes no sense, ask).",
						"new-value": "Sleep in node: const sleep = require('util').promisify(setTimeout); Sleep in browser: const sleep = t => new Promise(r => setTimeout(r, t)); Blocking sleep can be performed with Atomics.wait()"
					}
				]
			}
		},
		{
			"date": "2019-09-21T16:51:42.334Z",
			"editor": "MJCD",
			"key": "sleep",
			"value": {
				"value": "Sleep in node: const sleep = require('util').promisify(setTimeout); Sleep in browser: const sleep = t => new Promise(r => setTimeout(r, t)); Blocking sleep can be performed with Atomics.wait()",
				"creator": "graingert",
				"date": "2019-09-21T16:51:25.971Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-09-28T04:04:24.381Z",
			"editor": "ljharb",
			"key": "orm",
			"value": {
				"value": "Object-Relational-Messing",
				"creator": "qswz",
				"date": "2019-09-04T15:02:01.129Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-09-28T04:04:52.973Z",
			"editor": "ljharb",
			"key": "soe",
			"value": {
				"value": "Software operating environment - inclusive of operating system",
				"creator": "MJCD",
				"date": "2019-09-07T14:56:02.291Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-09-28T04:04:54.570Z",
			"editor": "ljharb",
			"key": "waf",
			"value": {
				"value": "Web Application Firewall",
				"creator": "MJCD",
				"date": "2019-09-07T15:17:12.930Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-09-28T04:04:59.322Z",
			"editor": "ljharb",
			"key": "it's excel",
			"value": {
				"value": "Got an error that's related to excels data methods? Ofcourse you do, it's EXCEL. More @ \"!the niggler paradox\"",
				"creator": "MJCDawy",
				"date": "2019-09-12T13:48:34.405Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-09-28T04:05:10.252Z",
			"editor": "ljharb",
			"key": "spinningcat",
			"value": {
				"value": "no one should reply to spinningCat until he provides a paste with relevant context",
				"creator": "qswz",
				"date": "2019-09-16T15:32:36.076Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-09-28T04:05:40.611Z",
			"editor": "ljharb",
			"key": "heroku",
			"value": {
				"value": "npm i  -g heroku && heroku -i login && heroku git:clone  <yourapp>  ..  // iirc .. when u got that.. you should be able to: git add -A && git commit -m blah &&  git push  heroku master",
				"creator": "earend1",
				"date": "2019-09-23T14:46:50.335Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-09-29T19:38:56.053Z",
			"editor": "MJCD",
			"key": "w3fools",
			"value": {
				"alias": "w3schools",
				"creator": "ljharb",
				"date": "2017-10-30T22:36:27.304Z",
				"popularity": 23,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-09-30T16:43:08.054Z",
			"editor": "MJCD",
			"key": "simpsons did it",
			"value": {
				"value": "search",
				"creator": "MJCD",
				"date": "2019-09-30T16:43:00.203Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-09-30T16:45:07.852Z",
			"editor": "ljharb",
			"key": "simpsons did it",
			"value": {
				"alias": "search",
				"creator": "MJCD",
				"date": "2019-09-30T16:43:19.267Z",
				"popularity": 0,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-10-01T07:46:41.307Z",
			"editor": "ljharb",
			"key": "dismissed",
			"value": {
				"value": "Don't be dismissive of things that are different than your opinion, especially if it's a) explained (only to be dismissed) b) stated as merely somebody elses opinion. This is extremely offensive social behaviour. Be nice, let people have their !subjective opinions.",
				"creator": "MJCD",
				"date": "2019-10-01T07:43:51.649Z",
				"popularity": 2,
				"editors": [
					"MJCD"
				],
				"changes": [
					{
						"date": "2019-10-01T07:46:17.174Z",
						"editor": "MJCD",
						"old-value": "Don't be dismissive of things that are different than your opinion, especially if it's a) explained (only to be dismissed) b) stated as merely somebody elses opinion. This is extremely offensive social behaviour. Be nice, let people have their !subjective opinions.",
						"new-value": "Don't be dismissive of things that are different than your opinion, especially if it's a) explained (only to be dismissed) b) stated as merely somebody elses opinion. This is extremely offensive social behaviour. Be nice, let people have their !subjective opinions."
					}
				]
			}
		},
		{
			"date": "2019-10-03T21:03:34.265Z",
			"editor": "ljharb",
			"key": "dismissed",
			"value": {
				"value": "Don't be dismissive of things that are different than your opinion, especially if it's a) explained (only to be dismissed) b) stated as merely somebody elses opinion. This is extremely offensive social behaviour. Be nice, let people have their !subjective opinions.",
				"creator": "MJCD",
				"date": "2019-10-01T07:47:10.202Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-10-04T00:01:38.914Z",
			"editor": "ljharb",
			"key": "immutable",
			"value": {
				"value": "please do not mutate here!",
				"creator": "incognito",
				"date": "2019-10-03T21:02:16.172Z",
				"popularity": 1,
				"editors": [],
				"changes": []
			}
		},
		{
			"date": "2019-10-09T11:56:45.954Z",
			"editor": "niggler",
			"key": "arrays",
			"value": {
				"value": "https://developer.mozilla.org/en/JavaScript/Guide/Predefined_Core_Objects#Array_Object",
				"popularity": 9
			}
		},
		{
			"date": "2019-10-10T23:09:32.022Z",
			"editor": "niggler",
			"key": "spelling",
			"value": {
				"value": "Spelling and capitalization are important in programming, unless you are using PHP.",
				"popularity": 23
			}
		},
		{
			"date": "2019-10-10T23:09:34.465Z",
			"editor": "ljharb",
			"key": "no",
			"value": {
				"value": "Don't make shit up.",
				"popularity": 25
			}
		}
	]
}